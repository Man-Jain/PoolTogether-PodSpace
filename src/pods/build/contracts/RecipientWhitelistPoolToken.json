{
  "contractName": "RecipientWhitelistPoolToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "RecipientWhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "WhitelistEnabled",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "defaultOperators",
          "type": "address[]"
        },
        {
          "internalType": "contract BasePool",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorRedeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract BasePool",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "poolMint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "poolRedeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "recipientWhitelistEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "recipientWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "setRecipientWhitelistEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_whitelisted",
          "type": "bool"
        }
      ],
      "name": "setRecipientWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"RecipientWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"WhitelistEnabled\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultOperators\",\"type\":\"address[]\"},{\"internalType\":\"contract BasePool\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorRedeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract BasePool\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"poolMint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"poolRedeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"recipientWhitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recipientWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setRecipientWhitelistEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelisted\",\"type\":\"bool\"}],\"name\":\"setRecipientWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Brendan Asselstine\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.    * Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.    * Note that accounts cannot have allowance issued by their operators.\"},\"authorizeOperator(address)\":{\"details\":\"See {IERC777-authorizeOperator}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256,bytes)\":{\"details\":\"See {IERC777-burn}.  Not currently implemented.    * Also emits a {Transfer} event for ERC20 compatibility.\"},\"decimals()\":{\"details\":\"See {ERC20Detailed-decimals}.    * Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"defaultOperators()\":{\"details\":\"See {IERC777-defaultOperators}.\"},\"granularity()\":{\"details\":\"See {IERC777-granularity}.    * This implementation always returns `1`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"init(string,string,address[],address)\":{\"params\":{\"defaultOperators\":\"The default operators who are allowed to move tokens\",\"name\":\"The name of the token\",\"symbol\":\"The token symbol\"}},\"isOperatorFor(address,address)\":{\"details\":\"See {IERC777-isOperatorFor}.\"},\"name()\":{\"details\":\"See {IERC777-name}.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorBurn}.    * Currently not supported\"},\"operatorRedeem(address,uint256,bytes,bytes)\":{\"details\":\"Allows an operator to redeem tokens for the underlying asset on behalf of a user.    * Emits {Redeemed} and {Transfer} events.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorSend}.    * Emits {Sent} and {Transfer} events.\"},\"pool()\":{\"return\":\"The address of the pool contract\"},\"poolMint(uint256)\":{\"params\":{\"amount\":\"The amount that was minted\"}},\"poolRedeem(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to redeem\",\"from\":\"The address from which to redeem tokens\"}},\"recipientWhitelistEnabled()\":{\"return\":\"True if whitelist enabled, false otherwise.\"},\"recipientWhitelisted(address)\":{\"return\":\"True if the recipient has been whitelisted, false otherwise.\"},\"redeem(uint256,bytes)\":{\"details\":\"Allows a user to withdraw their tokens as the underlying asset.    * Also emits a {Transfer} event for ERC20 compatibility.\"},\"revokeOperator(address)\":{\"details\":\"See {IERC777-revokeOperator}.\"},\"send(address,uint256,bytes)\":{\"details\":\"See {IERC777-send}.    * Also emits a {Transfer} event for ERC20 compatibility.\"},\"setRecipientWhitelistEnabled(bool)\":{\"params\":{\"_enabled\":\"True if whitelisting should be enabled, false otherwise\"}},\"setRecipientWhitelisted(address,bool)\":{\"params\":{\"_recipient\":\"The recipient to whitelist\",\"_whitelisted\":\"True if the recipient should be whitelisted, false otherwise\"}},\"symbol()\":{\"details\":\"See {IERC777-symbol}.\"},\"totalSupply()\":{\"details\":\"See {IERC777-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.    * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract.    * Also emits a {Sent} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.  * Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators).  * Emits {Sent}, {Transfer} and {Approval} events.\"}},\"title\":\"RecipientWhitelistPoolToken\"},\"userdoc\":{\"methods\":{\"init(string,string,address[],address)\":{\"notice\":\"Initializes the PoolToken.\"},\"pool()\":{\"notice\":\"Returns the address of the Pool contract\"},\"poolMint(uint256)\":{\"notice\":\"Called by the associated Pool to emit `Mint` events.\"},\"poolRedeem(address,uint256)\":{\"notice\":\"Calls the ERC777 transfer hook, and emits Redeemed and Transfer.  Can only be called by the Pool contract.\"},\"recipientWhitelistEnabled()\":{\"notice\":\"Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens. Otherwise if the whitelist is not enabled anyone is able to receive tokens.\"},\"recipientWhitelisted(address)\":{\"notice\":\"Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not.\"},\"setRecipientWhitelistEnabled(bool)\":{\"notice\":\"Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin.\"},\"setRecipientWhitelisted(address,bool)\":{\"notice\":\"Sets whether the recipient should be whitelisted.  Only callable by the Pool admin.\"}},\"notice\":\"Allows the pool admins to only allow token transfers to particular addresses.\"}},\"settings\":{\"compilationTarget\":{\"@pooltogether/pooltogether-contracts/contracts/RecipientWhitelistPoolToken.sol\":\"RecipientWhitelistPoolToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@deltacamp/kleros/contracts/data-structures/SortitionSumTreeFactory.sol\":{\"keccak256\":\"0x42614530f33b32e10cba4b1de0c3ecf6ff2e58599d8ff7ff1556052df02546d1\",\"urls\":[\"bzz-raw://505e577de7d8df1dc385e88109e64786c2224c5567896f4155b99534f9fc57b5\",\"dweb:/ipfs/QmQLLX6ZNxsjDEMzsBxASw9j1WTRetDzmZDJVdDmDao81Y\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x03c69b91f23efafb5d460b32520ac5066a084347733de3078cf2ba9b33397945\",\"urls\":[\"bzz-raw://2bed1580fb9b2ea946b2709cfccdc43aa2ed0089f61fb94201f385b297d027c2\",\"dweb:/ipfs/QmR2ogAcEAAiM5A4gHFTiQemYuZpVriei5Ud26j4YSQcfc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x01d1e2116e2d3a45d066969cf500da0648cb4903b885589021eaeb89f325d70f\",\"urls\":[\"bzz-raw://6783602f84db63a7fd140df918cd12b91d56a57b1f90b1f5f25798c3d7602987\",\"dweb:/ipfs/QmbDjeBQQguEsQWsfSd6WeKD5hGDhBdUFUX9KHMy3w5evz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x6b097bc7c7762b5ad4a7447755e3654ada71d1c10f40c0ad5a4f820892f67edf\",\"urls\":[\"bzz-raw://299e4189bf254f1df707ad2366ed41c91440eb58b6e937e46b7b349ba1124afb\",\"dweb:/ipfs/QmcQHnb9mZ3ibkzpsUfyCYobavoS5gwPhPBasomxNnsycj\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0xabd5c2413dd920a9737db506fd8691e147f010fe30e3cef33a6a2c89288f15f3\",\"urls\":[\"bzz-raw://6a3165a338de13310cf58d9e2be4afc2c7ddf44beb3a2115e5cc43286553cf65\",\"dweb:/ipfs/QmNPNSWc5yX5D3gkZnzd95JX2r2L87iSWVu8CbundMj94n\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@pooltogether/pooltogether-contracts/contracts/BasePool.sol\":{\"keccak256\":\"0x9020308e3a615f59bb2d01b91150a2b3e463268a53d1fd7e687cf024d4f7a9d0\",\"urls\":[\"bzz-raw://cc85dcade9f882befa8062997718a06719ae8a6f1342227ccaa7c74c93b06463\",\"dweb:/ipfs/QmVvWMgFueyqgFoxwsf7f3bDoMKSKfbePVAuNkrsm6PJXo\"]},\"@pooltogether/pooltogether-contracts/contracts/Blocklock.sol\":{\"keccak256\":\"0x158e97130210f3580c43fce4ce288ea17e6d5f9d58a325b40402d889db00942e\",\"urls\":[\"bzz-raw://c1eddcab7465c39306d2ab91b2cc087bc7853dc7f667f0962934424ca0005196\",\"dweb:/ipfs/QmZFFnDcssFD1Xds1RmRvbWSbNjoioGZiP6sHKUV8SqCk9\"]},\"@pooltogether/pooltogether-contracts/contracts/DrawManager.sol\":{\"keccak256\":\"0xb90436524adbc8d8540ceb1a46b02b784b36dc96da64590b2b17e8e162327a11\",\"urls\":[\"bzz-raw://feaa738fc2f23700a0fb08b8c3841e24af443e3e282bed4ec99f2bbf9fc8aa85\",\"dweb:/ipfs/QmNswHbzyR3MRtTPAJ2DVaVnRLstNQNf7n3C7xrs89LKu6\"]},\"@pooltogether/pooltogether-contracts/contracts/PoolToken.sol\":{\"keccak256\":\"0xfe844eff920f3adf328286ff1bf531b6e586b575f82810123e72eca9235c1693\",\"urls\":[\"bzz-raw://f5d80d253f279c451870d9ed670179d9169a91ecf36dcfa00f95b7383df84ee0\",\"dweb:/ipfs/Qmd87yqYVzDYvXVQRogamyr8HtDVnCZeDFmqzhDyyfPpjk\"]},\"@pooltogether/pooltogether-contracts/contracts/RecipientWhitelistPoolToken.sol\":{\"keccak256\":\"0x2a9f39d86b07105775ad62c6b2953588d1d8bbc0ab76f9901e7091852aaa05ed\",\"urls\":[\"bzz-raw://2eb2a9648c0e9307d06515a21d62bc8c956ed913f1c2bb783fea0e7546e918cf\",\"dweb:/ipfs/QmUr8wQXk8WQTvueYuvy5JPuYHu6C9zvi3rNiFZkEnNzQq\"]},\"@pooltogether/pooltogether-contracts/contracts/UniformRandomNumber.sol\":{\"keccak256\":\"0x3da93664cd691eeab755215900bf807b9eda48675f6a3352c48f00c76d64c0fe\",\"urls\":[\"bzz-raw://395e8565cbd4bcf2b52f2ca54f57bd698b0aafa9a3cb2c2529fd365aa5377001\",\"dweb:/ipfs/QmeYh6NZTNjwvmCWx2HhPpK7aKruckjffcqdXkYRbb1uBX\"]},\"@pooltogether/pooltogether-contracts/contracts/compound/ICErc20.sol\":{\"keccak256\":\"0xd3179b29bdebb875acd0f6785089865665a77a7ebef7af49148ef570b5aa3299\",\"urls\":[\"bzz-raw://76445d294ee21c23039e42464c4e6cb4e7ad4670ffdd1fb9e7831abfa22bd0c3\",\"dweb:/ipfs/QmXGHtodEpTBMMd2yzPaKme758rVbjub4oYwg2tXSYp5Jp\"]},\"fixidity/contracts/FixidityLib.sol\":{\"keccak256\":\"0x4c7bbef8a69774e26fd25e3b22e323ec2cf7a5597de19ad525949db97b8e5ec3\",\"urls\":[\"bzz-raw://76ff3484d58b722e62b6c8b705ed8f67e92fd0ed1f3d41033f20f84efa8da2c0\",\"dweb:/ipfs/QmTtJ75geNDPcxEG66dWsvh5u3PF9xz2D7LAjqArTJaqwG\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612df0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063959b8c3f11610104578063c8cb23f8116100a2578063e77c646d11610071578063e77c646d14610972578063fad8b32a146109e7578063fc673c4f14610a0d578063fe9d930314610ae0576101da565b8063c8cb23f814610815578063d7d5b92814610843578063d95b637114610916578063dd62ed3e14610944576101da565b8063a3594709116100de578063a359470914610781578063a457c2d71461079e578063a884b930146107ca578063a9059cbb146107e9576101da565b8063959b8c3f146106d057806395d89b41146106f65780639bd9bbc6146106fe576101da565b8063313ce5671161017c578063625cbfae1161014b578063625cbfae1461040e57806362ad1b831461041657806370a08231146104f457806388a8a9191461051a576101da565b8063313ce5671461039657806339509351146103b45780634bf67fa6146103e0578063556f0dc714610406576101da565b806314274ad9116101b857806314274ad9146102f457806316f0115b1461032257806318160ddd1461034657806323b872dd14610360576101da565b806306e48538146101df57806306fdde0314610237578063095ea7b3146102b4575b600080fd5b6101e7610b17565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561022357818101518382015260200161020b565b505050509050019250505060405180910390f35b61023f610b7a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610279578181015183820152602001610261565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e0600480360360408110156102ca57600080fd5b506001600160a01b038135169060200135610c07565b604080519115158252519081900360200190f35b6103206004803603604081101561030a57600080fd5b506001600160a01b038135169060200135610c1f565b005b61032a610d30565b604080516001600160a01b039092168252519081900360200190f35b61034e610d3f565b60408051918252519081900360200190f35b6102e06004803603606081101561037657600080fd5b506001600160a01b03813581169160208101359091169060400135610db5565b61039e610f5f565b6040805160ff9092168252519081900360200190f35b6102e0600480360360408110156103ca57600080fd5b506001600160a01b038135169060200135610f64565b6102e0600480360360208110156103f657600080fd5b50356001600160a01b0316610fa9565b61034e610fc7565b6102e0610fcc565b610320600480360360a081101561042c57600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561046657600080fd5b82018360208201111561047857600080fd5b803590602001918460018302840111600160201b8311171561049957600080fd5b919390929091602081019035600160201b8111156104b657600080fd5b8201836020820111156104c857600080fd5b803590602001918460018302840111600160201b831117156104e957600080fd5b509092509050610fdc565b61034e6004803603602081101561050a57600080fd5b50356001600160a01b03166110b0565b6103206004803603608081101561053057600080fd5b810190602081018135600160201b81111561054a57600080fd5b82018360208201111561055c57600080fd5b803590602001918460018302840111600160201b8311171561057d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156105cf57600080fd5b8201836020820111156105e157600080fd5b803590602001918460018302840111600160201b8311171561060257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561065457600080fd5b82018360208201111561066657600080fd5b803590602001918460208302840111600160201b8311171561068757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506111339050565b610320600480360360208110156106e657600080fd5b50356001600160a01b0316611496565b61023f6115a3565b6103206004803603606081101561071457600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561074357600080fd5b82018360208201111561075557600080fd5b803590602001918460018302840111600160201b8311171561077657600080fd5b509092509050611604565b6103206004803603602081101561079757600080fd5b503561165b565b6102e0600480360360408110156107b457600080fd5b506001600160a01b0381351690602001356116e8565b610320600480360360208110156107e057600080fd5b50351515611750565b6102e0600480360360408110156107ff57600080fd5b506001600160a01b03813516906020013561187a565b6103206004803603604081101561082b57600080fd5b506001600160a01b0381351690602001351515611962565b6103206004803603608081101561085957600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561088857600080fd5b82018360208201111561089a57600080fd5b803590602001918460018302840111600160201b831117156108bb57600080fd5b919390929091602081019035600160201b8111156108d857600080fd5b8201836020820111156108ea57600080fd5b803590602001918460018302840111600160201b8311171561090b57600080fd5b509092509050611a97565b6102e06004803603604081101561092c57600080fd5b506001600160a01b0381358116916020013516611b69565b61034e6004803603604081101561095a57600080fd5b506001600160a01b0381358116916020013516611c0b565b6103206004803603604081101561098857600080fd5b81359190810190604081016020820135600160201b8111156109a957600080fd5b8201836020820111156109bb57600080fd5b803590602001918460018302840111600160201b831117156109dc57600080fd5b509092509050611c36565b610320600480360360208110156109fd57600080fd5b50356001600160a01b0316611c8b565b61032060048036036080811015610a2357600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610a5257600080fd5b820183602082011115610a6457600080fd5b803590602001918460018302840111600160201b83111715610a8557600080fd5b919390929091602081019035600160201b811115610aa257600080fd5b820183602082011115610ab457600080fd5b803590602001918460018302840111600160201b83111715610ad557600080fd5b509092509050611d9a565b61032060048036036040811015610af657600080fd5b81359190810190604081016020820135600160201b811115610aa257600080fd5b60606035805480602002602001604051908101604052809291908181526020018280548015610b6f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b51575b505050505090505b90565b60338054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610b6f5780601f10610bdb57610100808354040283529160200191610b6f565b820191906000526020600020905b815481529060010190602001808311610be957509395945050505050565b600033610c15818585611dde565b5060019392505050565b603a546001600160a01b03163314610c74576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bdbdb9b1e4b5c1bdbdb606a1b604482015290519081900360640190fd5b610ca182836000846040518060200160405280600081525060405180602001604052806000815250611e91565b60408051828152606060208201819052600090820181905260a082840181905282015290516001600160a01b0384169182917f1f58e3485c3f6fc2bddf52e2bd0d82ad5c19e1ac9ab403b1aa9f0a1794d2bfb69181900360e00190a36040805182815290516000916001600160a01b03851691600080516020612d9c8339815191529181900360200190a35050565b603a546001600160a01b031690565b603a5460408051633a3c267d60e21b815290516000926001600160a01b03169163e8f099f4916004808301926020929190829003018186803b158015610d8457600080fd5b505afa158015610d98573d6000803e3d6000fd5b505050506040513d6020811015610dae57600080fd5b5051905090565b60006001600160a01b038316610e06576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c546f6b656e2f746f2d7a65726f60781b604482015290519081900360640190fd5b6001600160a01b038416610e57576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6000339050610e88818686866040518060200160405280600081525060405180602001604052806000815250611e91565b610eb4818686866040518060200160405280600081525060405180602001604052806000815250611f20565b6040805180820182526016815275506f6f6c546f6b656e2f6578636565642d616c6c6f7760501b6020808301919091526001600160a01b03808916600090815260398352848120918616815291529190912054610f269187918491610f219190889063ffffffff61210d16565b611dde565b610f5481868686604051806020016040528060008152506040518060200160405280600081525060006121a4565b506001949350505050565b601290565b3360008181526039602090815260408083206001600160a01b03871684529091528120549091610fa0918590610f21908663ffffffff61245a16565b50600192915050565b6001600160a01b03166000908152603b602052604090205460ff1690565b600190565b603a54600160a01b900460ff1690565b610fe63388611b69565b611030576040805162461bcd60e51b81526020600482015260166024820152752837b7b62a37b5b2b717b737ba16b7b832b930ba37b960511b604482015290519081900360640190fd5b6110a73388888888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a91508990819084018382808284376000920191909152506124b492505050565b50505050505050565b603a54604080516379f0877160e01b81526001600160a01b038481166004830152915160009392909216916379f0877191602480820192602092909190829003018186803b15801561110157600080fd5b505afa158015611115573d6000803e3d6000fd5b505050506040513d602081101561112b57600080fd5b505192915050565b600054610100900460ff168061114c575061114c612580565b8061115a575060005460ff16155b6111955760405162461bcd60e51b815260040180806020018281038252602e815260200180612d6e602e913960400191505060405180910390fd5b600054610100900460ff161580156111c0576000805460ff1961ff0019909116610100171660011790555b8451611204576040805162461bcd60e51b815260206004820152600e60248201526d506f6f6c546f6b656e2f6e616d6560901b604482015290519081900360640190fd5b835161124a576040805162461bcd60e51b815260206004820152601060248201526f141bdbdb151bdad95b8bdcde5b589bdb60821b604482015290519081900360640190fd5b6001600160a01b03821661129b576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f706f6f6c2d7a65726f60681b604482015290519081900360640190fd5b84516112ae906033906020880190612c50565b5083516112c2906034906020870190612c50565b50603a80546001600160a01b0319166001600160a01b03841617905582516112f1906035906020860190612cce565b5060005b60355481101561134e576001603660006035848154811061131257fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790556001016112f5565b50604080516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad24916329965a1d91606480830192600092919082900301818387803b1580156113ce57600080fd5b505af11580156113e2573d6000803e3d6000fd5b5050604080516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad2493506329965a1d9250606480830192600092919082900301818387803b15801561146557600080fd5b505af1158015611479573d6000803e3d6000fd5b50505050801561148f576000805461ff00191690555b5050505050565b336001600160a01b03821614156114ea576040805162461bcd60e51b81526020600482015260136024820152722837b7b62a37b5b2b717b0baba3416b9b2b63360691b604482015290519081900360640190fd5b6001600160a01b03811660009081526036602052604090205460ff161561153b573360009081526038602090815260408083206001600160a01b03851684529091529020805460ff1916905561156a565b3360009081526037602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b60348054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610b6f5780601f10610bdb57610100808354040283529160200191610b6f565b6116553333868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506124b4915050565b50505050565b603a546001600160a01b031633146116b0576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bdbdb9b1e4b5c1bdbdb606a1b604482015290519081900360640190fd5b603a546040805160208082018352600080835283519182019093529182526116e5926001600160a01b03169182918591612586565b50565b6040805180820182526012815271506f6f6c546f6b656e2f6e6567617469766560701b602080830191909152336000818152603983528481206001600160a01b0388168252909252928120549092610fa09290918691610f219190879063ffffffff61210d16565b611758610d30565b6001600160a01b03166324d7806c336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156117ad57600080fd5b505afa1580156117c1573d6000803e3d6000fd5b505050506040513d60208110156117d757600080fd5b5051611824576040805162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba2a37b5b2b717b4b996b0b236b4b760491b604482015290519081900360640190fd5b603a8054821515600160a01b810260ff60a01b1990921691909117909155604080519182525133917f643561a6454325dc43853b954eb9350a955ea80047c134c779c055bcbf459137919081900360200190a250565b60006001600160a01b0383166118d7576040805162461bcd60e51b815260206004820152601760248201527f506f6f6c546f6b656e2f7472616e736665722d7a65726f000000000000000000604482015290519081900360640190fd5b6000339050611908818286866040518060200160405280600081525060405180602001604052806000815250611e91565b611934818286866040518060200160405280600081525060405180602001604052806000815250611f20565b610c1581828686604051806020016040528060008152506040518060200160405280600081525060006121a4565b61196a610d30565b6001600160a01b03166324d7806c336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156119bf57600080fd5b505afa1580156119d3573d6000803e3d6000fd5b505050506040513d60208110156119e957600080fd5b5051611a36576040805162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba2a37b5b2b717b4b996b0b236b4b760491b604482015290519081900360640190fd5b6001600160a01b0382166000818152603b6020908152604091829020805460ff19168515159081179091558251908152915133927f0a40230cc5a9cbd3edc99d49ffd13beb7dc906030a2dde3b53a53b62fc8979cd92908290030190a35050565b611aa13387611b69565b611aeb576040805162461bcd60e51b81526020600482015260166024820152752837b7b62a37b5b2b717b737ba16b7b832b930ba37b960511b604482015290519081900360640190fd5b611b6133878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b0181900481028201810190925289815292508991508890819084018382808284376000920191909152506126d892505050565b505050505050565b6000816001600160a01b0316836001600160a01b03161480611bd457506001600160a01b03831660009081526036602052604090205460ff168015611bd457506001600160a01b0380831660009081526038602090815260408083209387168352929052205460ff16155b80611c0457506001600160a01b0380831660009081526037602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b03918216600090815260396020908152604080832093909416825291909152205490565b611c8633338585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506126d8915050565b505050565b6001600160a01b038116331415611ce1576040805162461bcd60e51b81526020600482015260156024820152742837b7b62a37b5b2b717b932bb37b5b296b9b2b63360591b604482015290519081900360640190fd5b6001600160a01b03811660009081526036602052604090205460ff1615611d35573360009081526038602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611d61565b3360009081526037602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b6040805162461bcd60e51b8152602060048201526014602482015273141bdbdb151bdad95b8bdb9bcb5cdd5c1c1bdc9d60621b604482015290519081900360640190fd5b6001600160a01b038216611e2f576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6001600160a01b03808416600081815260396020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b603a54600160a01b900460ff1615611f12576001600160a01b0384161580611ed157506001600160a01b0384166000908152603b602052604090205460ff165b611f12576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bdb9bdd0b5b1a5cdd609a1b604482015290519081900360640190fd5b611b6186868686868661290b565b603a5460408051639e63a8c560e01b81526001600160a01b03888116600483015287811660248301526044820187905291519190921691639e63a8c59160648083019260209291908290030181600087803b158015611f7e57600080fd5b505af1158015611f92573d6000803e3d6000fd5b505050506040513d6020811015611fa857600080fd5b5050604080518481526060602082810182815286519284019290925285516001600160a01b03808a16958b821695918d16947f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987948b948b948b9490939290840191608085019187019080838360005b8381101561202f578181015183820152602001612017565b50505050905090810190601f16801561205c5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561208f578181015183820152602001612077565b50505050905090810190601f1680156120bc5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a4836001600160a01b0316856001600160a01b0316600080516020612d9c833981519152856040518082815260200191505060405180910390a3505050505050565b6000818484111561219c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612161578181015183820152602001612149565b50505050905090810190601f16801561218e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6040805163555ddc6560e11b81526001600160a01b03871660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b15801561222857600080fd5b505afa15801561223c573d6000803e3d6000fd5b505050506040513d602081101561225257600080fd5b505190506001600160a01b038116156123e657806001600160a01b03166223de298989898989896040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156123175781810151838201526020016122ff565b50505050905090810190601f1680156123445780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561237757818101518382015260200161235f565b50505050905090810190601f1680156123a45780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b1580156123c957600080fd5b505af11580156123dd573d6000803e3d6000fd5b50505050612450565b8115612450576123fe866001600160a01b0316612c14565b15612450576040805162461bcd60e51b815260206004820152601860248201527f506f6f6c546f6b656e2f6e6f2d72656369702d696e7465720000000000000000604482015290519081900360640190fd5b5050505050505050565b600082820183811015611c04576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038516612505576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6001600160a01b038416612554576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c546f6b656e2f746f2d7a65726f60781b604482015290519081900360640190fd5b612562868686868686611e91565b612570868686868686611f20565b611b6186868686868660006121a4565b303b1590565b836001600160a01b0316856001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d858585604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156126055781810151838201526020016125ed565b50505050905090810190601f1680156126325780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561266557818101518382015260200161264d565b50505050905090810190601f1680156126925780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a36040805184815290516001600160a01b03861691600091600080516020612d9c8339815191529181900360200190a35050505050565b6001600160a01b038416612729576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b61273885856000868686611e91565b603a546040805163a423cd2960e01b81526001600160a01b038781166004830152602482018790529151919092169163a423cd299160448083019260209291908290030181600087803b15801561278e57600080fd5b505af11580156127a2573d6000803e3d6000fd5b505050506040513d60208110156127b857600080fd5b5050604080518481526060602082810182815286519284019290925285516001600160a01b03808a1695908b16947f1f58e3485c3f6fc2bddf52e2bd0d82ad5c19e1ac9ab403b1aa9f0a1794d2bfb6948a948a948a9484019160808501919087019080838360005b83811015612838578181015183820152602001612820565b50505050905090810190601f1680156128655780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612898578181015183820152602001612880565b50505050905090810190601f1680156128c55780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a36040805184815290516000916001600160a01b03871691600080516020612d9c8339815191529181900360200190a35050505050565b603a60009054906101000a90046001600160a01b03166001600160a01b031663a4e2d6346040518163ffffffff1660e01b815260040160206040518083038186803b15801561295957600080fd5b505afa15801561296d573d6000803e3d6000fd5b505050506040513d602081101561298357600080fd5b5051156129cd576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bda5ccb5b1bd8dad959606a1b604482015290519081900360640190fd5b6040805163555ddc6560e11b81526001600160a01b03871660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b158015612a5157600080fd5b505afa158015612a65573d6000803e3d6000fd5b505050506040513d6020811015612a7b57600080fd5b505190506001600160a01b038116156110a757806001600160a01b03166375ab97828888888888886040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015612b41578181015183820152602001612b29565b50505050905090810190601f168015612b6e5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612ba1578181015183820152602001612b89565b50505050905090810190601f168015612bce5780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b158015612bf357600080fd5b505af1158015612c07573d6000803e3d6000fd5b5050505050505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590612c4857508115155b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c9157805160ff1916838001178555612cbe565b82800160010185558215612cbe579182015b82811115612cbe578251825591602001919060010190612ca3565b50612cca929150612d2f565b5090565b828054828255906000526020600020908101928215612d23579160200282015b82811115612d2357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612cee565b50612cca929150612d49565b610b7791905b80821115612cca5760008155600101612d35565b610b7791905b80821115612cca5780546001600160a01b0319168155600101612d4f56fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa265627a7a72315820dee81670b661abd0414fcc9447911b149df188437e43cc150959049d4207168464736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c8063959b8c3f11610104578063c8cb23f8116100a2578063e77c646d11610071578063e77c646d14610972578063fad8b32a146109e7578063fc673c4f14610a0d578063fe9d930314610ae0576101da565b8063c8cb23f814610815578063d7d5b92814610843578063d95b637114610916578063dd62ed3e14610944576101da565b8063a3594709116100de578063a359470914610781578063a457c2d71461079e578063a884b930146107ca578063a9059cbb146107e9576101da565b8063959b8c3f146106d057806395d89b41146106f65780639bd9bbc6146106fe576101da565b8063313ce5671161017c578063625cbfae1161014b578063625cbfae1461040e57806362ad1b831461041657806370a08231146104f457806388a8a9191461051a576101da565b8063313ce5671461039657806339509351146103b45780634bf67fa6146103e0578063556f0dc714610406576101da565b806314274ad9116101b857806314274ad9146102f457806316f0115b1461032257806318160ddd1461034657806323b872dd14610360576101da565b806306e48538146101df57806306fdde0314610237578063095ea7b3146102b4575b600080fd5b6101e7610b17565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561022357818101518382015260200161020b565b505050509050019250505060405180910390f35b61023f610b7a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610279578181015183820152602001610261565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e0600480360360408110156102ca57600080fd5b506001600160a01b038135169060200135610c07565b604080519115158252519081900360200190f35b6103206004803603604081101561030a57600080fd5b506001600160a01b038135169060200135610c1f565b005b61032a610d30565b604080516001600160a01b039092168252519081900360200190f35b61034e610d3f565b60408051918252519081900360200190f35b6102e06004803603606081101561037657600080fd5b506001600160a01b03813581169160208101359091169060400135610db5565b61039e610f5f565b6040805160ff9092168252519081900360200190f35b6102e0600480360360408110156103ca57600080fd5b506001600160a01b038135169060200135610f64565b6102e0600480360360208110156103f657600080fd5b50356001600160a01b0316610fa9565b61034e610fc7565b6102e0610fcc565b610320600480360360a081101561042c57600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561046657600080fd5b82018360208201111561047857600080fd5b803590602001918460018302840111600160201b8311171561049957600080fd5b919390929091602081019035600160201b8111156104b657600080fd5b8201836020820111156104c857600080fd5b803590602001918460018302840111600160201b831117156104e957600080fd5b509092509050610fdc565b61034e6004803603602081101561050a57600080fd5b50356001600160a01b03166110b0565b6103206004803603608081101561053057600080fd5b810190602081018135600160201b81111561054a57600080fd5b82018360208201111561055c57600080fd5b803590602001918460018302840111600160201b8311171561057d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156105cf57600080fd5b8201836020820111156105e157600080fd5b803590602001918460018302840111600160201b8311171561060257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561065457600080fd5b82018360208201111561066657600080fd5b803590602001918460208302840111600160201b8311171561068757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506111339050565b610320600480360360208110156106e657600080fd5b50356001600160a01b0316611496565b61023f6115a3565b6103206004803603606081101561071457600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561074357600080fd5b82018360208201111561075557600080fd5b803590602001918460018302840111600160201b8311171561077657600080fd5b509092509050611604565b6103206004803603602081101561079757600080fd5b503561165b565b6102e0600480360360408110156107b457600080fd5b506001600160a01b0381351690602001356116e8565b610320600480360360208110156107e057600080fd5b50351515611750565b6102e0600480360360408110156107ff57600080fd5b506001600160a01b03813516906020013561187a565b6103206004803603604081101561082b57600080fd5b506001600160a01b0381351690602001351515611962565b6103206004803603608081101561085957600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561088857600080fd5b82018360208201111561089a57600080fd5b803590602001918460018302840111600160201b831117156108bb57600080fd5b919390929091602081019035600160201b8111156108d857600080fd5b8201836020820111156108ea57600080fd5b803590602001918460018302840111600160201b8311171561090b57600080fd5b509092509050611a97565b6102e06004803603604081101561092c57600080fd5b506001600160a01b0381358116916020013516611b69565b61034e6004803603604081101561095a57600080fd5b506001600160a01b0381358116916020013516611c0b565b6103206004803603604081101561098857600080fd5b81359190810190604081016020820135600160201b8111156109a957600080fd5b8201836020820111156109bb57600080fd5b803590602001918460018302840111600160201b831117156109dc57600080fd5b509092509050611c36565b610320600480360360208110156109fd57600080fd5b50356001600160a01b0316611c8b565b61032060048036036080811015610a2357600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610a5257600080fd5b820183602082011115610a6457600080fd5b803590602001918460018302840111600160201b83111715610a8557600080fd5b919390929091602081019035600160201b811115610aa257600080fd5b820183602082011115610ab457600080fd5b803590602001918460018302840111600160201b83111715610ad557600080fd5b509092509050611d9a565b61032060048036036040811015610af657600080fd5b81359190810190604081016020820135600160201b811115610aa257600080fd5b60606035805480602002602001604051908101604052809291908181526020018280548015610b6f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b51575b505050505090505b90565b60338054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610b6f5780601f10610bdb57610100808354040283529160200191610b6f565b820191906000526020600020905b815481529060010190602001808311610be957509395945050505050565b600033610c15818585611dde565b5060019392505050565b603a546001600160a01b03163314610c74576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bdbdb9b1e4b5c1bdbdb606a1b604482015290519081900360640190fd5b610ca182836000846040518060200160405280600081525060405180602001604052806000815250611e91565b60408051828152606060208201819052600090820181905260a082840181905282015290516001600160a01b0384169182917f1f58e3485c3f6fc2bddf52e2bd0d82ad5c19e1ac9ab403b1aa9f0a1794d2bfb69181900360e00190a36040805182815290516000916001600160a01b03851691600080516020612d9c8339815191529181900360200190a35050565b603a546001600160a01b031690565b603a5460408051633a3c267d60e21b815290516000926001600160a01b03169163e8f099f4916004808301926020929190829003018186803b158015610d8457600080fd5b505afa158015610d98573d6000803e3d6000fd5b505050506040513d6020811015610dae57600080fd5b5051905090565b60006001600160a01b038316610e06576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c546f6b656e2f746f2d7a65726f60781b604482015290519081900360640190fd5b6001600160a01b038416610e57576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6000339050610e88818686866040518060200160405280600081525060405180602001604052806000815250611e91565b610eb4818686866040518060200160405280600081525060405180602001604052806000815250611f20565b6040805180820182526016815275506f6f6c546f6b656e2f6578636565642d616c6c6f7760501b6020808301919091526001600160a01b03808916600090815260398352848120918616815291529190912054610f269187918491610f219190889063ffffffff61210d16565b611dde565b610f5481868686604051806020016040528060008152506040518060200160405280600081525060006121a4565b506001949350505050565b601290565b3360008181526039602090815260408083206001600160a01b03871684529091528120549091610fa0918590610f21908663ffffffff61245a16565b50600192915050565b6001600160a01b03166000908152603b602052604090205460ff1690565b600190565b603a54600160a01b900460ff1690565b610fe63388611b69565b611030576040805162461bcd60e51b81526020600482015260166024820152752837b7b62a37b5b2b717b737ba16b7b832b930ba37b960511b604482015290519081900360640190fd5b6110a73388888888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a91508990819084018382808284376000920191909152506124b492505050565b50505050505050565b603a54604080516379f0877160e01b81526001600160a01b038481166004830152915160009392909216916379f0877191602480820192602092909190829003018186803b15801561110157600080fd5b505afa158015611115573d6000803e3d6000fd5b505050506040513d602081101561112b57600080fd5b505192915050565b600054610100900460ff168061114c575061114c612580565b8061115a575060005460ff16155b6111955760405162461bcd60e51b815260040180806020018281038252602e815260200180612d6e602e913960400191505060405180910390fd5b600054610100900460ff161580156111c0576000805460ff1961ff0019909116610100171660011790555b8451611204576040805162461bcd60e51b815260206004820152600e60248201526d506f6f6c546f6b656e2f6e616d6560901b604482015290519081900360640190fd5b835161124a576040805162461bcd60e51b815260206004820152601060248201526f141bdbdb151bdad95b8bdcde5b589bdb60821b604482015290519081900360640190fd5b6001600160a01b03821661129b576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f706f6f6c2d7a65726f60681b604482015290519081900360640190fd5b84516112ae906033906020880190612c50565b5083516112c2906034906020870190612c50565b50603a80546001600160a01b0319166001600160a01b03841617905582516112f1906035906020860190612cce565b5060005b60355481101561134e576001603660006035848154811061131257fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790556001016112f5565b50604080516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad24916329965a1d91606480830192600092919082900301818387803b1580156113ce57600080fd5b505af11580156113e2573d6000803e3d6000fd5b5050604080516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad2493506329965a1d9250606480830192600092919082900301818387803b15801561146557600080fd5b505af1158015611479573d6000803e3d6000fd5b50505050801561148f576000805461ff00191690555b5050505050565b336001600160a01b03821614156114ea576040805162461bcd60e51b81526020600482015260136024820152722837b7b62a37b5b2b717b0baba3416b9b2b63360691b604482015290519081900360640190fd5b6001600160a01b03811660009081526036602052604090205460ff161561153b573360009081526038602090815260408083206001600160a01b03851684529091529020805460ff1916905561156a565b3360009081526037602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b60348054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610b6f5780601f10610bdb57610100808354040283529160200191610b6f565b6116553333868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506124b4915050565b50505050565b603a546001600160a01b031633146116b0576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bdbdb9b1e4b5c1bdbdb606a1b604482015290519081900360640190fd5b603a546040805160208082018352600080835283519182019093529182526116e5926001600160a01b03169182918591612586565b50565b6040805180820182526012815271506f6f6c546f6b656e2f6e6567617469766560701b602080830191909152336000818152603983528481206001600160a01b0388168252909252928120549092610fa09290918691610f219190879063ffffffff61210d16565b611758610d30565b6001600160a01b03166324d7806c336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156117ad57600080fd5b505afa1580156117c1573d6000803e3d6000fd5b505050506040513d60208110156117d757600080fd5b5051611824576040805162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba2a37b5b2b717b4b996b0b236b4b760491b604482015290519081900360640190fd5b603a8054821515600160a01b810260ff60a01b1990921691909117909155604080519182525133917f643561a6454325dc43853b954eb9350a955ea80047c134c779c055bcbf459137919081900360200190a250565b60006001600160a01b0383166118d7576040805162461bcd60e51b815260206004820152601760248201527f506f6f6c546f6b656e2f7472616e736665722d7a65726f000000000000000000604482015290519081900360640190fd5b6000339050611908818286866040518060200160405280600081525060405180602001604052806000815250611e91565b611934818286866040518060200160405280600081525060405180602001604052806000815250611f20565b610c1581828686604051806020016040528060008152506040518060200160405280600081525060006121a4565b61196a610d30565b6001600160a01b03166324d7806c336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156119bf57600080fd5b505afa1580156119d3573d6000803e3d6000fd5b505050506040513d60208110156119e957600080fd5b5051611a36576040805162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba2a37b5b2b717b4b996b0b236b4b760491b604482015290519081900360640190fd5b6001600160a01b0382166000818152603b6020908152604091829020805460ff19168515159081179091558251908152915133927f0a40230cc5a9cbd3edc99d49ffd13beb7dc906030a2dde3b53a53b62fc8979cd92908290030190a35050565b611aa13387611b69565b611aeb576040805162461bcd60e51b81526020600482015260166024820152752837b7b62a37b5b2b717b737ba16b7b832b930ba37b960511b604482015290519081900360640190fd5b611b6133878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b0181900481028201810190925289815292508991508890819084018382808284376000920191909152506126d892505050565b505050505050565b6000816001600160a01b0316836001600160a01b03161480611bd457506001600160a01b03831660009081526036602052604090205460ff168015611bd457506001600160a01b0380831660009081526038602090815260408083209387168352929052205460ff16155b80611c0457506001600160a01b0380831660009081526037602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b03918216600090815260396020908152604080832093909416825291909152205490565b611c8633338585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506126d8915050565b505050565b6001600160a01b038116331415611ce1576040805162461bcd60e51b81526020600482015260156024820152742837b7b62a37b5b2b717b932bb37b5b296b9b2b63360591b604482015290519081900360640190fd5b6001600160a01b03811660009081526036602052604090205460ff1615611d35573360009081526038602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611d61565b3360009081526037602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b6040805162461bcd60e51b8152602060048201526014602482015273141bdbdb151bdad95b8bdb9bcb5cdd5c1c1bdc9d60621b604482015290519081900360640190fd5b6001600160a01b038216611e2f576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6001600160a01b03808416600081815260396020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b603a54600160a01b900460ff1615611f12576001600160a01b0384161580611ed157506001600160a01b0384166000908152603b602052604090205460ff165b611f12576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bdb9bdd0b5b1a5cdd609a1b604482015290519081900360640190fd5b611b6186868686868661290b565b603a5460408051639e63a8c560e01b81526001600160a01b03888116600483015287811660248301526044820187905291519190921691639e63a8c59160648083019260209291908290030181600087803b158015611f7e57600080fd5b505af1158015611f92573d6000803e3d6000fd5b505050506040513d6020811015611fa857600080fd5b5050604080518481526060602082810182815286519284019290925285516001600160a01b03808a16958b821695918d16947f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987948b948b948b9490939290840191608085019187019080838360005b8381101561202f578181015183820152602001612017565b50505050905090810190601f16801561205c5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561208f578181015183820152602001612077565b50505050905090810190601f1680156120bc5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a4836001600160a01b0316856001600160a01b0316600080516020612d9c833981519152856040518082815260200191505060405180910390a3505050505050565b6000818484111561219c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612161578181015183820152602001612149565b50505050905090810190601f16801561218e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6040805163555ddc6560e11b81526001600160a01b03871660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b15801561222857600080fd5b505afa15801561223c573d6000803e3d6000fd5b505050506040513d602081101561225257600080fd5b505190506001600160a01b038116156123e657806001600160a01b03166223de298989898989896040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156123175781810151838201526020016122ff565b50505050905090810190601f1680156123445780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561237757818101518382015260200161235f565b50505050905090810190601f1680156123a45780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b1580156123c957600080fd5b505af11580156123dd573d6000803e3d6000fd5b50505050612450565b8115612450576123fe866001600160a01b0316612c14565b15612450576040805162461bcd60e51b815260206004820152601860248201527f506f6f6c546f6b656e2f6e6f2d72656369702d696e7465720000000000000000604482015290519081900360640190fd5b5050505050505050565b600082820183811015611c04576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038516612505576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6001600160a01b038416612554576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c546f6b656e2f746f2d7a65726f60781b604482015290519081900360640190fd5b612562868686868686611e91565b612570868686868686611f20565b611b6186868686868660006121a4565b303b1590565b836001600160a01b0316856001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d858585604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156126055781810151838201526020016125ed565b50505050905090810190601f1680156126325780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561266557818101518382015260200161264d565b50505050905090810190601f1680156126925780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a36040805184815290516001600160a01b03861691600091600080516020612d9c8339815191529181900360200190a35050505050565b6001600160a01b038416612729576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b61273885856000868686611e91565b603a546040805163a423cd2960e01b81526001600160a01b038781166004830152602482018790529151919092169163a423cd299160448083019260209291908290030181600087803b15801561278e57600080fd5b505af11580156127a2573d6000803e3d6000fd5b505050506040513d60208110156127b857600080fd5b5050604080518481526060602082810182815286519284019290925285516001600160a01b03808a1695908b16947f1f58e3485c3f6fc2bddf52e2bd0d82ad5c19e1ac9ab403b1aa9f0a1794d2bfb6948a948a948a9484019160808501919087019080838360005b83811015612838578181015183820152602001612820565b50505050905090810190601f1680156128655780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612898578181015183820152602001612880565b50505050905090810190601f1680156128c55780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a36040805184815290516000916001600160a01b03871691600080516020612d9c8339815191529181900360200190a35050505050565b603a60009054906101000a90046001600160a01b03166001600160a01b031663a4e2d6346040518163ffffffff1660e01b815260040160206040518083038186803b15801561295957600080fd5b505afa15801561296d573d6000803e3d6000fd5b505050506040513d602081101561298357600080fd5b5051156129cd576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bda5ccb5b1bd8dad959606a1b604482015290519081900360640190fd5b6040805163555ddc6560e11b81526001600160a01b03871660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b158015612a5157600080fd5b505afa158015612a65573d6000803e3d6000fd5b505050506040513d6020811015612a7b57600080fd5b505190506001600160a01b038116156110a757806001600160a01b03166375ab97828888888888886040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015612b41578181015183820152602001612b29565b50505050905090810190601f168015612b6e5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612ba1578181015183820152602001612b89565b50505050905090810190601f168015612bce5780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b158015612bf357600080fd5b505af1158015612c07573d6000803e3d6000fd5b5050505050505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590612c4857508115155b949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c9157805160ff1916838001178555612cbe565b82800160010185558215612cbe579182015b82811115612cbe578251825591602001919060010190612ca3565b50612cca929150612d2f565b5090565b828054828255906000526020600020908101928215612d23579160200282015b82811115612d2357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612cee565b50612cca929150612d49565b610b7791905b80821115612cca5760008155600101612d35565b610b7791905b80821115612cca5780546001600160a01b0319168155600101612d4f56fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa265627a7a72315820dee81670b661abd0414fcc9447911b149df188437e43cc150959049d4207168464736f6c634300050c0032",
  "sourceMap": "867:3527:28:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;867:3527:28;;;;;;;",
  "deployedSourceMap": "867:3527:28:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;867:3527:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9515:109:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9515:109:27;;;;;;;;;;;;;;;;;5922:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5922:77:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11180:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;11180:172:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5639:235;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5639:235:27;;;;;;;;:::i;:::-;;5324:72;;;:::i;:::-;;;;-1:-1:-1;;;;;5324:72:27;;;;;;;;;;;;;;6619:96;;;:::i;:::-;;;;;;;;;;;;;;;;12960:588;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12960:588:27;;;;;;;;;;;;;;;;;:::i;6313:70::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11732:197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;11732:197:27;;;;;;;;:::i;2360:126:28:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2360:126:28;-1:-1:-1;;;;;2360:126:28;;:::i;6490:74:27:-;;;:::i;2035:108:28:-;;;:::i;9728:323:27:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;9728:323:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;9728:323:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9728:323:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9728:323:27;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;9728:323:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9728:323:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;9728:323:27;;-1:-1:-1;9728:323:27;-1:-1:-1;9728:323:27;:::i;6767:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6767:117:27;-1:-1:-1;;;;;6767:117:27;;:::i;4378:830::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4378:830:27;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4378:830:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4378:830:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4378:830:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4378:830:27;;;;;;;;-1:-1:-1;4378:830:27;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;4378:830:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4378:830:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4378:830:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4378:830:27;;;;;;;;-1:-1:-1;4378:830:27;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;4378:830:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4378:830:27;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4378:830:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4378:830:27;;-1:-1:-1;;;4378:830:27;;-1:-1:-1;;;;;4378:830:27;;-1:-1:-1;4378:830:27;;-1:-1:-1;4378:830:27:i;8689:356::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8689:356:27;-1:-1:-1;;;;;8689:356:27;;:::i;6049:81::-;;;:::i;6999:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;6999:150:27;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6999:150:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6999:150:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;6999:150:27;;-1:-1:-1;6999:150:27;-1:-1:-1;6999:150:27;:::i;13668:122::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13668:122:27;;:::i;12399:229::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12399:229:27;;;;;;;;:::i;2674:168:28:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2674:168:28;;;;:::i;7369:395:27:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7369:395:27;;;;;;;;:::i;3091:216:28:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3091:216:28;;;;;;;;;;:::i;10429:262:27:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;10429:262:27;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10429:262:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10429:262:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10429:262:27;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10429:262:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10429:262:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;10429:262:27;;-1:-1:-1;10429:262:27;-1:-1:-1;10429:262:27;:::i;8338:290::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8338:290:27;;;;;;;;;;:::i;10920:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10920:130:27;;;;;;;;;;:::i;7923:124::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7923:124:27;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;7923:124:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7923:124:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;7923:124:27;;-1:-1:-1;7923:124:27;-1:-1:-1;7923:124:27;:::i;9103:352::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9103:352:27;-1:-1:-1;;;;;9103:352:27;;:::i;10143:124::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;10143:124:27;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10143:124:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10143:124:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10143:124:27;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10143:124:27;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10143:124:27;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;10143:124:27;;-1:-1:-1;10143:124:27;-1:-1:-1;10143:124:27;:::i;8190:91::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8190:91:27;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;9515:109:27;9564:16;9597:22;9590:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9590:29:27;;;;;;;;;;;;;;;;;;;;;;;9515:109;;:::o;5922:77::-;5989:5;5982:12;;;;;;;;-1:-1:-1;;5982:12:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5959:13;;5982:12;;5989:5;;5982:12;;5989:5;5982:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5982:12:27;;5922:77;-1:-1:-1;;;;;5922:77:27:o;11180:172::-;11247:4;11278:10;11296:32;11278:10;11313:7;11322:5;11296:8;:32::i;:::-;-1:-1:-1;11343:4:27;;11180:172;-1:-1:-1;;;11180:172:27:o;5639:235::-;19226:5;;-1:-1:-1;;;;;19226:5:27;19204:10;:28;19196:60;;;;;-1:-1:-1;;;19196:60:27;;;;;;;;;;;;-1:-1:-1;;;19196:60:27;;;;;;;;;;;;;;;5715:57;5733:4;5739;5753:1;5757:6;5715:57;;;;;;;;;;;;;;;;;;;;;;;;:17;:57::i;:::-;5786:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5786:36:27;;;;;;;;;;;;;;5835:34;;;;;;;;5858:1;;-1:-1:-1;;;;;5835:34:27;;;-1:-1:-1;;;;;;;;;;;5835:34:27;;;;;;;;5639:235;;:::o;5324:72::-;5386:5;;-1:-1:-1;;;;;5386:5:27;5324:72;:::o;6619:96::-;6687:5;;:23;;;-1:-1:-1;;;6687:23:27;;;;6663:7;;-1:-1:-1;;;;;6687:5:27;;:21;;:23;;;;;;;;;;;;;;:5;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;6687:23:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6687:23:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6687:23:27;;-1:-1:-1;6619:96:27;:::o;12960:588::-;13051:4;-1:-1:-1;;;;;13073:23:27;;13065:53;;;;;-1:-1:-1;;;13065:53:27;;;;;;;;;;;;-1:-1:-1;;;13065:53:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;13134:20:27;;13126:52;;;;;-1:-1:-1;;;13126:52:27;;;;;;;;;;;;-1:-1:-1;;;13126:52:27;;;;;;;;;;;;;;;13187:15;13205:10;13187:28;;13224:61;13242:7;13251:6;13259:9;13270:6;13224:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;13294:49;13300:7;13309:6;13317:9;13328:6;13294:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;13377:66;;;;;;;;;;;-1:-1:-1;;;13377:66:27;;;;;;;;-1:-1:-1;;;;;13377:19:27;;;-1:-1:-1;13377:19:27;;;:11;:19;;;;;:28;;;;;;;;;;;;13351:93;;13360:6;;13368:7;;13377:66;;:28;13410:6;;13377:66;:32;:66;:::i;:::-;13351:8;:93::i;:::-;13453:70;13473:7;13482:6;13490:9;13501:6;13453:70;;;;;;;;;;;;;;;;;;;;;;;;13517:5;13453:19;:70::i;:::-;-1:-1:-1;13539:4:27;;12960:588;-1:-1:-1;;;;12960:588:27:o;6313:70::-;6376:2;6313:70;:::o;11732:197::-;11835:10;11812:4;11856:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;11856:32:27;;;;;;;;;;11812:4;;11826:79;;11847:7;;11856:48;;11893:10;11856:48;:36;:48;:::i;11826:79::-;-1:-1:-1;11920:4:27;11732:197;;;;:::o;2360:126:28:-;-1:-1:-1;;;;;2450:31:28;2431:4;2450:31;;;:19;:31;;;;;;;;;2360:126::o;6490:74:27:-;6558:1;6490:74;:::o;2035:108:28:-;2112:26;;-1:-1:-1;;;2112:26:28;;;;;2035:108::o;9728:323:27:-;9914:33;9928:10;9940:6;9914:13;:33::i;:::-;9906:68;;;;;-1:-1:-1;;;9906:68:27;;;;;;;;;;;;-1:-1:-1;;;9906:68:27;;;;;;;;;;;;;;;9982:64;9988:10;10000:6;10008:9;10019:6;10027:4;;9982:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;9982:64:27;;;;137:4:-1;9982:64:27;;;;;;;;;;;;;;;;;;-1:-1:-1;10033:12:27;;-1:-1:-1;10033:12:27;;;;9982:64;;10033:12;;;;9982:64;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;9982:5:27;;-1:-1:-1;;;9982:64:27:i;:::-;9728:323;;;;;;;:::o;6767:117::-;6848:5;;:31;;;-1:-1:-1;;;6848:31:27;;-1:-1:-1;;;;;6848:31:27;;;;;;;;;6824:7;;6848:5;;;;;:24;;:31;;;;;;;;;;;;;;;:5;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;6848:31:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6848:31:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6848:31:27;;6767:117;-1:-1:-1;;6767:117:27:o;4378:830::-;1024:12:21;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:21;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:21;;;;;1225:18;1213:4;1225:18;;;1170:80;4540:18:27;;4532:50;;;;;-1:-1:-1;;;4532:50:27;;;;;;;;;;;;-1:-1:-1;;;4532:50:27;;;;;;;;;;;;;;;4598:20;;4590:54;;;;;-1:-1:-1;;;4590:54:27;;;;;;;;;;;;-1:-1:-1;;;4590:54:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;4660:27:27;;4652:59;;;;;-1:-1:-1;;;4652:59:27;;;;;;;;;;;;-1:-1:-1;;;4652:59:27;;;;;;;;;;;;;;;4720:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;4740:16:27;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;4764:5:27;:12;;-1:-1:-1;;;;;;4764:12:27;-1:-1:-1;;;;;4764:12:27;;;;;4785:41;;;;:22;;:41;;;;;:::i;:::-;-1:-1:-1;4839:9:27;4834:132;4858:22;:29;4854:33;;4834:132;;;4953:4;4906:17;:44;4924:22;4947:1;4924:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4924:25:27;4906:44;;;;;;;;;;;;:51;;-1:-1:-1;;4906:51:27;;;;;;;;;;-1:-1:-1;4889:3:27;4834:132;;;-1:-1:-1;5003:93:27;;;-1:-1:-1;;;5003:93:27;;5052:4;5003:93;;;;;;3207:66;5003:93;;;;;;;;;;2560:42;;5003:40;;:93;;;;;5059:21;;5003:93;;;;;;;5059:21;2560:42;5003:93;;;5:2:-1;;;;30:1;27;20:12;5:2;5003:93:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5104:99:27;;;-1:-1:-1;;;5104:99:27;;5153:4;5104:99;;;;;;3369:66;5104:99;;;;;;;;;;2560:42;;-1:-1:-1;5104:40:27;;-1:-1:-1;5104:99:27;;;;;5160:27;;5104:99;;;;;;;5160:27;2560:42;5104:99;;;5:2:-1;;;;30:1;27;20:12;5:2;5104:99:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5104:99:27;;;;1268:14:21;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:21;;;1264:55;4378:830:27;;;;;:::o;8689:356::-;8759:10;-1:-1:-1;;;;;8759:22:27;;;;8751:54;;;;;-1:-1:-1;;;8751:54:27;;;;;;;;;;;;-1:-1:-1;;;8751:54:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;8818:27:27;;;;;;:17;:27;;;;;;;;8814:173;;;8891:10;8866:36;;;;:24;:36;;;;;;;;-1:-1:-1;;;;;8866:46:27;;;;;;;;;8859:53;;-1:-1:-1;;8859:53:27;;;8814:173;;;8950:10;8939:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;8939:32:27;;;;;;;;;:39;;-1:-1:-1;;8939:39:27;8974:4;8939:39;;;8814:173;9000:40;;9029:10;;-1:-1:-1;;;;;9000:40:27;;;;;;;;8689:356;:::o;6049:81::-;6118:7;6111:14;;;;;;;;-1:-1:-1;;6111:14:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6088:13;;6111:14;;6118:7;;6111:14;;6118:7;6111:14;;;;;;;;;;;;;;;;;;;;;;;;6999:150;7086:58;7092:10;7104;7116:9;7127:6;7135:4;;7086:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;7086:58:27;;;;;;;;;;;;;-1:-1:-1;7086:5:27;;-1:-1:-1;;7086:58:27:i;:::-;6999:150;;;;:::o;13668:122::-;19226:5;;-1:-1:-1;;;;;19226:5:27;19204:10;:28;19196:60;;;;;-1:-1:-1;;;19196:60:27;;;;;;;;;;;;-1:-1:-1;;;19196:60:27;;;;;;;;;;;;;;;13746:5;;13726:59;;;;;;;;;13746:5;13726:59;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13746:5:27;;;;13770:6;;13726:11;:59::i;:::-;13668:122;:::o;12399:229::-;12528:75;;;;;;;;;;;-1:-1:-1;;;12528:75:27;;;;;;;;12507:10;12484:4;12528:23;;;:11;:23;;;;;-1:-1:-1;;;;;12528:32:27;;;;;;;;;;;12484:4;;12498:106;;12507:10;;12519:7;;12528:75;;:32;12565:15;;12528:75;:36;:75;:::i;2674:168:28:-;4326:6;:4;:6::i;:::-;-1:-1:-1;;;;;4326:14:28;;4341:10;4326:26;;;;;;;;;;;;;-1:-1:-1;;;;;4326:26:28;-1:-1:-1;;;;;4326:26:28;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4326:26:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4326:26:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4326:26:28;4318:62;;;;;-1:-1:-1;;;4318:62:28;;;;;;;;;;;;-1:-1:-1;;;4318:62:28;;;;;;;;;;;;;;;2750:26;:37;;;;;-1:-1:-1;;;2750:37:28;;-1:-1:-1;;;;2750:37:28;;;;;;;;;;2799:38;;;;;;;2816:10;;2799:38;;;;;;;;;;2674:168;:::o;7369:395:27:-;7440:4;-1:-1:-1;;;;;7462:23:27;;7454:59;;;;;-1:-1:-1;;;7454:59:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;7522:12;7537:10;7522:25;;7556:56;7574:4;7580;7586:9;7597:6;7556:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;7621:44;7627:4;7633;7639:9;7650:6;7621:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;7674:65;7694:4;7700;7706:9;7717:6;7674:65;;;;;;;;;;;;;;;;;;;;;;;;7733:5;7674:19;:65::i;3091:216:28:-;4326:6;:4;:6::i;:::-;-1:-1:-1;;;;;4326:14:28;;4341:10;4326:26;;;;;;;;;;;;;-1:-1:-1;;;;;4326:26:28;-1:-1:-1;;;;;4326:26:28;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4326:26:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4326:26:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4326:26:28;4318:62;;;;;-1:-1:-1;;;4318:62:28;;;;;;;;;;;;-1:-1:-1;;;4318:62:28;;;;;;;;;;;;;;;-1:-1:-1;;;;;3186:31:28;;;;;;:19;:31;;;;;;;;;:46;;-1:-1:-1;;3186:46:28;;;;;;;;;;3244:58;;;;;;;3265:10;;3244:58;;;;;;;;;3091:216;;:::o;10429:262:27:-;10561:34;10575:10;10587:7;10561:13;:34::i;:::-;10553:69;;;;;-1:-1:-1;;;10553:69:27;;;;;;;;;;;;-1:-1:-1;;;10553:69:27;;;;;;;;;;;;;;;10630:56;10638:10;10650:7;10659:6;10667:4;;10630:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;10630:56:27;;;;137:4:-1;10630:56:27;;;;;;;;;;;;;;;;;;-1:-1:-1;10673:12:27;;-1:-1:-1;10673:12:27;;;;10630:56;;10673:12;;;;10630:56;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;10630:7:27;;-1:-1:-1;;;10630:56:27:i;:::-;10429:262;;;;;;:::o;8338:290::-;8437:4;8470:11;-1:-1:-1;;;;;8458:23:27;:8;-1:-1:-1;;;;;8458:23:27;;:118;;;-1:-1:-1;;;;;;8496:27:27;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;8528:37:27;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;8527:48;8496:79;8458:165;;;-1:-1:-1;;;;;;8590:23:27;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;8458:165;8451:172;8338:290;-1:-1:-1;;;8338:290:27:o;10920:130::-;-1:-1:-1;;;;;11017:19:27;;;10993:7;11017:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;10920:130::o;7923:124::-;7993:49;8001:10;8013;8025:6;8033:4;;7993:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;7993:49:27;;;;;;;;;;;;;-1:-1:-1;7993:7:27;;-1:-1:-1;;7993:49:27:i;:::-;7923:124;;;:::o;9103:352::-;-1:-1:-1;;;;;9170:22:27;;9182:10;9170:22;;9162:56;;;;;-1:-1:-1;;;9162:56:27;;;;;;;;;;;;-1:-1:-1;;;9162:56:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;9231:27:27;;;;;;:17;:27;;;;;;;;9227:173;;;9297:10;9272:36;;;;:24;:36;;;;;;;;-1:-1:-1;;;;;9272:46:27;;;;;;;;;:53;;-1:-1:-1;;9272:53:27;9321:4;9272:53;;;9227:173;;;9370:10;9359:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;9359:32:27;;;;;;;;;9352:39;;-1:-1:-1;;9352:39:27;;;9227:173;9413:37;;9439:10;;-1:-1:-1;;;;;9413:37:27;;;;;;;;9103:352;:::o;10143:124::-;10232:30;;;-1:-1:-1;;;10232:30:27;;;;;;;;;;;;-1:-1:-1;;;10232:30:27;;;;;;;;;;;;;;16650:230;-1:-1:-1;;;;;16740:21:27;;16732:53;;;;;-1:-1:-1;;;16732:53:27;;;;;;;;;;;;-1:-1:-1;;;16732:53:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;16794:19:27;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;16843:32;;;;;;;;;;;;;;;;;16650:230;;;:::o;3812:409:28:-;4018:26;;-1:-1:-1;;;4018:26:28;;;;4014:120;;;-1:-1:-1;;;;;4064:16:28;;;;:43;;-1:-1:-1;;;;;;4084:23:28;;;;;;:19;:23;;;;;;;;4064:43;4056:69;;;;;-1:-1:-1;;;4056:69:28;;;;;;;;;;;;-1:-1:-1;;;4056:69:28;;;;;;;;;;;;;;;4141:75;4165:8;4175:4;4181:2;4185:6;4193:8;4203:12;4141:23;:75::i;16065:340:27:-;16254:5;;:37;;;-1:-1:-1;;;16254:37:27;;-1:-1:-1;;;;;16254:37:27;;;;;;;;;;;;;;;;;;;;;;:5;;;;;:19;;:37;;;;;;;;;;;;;;:5;;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;16254:37:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16254:37:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;16305:56:27;;;;;;;16254:37;16305:56;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16305:56:27;;;;;;;;;;;;;;16330:6;;16338:8;;16348:12;;16305:56;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16305:56:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16305:56:27;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16305:56:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16389:2;-1:-1:-1;;;;;16374:26:27;16383:4;-1:-1:-1;;;;;16374:26:27;-1:-1:-1;;;;;;;;;;;16393:6:27;16374:26;;;;;;;;;;;;;;;;;;16065:340;;;;;;:::o;1732:187:12:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:12;;;1732:187::o;18498:599:27:-;18755:77;;;-1:-1:-1;;;18755:77:27;;-1:-1:-1;;;;;18755:77:27;;;;;;3050:66;18755:77;;;;;;18733:19;;2560:42;;18755:40;;:77;;;;;;;;;;;;;;;2560:42;18755:77;;;5:2:-1;;;;30:1;27;20:12;5:2;18755:77:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18755:77:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18755:77:27;;-1:-1:-1;;;;;;18844:25:27;;;18840:253;;18900:11;-1:-1:-1;;;;;18883:44:27;;18928:8;18938:4;18944:2;18948:6;18956:8;18966:12;18883:96;;;;;;;;;;;;;-1:-1:-1;;;;;18883:96:27;-1:-1:-1;;;;;18883:96:27;;;;;;-1:-1:-1;;;;;18883:96:27;-1:-1:-1;;;;;18883:96:27;;;;;;-1:-1:-1;;;;;18883:96:27;-1:-1:-1;;;;;18883:96:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18883:96:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18883:96:27;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18883:96:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18883:96:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18883:96:27;;;;18840:253;;;18998:19;18994:99;;;19040:15;:2;-1:-1:-1;;;;;19040:13:27;;:15::i;:::-;19039:16;19031:53;;;;;-1:-1:-1;;;19031:53:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;18498:599;;;;;;;;:::o;834:176:12:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;14569:529:27;-1:-1:-1;;;;;14766:18:27;;14758:50;;;;;-1:-1:-1;;;14758:50:27;;;;;;;;;;;;-1:-1:-1;;;14758:50:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;14824:16:27;;14816:46;;;;;-1:-1:-1;;;14816:46:27;;;;;;;;;;;;-1:-1:-1;;;14816:46:27;;;;;;;;;;;;;;;14871:69;14889:8;14899:4;14905:2;14909:6;14917:8;14927:12;14871:17;:69::i;:::-;14949:57;14955:8;14965:4;14971:2;14975:6;14983:8;14993:12;14949:5;:57::i;:::-;15015:78;15035:8;15045:4;15051:2;15055:6;15063:8;15073:12;15087:5;15015:19;:78::i;1409:498:21:-;1820:4;1864:17;1895:7;1409:498;:::o;13858:294:27:-;14057:7;-1:-1:-1;;;;;14040:57:27;14047:8;-1:-1:-1;;;;;14040:57:27;;14066:6;14074:8;14084:12;14040:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14040:57:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14040:57:27;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14040:57:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14110:37;;;;;;;;-1:-1:-1;;;;;14110:37:27;;;14127:1;;-1:-1:-1;;;;;;;;;;;14110:37:27;;;;;;;;13858:294;;;;;:::o;15488:476::-;-1:-1:-1;;;;;15665:18:27;;15657:50;;;;;-1:-1:-1;;;15657:50:27;;;;;;;;;;;;-1:-1:-1;;;15657:50:27;;;;;;;;;;;;;;;15716:73;15734:8;15744:4;15758:1;15762:6;15770:4;15776:12;15716:17;:73::i;:::-;15798:5;;:48;;;-1:-1:-1;;;15798:48:27;;-1:-1:-1;;;;;15798:48:27;;;;;;;;;;;;;;;:5;;;;;:34;;:48;;;;;;;;;;;;;;:5;;:48;;;5:2:-1;;;;30:1;27;20:12;5:2;15798:48:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15798:48:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;15860:52:27;;;;;;;15798:48;15860:52;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15860:52:27;;;;;;;;;;15885:6;;15893:4;;15899:12;;15860:52;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15860:52:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15860:52:27;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15860:52:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15925:34;;;;;;;;15948:1;;-1:-1:-1;;;;;15925:34:27;;;-1:-1:-1;;;;;;;;;;;15925:34:27;;;;;;;;15488:476;;;;;:::o;17341:465::-;19370:5;;;;;;;;;-1:-1:-1;;;;;19370:5:27;-1:-1:-1;;;;;19370:14:27;;:16;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19370:16:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19370:16:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19370:16:27;19369:17;19361:49;;;;;-1:-1:-1;;;19361:49:27;;;;;;;;;;;;-1:-1:-1;;;19361:49:27;;;;;;;;;;;;;;;17575:76;;;-1:-1:-1;;;17575:76:27;;-1:-1:-1;;;;;17575:76:27;;;;;;2873:66;17575:76;;;;;;17553:19;;2560:42;;17575:40;;:76;;;;;;;;;;;;;;;2560:42;17575:76;;;5:2:-1;;;;30:1;27;20:12;5:2;17575:76:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17575:76:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17575:76:27;;-1:-1:-1;;;;;;17663:25:27;;;17659:143;;17716:11;-1:-1:-1;;;;;17702:39:27;;17742:8;17752:4;17758:2;17762:6;17770:8;17780:12;17702:91;;;;;;;;;;;;;-1:-1:-1;;;;;17702:91:27;-1:-1:-1;;;;;17702:91:27;;;;;;-1:-1:-1;;;;;17702:91:27;-1:-1:-1;;;;;17702:91:27;;;;;;-1:-1:-1;;;;;17702:91:27;-1:-1:-1;;;;;17702:91:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17702:91:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17702:91:27;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17702:91:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17702:91:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17702:91:27;;;;19416:1;17341:465;;;;;;:::o;686:610:19:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:19;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:19:o;867:3527:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;867:3527:28;;;-1:-1:-1;867:3527:28;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;867:3527:28;-1:-1:-1;;;;;867:3527:28;;;;;;;;;;;-1:-1:-1;867:3527:28;;;;;;;-1:-1:-1;867:3527:28;;;-1:-1:-1;867:3527:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;867:3527:28;;;;;;",
  "source": "/**\nCopyright 2020 PoolTogether Inc.\n\nThis file is part of PoolTogether.\n\nPoolTogether is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation under version 3 of the License.\n\nPoolTogether is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with PoolTogether.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\npragma solidity 0.5.12;\n\nimport \"./PoolToken.sol\";\n\n/**\n * @title RecipientWhitelistPoolToken\n * @author Brendan Asselstine\n * @notice Allows the pool admins to only allow token transfers to particular addresses.\n */\ncontract RecipientWhitelistPoolToken is PoolToken {\n  /**\n   * @notice Whether the whitelist is enabled\n   */\n  bool internal _recipientWhitelistEnabled;\n\n  /**\n   * @notice Whether a recipient has been whitelisted\n   */\n  mapping(address => bool) internal _recipientWhitelist;\n\n  /**\n   * @notice Emitted when the whitelist is enabled or disabled\n   * @param admin The admin who affected the change.\n   * @param enabled Whether the whitelist was enabled.\n   */\n  event WhitelistEnabled(address indexed admin, bool enabled);\n\n  /**\n   * @notice Emitted when a recipient whitelist status changes.\n   * @param admin The admin who affected the change\n   * @param recipient The recipient whose whitelisting status was changed\n   * @param whitelisted Whether the recipient was whitelisted\n   */\n  event RecipientWhitelisted(address indexed admin, address indexed recipient, bool whitelisted);\n\n  /**\n   * @notice Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens.\n   * Otherwise if the whitelist is not enabled anyone is able to receive tokens.\n   * @return True if whitelist enabled, false otherwise.\n   */\n  function recipientWhitelistEnabled() public view returns (bool) {\n    return _recipientWhitelistEnabled;\n  }\n\n  /**\n   * @notice Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not.\n   * @return True if the recipient has been whitelisted, false otherwise.\n   */\n  function recipientWhitelisted(address _recipient) public view returns (bool) {\n    return _recipientWhitelist[_recipient];\n  }\n\n  /**\n   * @notice Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin.\n   * @param _enabled True if whitelisting should be enabled, false otherwise\n   */\n  function setRecipientWhitelistEnabled(bool _enabled) public onlyAdmin {\n    _recipientWhitelistEnabled = _enabled;\n\n    emit WhitelistEnabled(msg.sender, _enabled);\n  }\n\n  /**\n   * @notice Sets whether the recipient should be whitelisted.  Only callable by the Pool admin.\n   * @param _recipient The recipient to whitelist\n   * @param _whitelisted True if the recipient should be whitelisted, false otherwise\n   */\n  function setRecipientWhitelisted(address _recipient, bool _whitelisted) public onlyAdmin {\n    _recipientWhitelist[_recipient] = _whitelisted;\n\n    emit RecipientWhitelisted(msg.sender, _recipient, _whitelisted);\n  }\n\n  /**\n    * @dev Call from.tokensToSend() if the interface is registered\n    * @param operator address operator requesting the transfer\n    * @param from address token holder address\n    * @param to address recipient address.  Can only be whitelisted addresses, if any\n    * @param amount uint256 amount of tokens to transfer\n    * @param userData bytes extra information provided by the token holder (if any)\n    * @param operatorData bytes extra information provided by the operator (if any)\n    */\n  function _callTokensToSend(\n      address operator,\n      address from,\n      address to,\n      uint256 amount,\n      bytes memory userData,\n      bytes memory operatorData\n  )\n      internal\n  {\n      if (_recipientWhitelistEnabled) {\n        require(to == address(0) || _recipientWhitelist[to], \"Pool/not-list\");\n      }\n      super._callTokensToSend(operator, from, to, amount, userData, operatorData);\n  }\n\n  /**\n   * @notice Requires the caller to be the Pool admin\n   */\n  modifier onlyAdmin() {\n    require(pool().isAdmin(msg.sender), \"WhitelistToken/is-admin\");\n    _;\n  }\n}\n",
  "sourcePath": "@pooltogether/pooltogether-contracts/contracts/RecipientWhitelistPoolToken.sol",
  "ast": {
    "absolutePath": "@pooltogether/pooltogether-contracts/contracts/RecipientWhitelistPoolToken.sol",
    "exportedSymbols": {
      "RecipientWhitelistPoolToken": [
        10062
      ]
    },
    "id": 10063,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9920,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "650:23:28"
      },
      {
        "absolutePath": "@pooltogether/pooltogether-contracts/contracts/PoolToken.sol",
        "file": "./PoolToken.sol",
        "id": 9921,
        "nodeType": "ImportDirective",
        "scope": 10063,
        "sourceUnit": 9919,
        "src": "675:25:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9922,
              "name": "PoolToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9918,
              "src": "907:9:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PoolToken_$9918",
                "typeString": "contract PoolToken"
              }
            },
            "id": 9923,
            "nodeType": "InheritanceSpecifier",
            "src": "907:9:28"
          }
        ],
        "contractDependencies": [
          3744,
          4882,
          5103,
          9918
        ],
        "contractKind": "contract",
        "documentation": "@title RecipientWhitelistPoolToken\n@author Brendan Asselstine\n@notice Allows the pool admins to only allow token transfers to particular addresses.",
        "fullyImplemented": true,
        "id": 10062,
        "linearizedBaseContracts": [
          10062,
          9918,
          4882,
          3744,
          5103
        ],
        "name": "RecipientWhitelistPoolToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9925,
            "name": "_recipientWhitelistEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 10062,
            "src": "979:40:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9924,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "979:4:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9929,
            "name": "_recipientWhitelist",
            "nodeType": "VariableDeclaration",
            "scope": 10062,
            "src": "1090:53:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 9928,
              "keyType": {
                "id": 9926,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1098:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1090:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 9927,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1109:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when the whitelist is enabled or disabled\n@param admin The admin who affected the change.\n@param enabled Whether the whitelist was enabled.",
            "id": 9935,
            "name": "WhitelistEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9931,
                  "indexed": true,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 9935,
                  "src": "1354:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9933,
                  "indexed": false,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 9935,
                  "src": "1377:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9932,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1353:37:28"
            },
            "src": "1331:60:28"
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when a recipient whitelist status changes.\n@param admin The admin who affected the change\n@param recipient The recipient whose whitelisting status was changed\n@param whitelisted Whether the recipient was whitelisted",
            "id": 9943,
            "name": "RecipientWhitelisted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9937,
                  "indexed": true,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 9943,
                  "src": "1686:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9939,
                  "indexed": true,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9943,
                  "src": "1709:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9941,
                  "indexed": false,
                  "name": "whitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 9943,
                  "src": "1736:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9940,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1685:68:28"
            },
            "src": "1659:95:28"
          },
          {
            "body": {
              "id": 9950,
              "nodeType": "Block",
              "src": "2099:44:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9948,
                    "name": "_recipientWhitelistEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9925,
                    "src": "2112:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9947,
                  "id": 9949,
                  "nodeType": "Return",
                  "src": "2105:33:28"
                }
              ]
            },
            "documentation": "@notice Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens.\nOtherwise if the whitelist is not enabled anyone is able to receive tokens.\n@return True if whitelist enabled, false otherwise.",
            "id": 9951,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientWhitelistEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2069:2:28"
            },
            "returnParameters": {
              "id": 9947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9946,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9951,
                  "src": "2093:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9945,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:6:28"
            },
            "scope": 10062,
            "src": "2035:108:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9962,
              "nodeType": "Block",
              "src": "2437:49:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 9958,
                      "name": "_recipientWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9929,
                      "src": "2450:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 9960,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 9959,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9953,
                      "src": "2470:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2450:31:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9957,
                  "id": 9961,
                  "nodeType": "Return",
                  "src": "2443:38:28"
                }
              ]
            },
            "documentation": "@notice Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not.\n@return True if the recipient has been whitelisted, false otherwise.",
            "id": 9963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9953,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9963,
                  "src": "2390:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2389:20:28"
            },
            "returnParameters": {
              "id": 9957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9956,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9963,
                  "src": "2431:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9955,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2431:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2430:6:28"
            },
            "scope": 10062,
            "src": "2360:126:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9980,
              "nodeType": "Block",
              "src": "2744:98:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9970,
                      "name": "_recipientWhitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9925,
                      "src": "2750:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9971,
                      "name": "_enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9965,
                      "src": "2779:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2750:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9973,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:37:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9975,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12052,
                          "src": "2816:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2816:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9977,
                        "name": "_enabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9965,
                        "src": "2828:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9974,
                      "name": "WhitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9935,
                      "src": "2799:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 9978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2799:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9979,
                  "nodeType": "EmitStatement",
                  "src": "2794:43:28"
                }
              ]
            },
            "documentation": "@notice Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin.\n@param _enabled True if whitelisting should be enabled, false otherwise",
            "id": 9981,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9968,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9967,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10061,
                  "src": "2734:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2734:9:28"
              }
            ],
            "name": "setRecipientWhitelistEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9965,
                  "name": "_enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 9981,
                  "src": "2712:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9964,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2712:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2711:15:28"
            },
            "returnParameters": {
              "id": 9969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2744:0:28"
            },
            "scope": 10062,
            "src": "2674:168:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10003,
              "nodeType": "Block",
              "src": "3180:127:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9990,
                        "name": "_recipientWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9929,
                        "src": "3186:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9992,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9991,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9983,
                        "src": "3206:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3186:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9993,
                      "name": "_whitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9985,
                      "src": "3220:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3186:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9995,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:46:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9997,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12052,
                          "src": "3265:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3265:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9999,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9983,
                        "src": "3277:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10000,
                        "name": "_whitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9985,
                        "src": "3289:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9996,
                      "name": "RecipientWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9943,
                      "src": "3244:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 10001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3244:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10002,
                  "nodeType": "EmitStatement",
                  "src": "3239:63:28"
                }
              ]
            },
            "documentation": "@notice Sets whether the recipient should be whitelisted.  Only callable by the Pool admin.\n@param _recipient The recipient to whitelist\n@param _whitelisted True if the recipient should be whitelisted, false otherwise",
            "id": 10004,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9988,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9987,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10061,
                  "src": "3170:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3170:9:28"
              }
            ],
            "name": "setRecipientWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9983,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 10004,
                  "src": "3124:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9985,
                  "name": "_whitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 10004,
                  "src": "3144:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3123:39:28"
            },
            "returnParameters": {
              "id": 9989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:28"
            },
            "scope": 10062,
            "src": "3091:216:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10046,
              "nodeType": "Block",
              "src": "4006:215:28",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 10019,
                    "name": "_recipientWhitelistEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9925,
                    "src": "4018:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10034,
                  "nodeType": "IfStatement",
                  "src": "4014:120:28",
                  "trueBody": {
                    "id": 10033,
                    "nodeType": "Block",
                    "src": "4046:88:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 10029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 10025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 10021,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10010,
                                  "src": "4064:2:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 10023,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4078:1:28",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 10022,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4070:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 10024,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4070:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "4064:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 10026,
                                  "name": "_recipientWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9929,
                                  "src": "4084:19:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 10028,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 10027,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10010,
                                  "src": "4104:2:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4084:23:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4064:43:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "506f6f6c2f6e6f742d6c697374",
                              "id": 10030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4109:15:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_84780aa577d2865deba9303e9981418d68b0241c988be789d4cb97dda944758c",
                                "typeString": "literal_string \"Pool/not-list\""
                              },
                              "value": "Pool/not-list"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_84780aa577d2865deba9303e9981418d68b0241c988be789d4cb97dda944758c",
                                "typeString": "literal_string \"Pool/not-list\""
                              }
                            ],
                            "id": 10020,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              12055,
                              12056
                            ],
                            "referencedDeclaration": 12056,
                            "src": "4056:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4056:69:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10032,
                        "nodeType": "ExpressionStatement",
                        "src": "4056:69:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10038,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10006,
                        "src": "4165:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10039,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10008,
                        "src": "4175:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10040,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10010,
                        "src": "4181:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10041,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10012,
                        "src": "4185:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10042,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10014,
                        "src": "4193:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10043,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10016,
                        "src": "4203:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10035,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12151,
                        "src": "4141:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RecipientWhitelistPoolToken_$10062",
                          "typeString": "contract super RecipientWhitelistPoolToken"
                        }
                      },
                      "id": 10037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_callTokensToSend",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9835,
                      "src": "4141:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 10044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4141:75:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10045,
                  "nodeType": "ExpressionStatement",
                  "src": "4141:75:28"
                }
              ]
            },
            "documentation": "@dev Call from.tokensToSend() if the interface is registered\n@param operator address operator requesting the transfer\n@param from address token holder address\n@param to address recipient address.  Can only be whitelisted addresses, if any\n@param amount uint256 amount of tokens to transfer\n@param userData bytes extra information provided by the token holder (if any)\n@param operatorData bytes extra information provided by the operator (if any)",
            "id": 10047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10006,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3846:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10008,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3870:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3870:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10010,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3890:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3890:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10012,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3908:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3908:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10014,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3930:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10013,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10016,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3959:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10015,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3838:150:28"
            },
            "returnParameters": {
              "id": 10018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4006:0:28"
            },
            "scope": 10062,
            "src": "3812:409:28",
            "stateMutability": "nonpayable",
            "superFunction": 9835,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10060,
              "nodeType": "Block",
              "src": "4312:80:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10053,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12052,
                              "src": "4341:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4341:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10050,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8973,
                              "src": "4326:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_BasePool_$7204_$",
                                "typeString": "function () view returns (contract BasePool)"
                              }
                            },
                            "id": 10051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4326:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePool_$7204",
                              "typeString": "contract BasePool"
                            }
                          },
                          "id": 10052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6880,
                          "src": "4326:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 10055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4326:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c697374546f6b656e2f69732d61646d696e",
                        "id": 10056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4354:25:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31d4f879a610b132c71dc9ccbc690ae477bba8886b7e9bfa597ab1bd2494fb12",
                          "typeString": "literal_string \"WhitelistToken/is-admin\""
                        },
                        "value": "WhitelistToken/is-admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31d4f879a610b132c71dc9ccbc690ae477bba8886b7e9bfa597ab1bd2494fb12",
                          "typeString": "literal_string \"WhitelistToken/is-admin\""
                        }
                      ],
                      "id": 10049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12055,
                        12056
                      ],
                      "referencedDeclaration": 12056,
                      "src": "4318:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4318:62:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10058,
                  "nodeType": "ExpressionStatement",
                  "src": "4318:62:28"
                },
                {
                  "id": 10059,
                  "nodeType": "PlaceholderStatement",
                  "src": "4386:1:28"
                }
              ]
            },
            "documentation": "@notice Requires the caller to be the Pool admin",
            "id": 10061,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4309:2:28"
            },
            "src": "4291:101:28",
            "visibility": "internal"
          }
        ],
        "scope": 10063,
        "src": "867:3527:28"
      }
    ],
    "src": "650:3745:28"
  },
  "legacyAST": {
    "absolutePath": "@pooltogether/pooltogether-contracts/contracts/RecipientWhitelistPoolToken.sol",
    "exportedSymbols": {
      "RecipientWhitelistPoolToken": [
        10062
      ]
    },
    "id": 10063,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9920,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "650:23:28"
      },
      {
        "absolutePath": "@pooltogether/pooltogether-contracts/contracts/PoolToken.sol",
        "file": "./PoolToken.sol",
        "id": 9921,
        "nodeType": "ImportDirective",
        "scope": 10063,
        "sourceUnit": 9919,
        "src": "675:25:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9922,
              "name": "PoolToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9918,
              "src": "907:9:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PoolToken_$9918",
                "typeString": "contract PoolToken"
              }
            },
            "id": 9923,
            "nodeType": "InheritanceSpecifier",
            "src": "907:9:28"
          }
        ],
        "contractDependencies": [
          3744,
          4882,
          5103,
          9918
        ],
        "contractKind": "contract",
        "documentation": "@title RecipientWhitelistPoolToken\n@author Brendan Asselstine\n@notice Allows the pool admins to only allow token transfers to particular addresses.",
        "fullyImplemented": true,
        "id": 10062,
        "linearizedBaseContracts": [
          10062,
          9918,
          4882,
          3744,
          5103
        ],
        "name": "RecipientWhitelistPoolToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9925,
            "name": "_recipientWhitelistEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 10062,
            "src": "979:40:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9924,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "979:4:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9929,
            "name": "_recipientWhitelist",
            "nodeType": "VariableDeclaration",
            "scope": 10062,
            "src": "1090:53:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 9928,
              "keyType": {
                "id": 9926,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1098:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1090:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 9927,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1109:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when the whitelist is enabled or disabled\n@param admin The admin who affected the change.\n@param enabled Whether the whitelist was enabled.",
            "id": 9935,
            "name": "WhitelistEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9931,
                  "indexed": true,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 9935,
                  "src": "1354:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9933,
                  "indexed": false,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 9935,
                  "src": "1377:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9932,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1353:37:28"
            },
            "src": "1331:60:28"
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when a recipient whitelist status changes.\n@param admin The admin who affected the change\n@param recipient The recipient whose whitelisting status was changed\n@param whitelisted Whether the recipient was whitelisted",
            "id": 9943,
            "name": "RecipientWhitelisted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9937,
                  "indexed": true,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 9943,
                  "src": "1686:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9939,
                  "indexed": true,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9943,
                  "src": "1709:25:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9941,
                  "indexed": false,
                  "name": "whitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 9943,
                  "src": "1736:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9940,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1685:68:28"
            },
            "src": "1659:95:28"
          },
          {
            "body": {
              "id": 9950,
              "nodeType": "Block",
              "src": "2099:44:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9948,
                    "name": "_recipientWhitelistEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9925,
                    "src": "2112:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9947,
                  "id": 9949,
                  "nodeType": "Return",
                  "src": "2105:33:28"
                }
              ]
            },
            "documentation": "@notice Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens.\nOtherwise if the whitelist is not enabled anyone is able to receive tokens.\n@return True if whitelist enabled, false otherwise.",
            "id": 9951,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientWhitelistEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2069:2:28"
            },
            "returnParameters": {
              "id": 9947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9946,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9951,
                  "src": "2093:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9945,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:6:28"
            },
            "scope": 10062,
            "src": "2035:108:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9962,
              "nodeType": "Block",
              "src": "2437:49:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 9958,
                      "name": "_recipientWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9929,
                      "src": "2450:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 9960,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 9959,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9953,
                      "src": "2470:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2450:31:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9957,
                  "id": 9961,
                  "nodeType": "Return",
                  "src": "2443:38:28"
                }
              ]
            },
            "documentation": "@notice Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not.\n@return True if the recipient has been whitelisted, false otherwise.",
            "id": 9963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9953,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9963,
                  "src": "2390:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2389:20:28"
            },
            "returnParameters": {
              "id": 9957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9956,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9963,
                  "src": "2431:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9955,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2431:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2430:6:28"
            },
            "scope": 10062,
            "src": "2360:126:28",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9980,
              "nodeType": "Block",
              "src": "2744:98:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9970,
                      "name": "_recipientWhitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9925,
                      "src": "2750:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9971,
                      "name": "_enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9965,
                      "src": "2779:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2750:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9973,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:37:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9975,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12052,
                          "src": "2816:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2816:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9977,
                        "name": "_enabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9965,
                        "src": "2828:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9974,
                      "name": "WhitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9935,
                      "src": "2799:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 9978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2799:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9979,
                  "nodeType": "EmitStatement",
                  "src": "2794:43:28"
                }
              ]
            },
            "documentation": "@notice Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin.\n@param _enabled True if whitelisting should be enabled, false otherwise",
            "id": 9981,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9968,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9967,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10061,
                  "src": "2734:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2734:9:28"
              }
            ],
            "name": "setRecipientWhitelistEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9965,
                  "name": "_enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 9981,
                  "src": "2712:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9964,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2712:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2711:15:28"
            },
            "returnParameters": {
              "id": 9969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2744:0:28"
            },
            "scope": 10062,
            "src": "2674:168:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10003,
              "nodeType": "Block",
              "src": "3180:127:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9990,
                        "name": "_recipientWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9929,
                        "src": "3186:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9992,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9991,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9983,
                        "src": "3206:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3186:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9993,
                      "name": "_whitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9985,
                      "src": "3220:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3186:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9995,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:46:28"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9997,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12052,
                          "src": "3265:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3265:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9999,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9983,
                        "src": "3277:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10000,
                        "name": "_whitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9985,
                        "src": "3289:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9996,
                      "name": "RecipientWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9943,
                      "src": "3244:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 10001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3244:58:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10002,
                  "nodeType": "EmitStatement",
                  "src": "3239:63:28"
                }
              ]
            },
            "documentation": "@notice Sets whether the recipient should be whitelisted.  Only callable by the Pool admin.\n@param _recipient The recipient to whitelist\n@param _whitelisted True if the recipient should be whitelisted, false otherwise",
            "id": 10004,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9988,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9987,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10061,
                  "src": "3170:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3170:9:28"
              }
            ],
            "name": "setRecipientWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9983,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 10004,
                  "src": "3124:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9985,
                  "name": "_whitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 10004,
                  "src": "3144:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3123:39:28"
            },
            "returnParameters": {
              "id": 9989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:28"
            },
            "scope": 10062,
            "src": "3091:216:28",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10046,
              "nodeType": "Block",
              "src": "4006:215:28",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 10019,
                    "name": "_recipientWhitelistEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9925,
                    "src": "4018:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10034,
                  "nodeType": "IfStatement",
                  "src": "4014:120:28",
                  "trueBody": {
                    "id": 10033,
                    "nodeType": "Block",
                    "src": "4046:88:28",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 10029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 10025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 10021,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10010,
                                  "src": "4064:2:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 10023,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4078:1:28",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 10022,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4070:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 10024,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4070:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "4064:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 10026,
                                  "name": "_recipientWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9929,
                                  "src": "4084:19:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 10028,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 10027,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10010,
                                  "src": "4104:2:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4084:23:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4064:43:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "506f6f6c2f6e6f742d6c697374",
                              "id": 10030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4109:15:28",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_84780aa577d2865deba9303e9981418d68b0241c988be789d4cb97dda944758c",
                                "typeString": "literal_string \"Pool/not-list\""
                              },
                              "value": "Pool/not-list"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_84780aa577d2865deba9303e9981418d68b0241c988be789d4cb97dda944758c",
                                "typeString": "literal_string \"Pool/not-list\""
                              }
                            ],
                            "id": 10020,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              12055,
                              12056
                            ],
                            "referencedDeclaration": 12056,
                            "src": "4056:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4056:69:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10032,
                        "nodeType": "ExpressionStatement",
                        "src": "4056:69:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10038,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10006,
                        "src": "4165:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10039,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10008,
                        "src": "4175:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10040,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10010,
                        "src": "4181:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10041,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10012,
                        "src": "4185:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10042,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10014,
                        "src": "4193:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10043,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10016,
                        "src": "4203:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10035,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12151,
                        "src": "4141:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RecipientWhitelistPoolToken_$10062",
                          "typeString": "contract super RecipientWhitelistPoolToken"
                        }
                      },
                      "id": 10037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_callTokensToSend",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9835,
                      "src": "4141:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 10044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4141:75:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10045,
                  "nodeType": "ExpressionStatement",
                  "src": "4141:75:28"
                }
              ]
            },
            "documentation": "@dev Call from.tokensToSend() if the interface is registered\n@param operator address operator requesting the transfer\n@param from address token holder address\n@param to address recipient address.  Can only be whitelisted addresses, if any\n@param amount uint256 amount of tokens to transfer\n@param userData bytes extra information provided by the token holder (if any)\n@param operatorData bytes extra information provided by the operator (if any)",
            "id": 10047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10006,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3846:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10008,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3870:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3870:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10010,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3890:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3890:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10012,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3908:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3908:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10014,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3930:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10013,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10016,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 10047,
                  "src": "3959:25:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10015,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3838:150:28"
            },
            "returnParameters": {
              "id": 10018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4006:0:28"
            },
            "scope": 10062,
            "src": "3812:409:28",
            "stateMutability": "nonpayable",
            "superFunction": 9835,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10060,
              "nodeType": "Block",
              "src": "4312:80:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10053,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12052,
                              "src": "4341:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4341:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10050,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8973,
                              "src": "4326:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_BasePool_$7204_$",
                                "typeString": "function () view returns (contract BasePool)"
                              }
                            },
                            "id": 10051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4326:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePool_$7204",
                              "typeString": "contract BasePool"
                            }
                          },
                          "id": 10052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6880,
                          "src": "4326:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 10055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4326:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c697374546f6b656e2f69732d61646d696e",
                        "id": 10056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4354:25:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31d4f879a610b132c71dc9ccbc690ae477bba8886b7e9bfa597ab1bd2494fb12",
                          "typeString": "literal_string \"WhitelistToken/is-admin\""
                        },
                        "value": "WhitelistToken/is-admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31d4f879a610b132c71dc9ccbc690ae477bba8886b7e9bfa597ab1bd2494fb12",
                          "typeString": "literal_string \"WhitelistToken/is-admin\""
                        }
                      ],
                      "id": 10049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12055,
                        12056
                      ],
                      "referencedDeclaration": 12056,
                      "src": "4318:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4318:62:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10058,
                  "nodeType": "ExpressionStatement",
                  "src": "4318:62:28"
                },
                {
                  "id": 10059,
                  "nodeType": "PlaceholderStatement",
                  "src": "4386:1:28"
                }
              ]
            },
            "documentation": "@notice Requires the caller to be the Pool admin",
            "id": 10061,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4309:2:28"
            },
            "src": "4291:101:28",
            "visibility": "internal"
          }
        ],
        "scope": 10063,
        "src": "867:3527:28"
      }
    ],
    "src": "650:3745:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-19T21:28:45.021Z",
  "devdoc": {
    "author": "Brendan Asselstine",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}.    * Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.    * Note that accounts cannot have allowance issued by their operators."
      },
      "authorizeOperator(address)": {
        "details": "See {IERC777-authorizeOperator}."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256,bytes)": {
        "details": "See {IERC777-burn}.  Not currently implemented.    * Also emits a {Transfer} event for ERC20 compatibility."
      },
      "decimals()": {
        "details": "See {ERC20Detailed-decimals}.    * Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "defaultOperators()": {
        "details": "See {IERC777-defaultOperators}."
      },
      "granularity()": {
        "details": "See {IERC777-granularity}.    * This implementation always returns `1`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
      },
      "init(string,string,address[],address)": {
        "params": {
          "defaultOperators": "The default operators who are allowed to move tokens",
          "name": "The name of the token",
          "symbol": "The token symbol"
        }
      },
      "isOperatorFor(address,address)": {
        "details": "See {IERC777-isOperatorFor}."
      },
      "name()": {
        "details": "See {IERC777-name}."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorBurn}.    * Currently not supported"
      },
      "operatorRedeem(address,uint256,bytes,bytes)": {
        "details": "Allows an operator to redeem tokens for the underlying asset on behalf of a user.    * Emits {Redeemed} and {Transfer} events."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorSend}.    * Emits {Sent} and {Transfer} events."
      },
      "pool()": {
        "return": "The address of the pool contract"
      },
      "poolMint(uint256)": {
        "params": {
          "amount": "The amount that was minted"
        }
      },
      "poolRedeem(address,uint256)": {
        "params": {
          "amount": "The amount of tokens to redeem",
          "from": "The address from which to redeem tokens"
        }
      },
      "recipientWhitelistEnabled()": {
        "return": "True if whitelist enabled, false otherwise."
      },
      "recipientWhitelisted(address)": {
        "return": "True if the recipient has been whitelisted, false otherwise."
      },
      "redeem(uint256,bytes)": {
        "details": "Allows a user to withdraw their tokens as the underlying asset.    * Also emits a {Transfer} event for ERC20 compatibility."
      },
      "revokeOperator(address)": {
        "details": "See {IERC777-revokeOperator}."
      },
      "send(address,uint256,bytes)": {
        "details": "See {IERC777-send}.    * Also emits a {Transfer} event for ERC20 compatibility."
      },
      "setRecipientWhitelistEnabled(bool)": {
        "params": {
          "_enabled": "True if whitelisting should be enabled, false otherwise"
        }
      },
      "setRecipientWhitelisted(address,bool)": {
        "params": {
          "_recipient": "The recipient to whitelist",
          "_whitelisted": "True if the recipient should be whitelisted, false otherwise"
        }
      },
      "symbol()": {
        "details": "See {IERC777-symbol}."
      },
      "totalSupply()": {
        "details": "See {IERC777-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.    * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract.    * Also emits a {Sent} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.  * Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators).  * Emits {Sent}, {Transfer} and {Approval} events."
      }
    },
    "title": "RecipientWhitelistPoolToken"
  },
  "userdoc": {
    "methods": {
      "init(string,string,address[],address)": {
        "notice": "Initializes the PoolToken."
      },
      "pool()": {
        "notice": "Returns the address of the Pool contract"
      },
      "poolMint(uint256)": {
        "notice": "Called by the associated Pool to emit `Mint` events."
      },
      "poolRedeem(address,uint256)": {
        "notice": "Calls the ERC777 transfer hook, and emits Redeemed and Transfer.  Can only be called by the Pool contract."
      },
      "recipientWhitelistEnabled()": {
        "notice": "Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens. Otherwise if the whitelist is not enabled anyone is able to receive tokens."
      },
      "recipientWhitelisted(address)": {
        "notice": "Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not."
      },
      "setRecipientWhitelistEnabled(bool)": {
        "notice": "Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin."
      },
      "setRecipientWhitelisted(address,bool)": {
        "notice": "Sets whether the recipient should be whitelisted.  Only callable by the Pool admin."
      }
    },
    "notice": "Allows the pool admins to only allow token transfers to particular addresses."
  }
}