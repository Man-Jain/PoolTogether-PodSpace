{
  "contractName": "MCDAwarePool",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "drawId",
          "type": "uint256"
        }
      ],
      "name": "Committed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CommittedDepositWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositedAndCommitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "DepositsPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "DepositsUnpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "drawId",
          "type": "uint256"
        }
      ],
      "name": "FeeCollected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeBeneficiary",
          "type": "address"
        }
      ],
      "name": "NextFeeBeneficiaryChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeFraction",
          "type": "uint256"
        }
      ],
      "name": "NextFeeFractionChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "OpenDepositWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "drawId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeBeneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "secretHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeFraction",
          "type": "uint256"
        }
      ],
      "name": "Opened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "drawId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "RewardListenerFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "drawId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "entropy",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winnings",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Rewarded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "drawId",
          "type": "uint256"
        }
      ],
      "name": "RolledOver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SponsorshipAndFeesWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SponsorshipDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "accountedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cToken",
      "outputs": [
        {
          "internalType": "contract ICErc20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_entropy",
          "type": "bytes32"
        }
      ],
      "name": "calculateWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "canLock",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "committedBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "committedSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cooldownDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cooldownEndAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentCommittedDrawId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentOpenDrawId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositSponsorship",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocks",
          "type": "uint256"
        }
      ],
      "name": "estimatedInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_drawId",
          "type": "uint256"
        }
      ],
      "name": "getDraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feeFraction",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeBeneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "openedBlock",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "secretHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "entropy",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "netWinnings",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lockDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lockEndAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "lockTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "moveCommitted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextFeeBeneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextFeeFraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "openBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "nextSecretHash",
          "type": "bytes32"
        }
      ],
      "name": "openNextDraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pauseDeposits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolToken",
      "outputs": [
        {
          "internalType": "contract PoolToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_secret",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "nextSecretHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "lastSecret",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "rewardAndOpenNextDraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "rollover",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "nextSecretHash",
          "type": "bytes32"
        }
      ],
      "name": "rolloverAndOpenNextDraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "saiPool",
      "outputs": [
        {
          "internalType": "contract MCDAwarePool",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "scdMcdMigration",
      "outputs": [
        {
          "internalType": "contract ScdMcdMigration",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeBeneficiary",
          "type": "address"
        }
      ],
      "name": "setNextFeeBeneficiary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeFraction",
          "type": "uint256"
        }
      ],
      "name": "setNextFeeFraction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract PoolToken",
          "name": "_poolToken",
          "type": "address"
        }
      ],
      "name": "setPoolToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "sponsorshipAndFeeBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "supplyRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "totalBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "transferBalanceToSponsorship",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unlockTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpauseDeposits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCommittedDeposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCommittedDepositFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawOpenDeposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawSponsorshipAndFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeFraction",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_feeBeneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lockDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cooldownDuration",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lockDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cooldownDuration",
          "type": "uint256"
        }
      ],
      "name": "initMCDAwarePool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ScdMcdMigration",
          "name": "_scdMcdMigration",
          "type": "address"
        },
        {
          "internalType": "contract MCDAwarePool",
          "name": "_saiPool",
          "type": "address"
        }
      ],
      "name": "initMigration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "saiToken",
      "outputs": [
        {
          "internalType": "contract GemLike",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract GemLike",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"drawId\",\"type\":\"uint256\"}],\"name\":\"Committed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CommittedDepositWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositedAndCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"DepositsPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"DepositsUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"drawId\",\"type\":\"uint256\"}],\"name\":\"FeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeBeneficiary\",\"type\":\"address\"}],\"name\":\"NextFeeBeneficiaryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeFraction\",\"type\":\"uint256\"}],\"name\":\"NextFeeFractionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OpenDepositWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"drawId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeFraction\",\"type\":\"uint256\"}],\"name\":\"Opened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"drawId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"RewardListenerFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"drawId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"entropy\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winnings\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Rewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"drawId\",\"type\":\"uint256\"}],\"name\":\"RolledOver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SponsorshipAndFeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SponsorshipDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"accountedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cToken\",\"outputs\":[{\"internalType\":\"contract ICErc20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_entropy\",\"type\":\"bytes32\"}],\"name\":\"calculateWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"committedBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"committedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cooldownDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cooldownEndAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentCommittedDrawId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentOpenDrawId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract GemLike\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositSponsorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocks\",\"type\":\"uint256\"}],\"name\":\"estimatedInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_drawId\",\"type\":\"uint256\"}],\"name\":\"getDraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeFraction\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"openedBlock\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"entropy\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"netWinnings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeFraction\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cooldownDuration\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cooldownDuration\",\"type\":\"uint256\"}],\"name\":\"initMCDAwarePool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ScdMcdMigration\",\"name\":\"_scdMcdMigration\",\"type\":\"address\"},{\"internalType\":\"contract MCDAwarePool\",\"name\":\"_saiPool\",\"type\":\"address\"}],\"name\":\"initMigration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockEndAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lockTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"moveCommitted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextFeeBeneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextFeeFraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"openBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nextSecretHash\",\"type\":\"bytes32\"}],\"name\":\"openNextDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseDeposits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poolToken\",\"outputs\":[{\"internalType\":\"contract PoolToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_secret\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"reward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nextSecretHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lastSecret\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"rewardAndOpenNextDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"rollover\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nextSecretHash\",\"type\":\"bytes32\"}],\"name\":\"rolloverAndOpenNextDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saiPool\",\"outputs\":[{\"internalType\":\"contract MCDAwarePool\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"saiToken\",\"outputs\":[{\"internalType\":\"contract GemLike\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"scdMcdMigration\",\"outputs\":[{\"internalType\":\"contract ScdMcdMigration\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeBeneficiary\",\"type\":\"address\"}],\"name\":\"setNextFeeBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeFraction\",\"type\":\"uint256\"}],\"name\":\"setNextFeeFraction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract PoolToken\",\"name\":\"_poolToken\",\"type\":\"address\"}],\"name\":\"setPoolToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"sponsorshipAndFeeBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"totalBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferBalanceToSponsorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlockTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpauseDeposits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCommittedDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCommittedDepositFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawOpenDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawSponsorshipAndFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Brendan Asselstine brendan@pooltogether.us\",\"methods\":{\"addAdmin(address)\":{\"params\":{\"_admin\":\"The address of the admin to add\"}},\"balance()\":{\"return\":\"The cToken underlying balance for this contract.\"},\"balanceOf(address)\":{\"params\":{\"_addr\":\"The address of the user to check.\"},\"return\":\"The user's current balance.\"},\"calculateWinner(bytes32)\":{\"params\":{\"_entropy\":\"The entropy to use to select the winner\"},\"return\":\"The winning address\"},\"canLock()\":{\"return\":\"True if the contract can be locked, false otherwise\"},\"committedBalanceOf(address)\":{\"params\":{\"_addr\":\"The address of the user\"},\"return\":\"The total committed balance for the user\"},\"committedSupply()\":{\"return\":\"The total committed balance.\"},\"cooldownDuration()\":{\"return\":\"The cooldown duration in blocks\"},\"cooldownEndAt()\":{\"return\":\"The block number at which the cooldown ends and the contract can be re-locked\"},\"currentCommittedDrawId()\":{\"return\":\"The current committed Draw id\"},\"currentOpenDrawId()\":{\"return\":\"The current open Draw id\"},\"daiToken()\":{\"return\":\"The address of the Dai token.\"},\"depositPool(uint256)\":{\"params\":{\"_amount\":\"The amount of the token underlying the cToken to deposit.\"}},\"depositSponsorship(uint256)\":{\"params\":{\"_amount\":\"The amount of the token underlying the cToken to deposit.\"}},\"estimatedInterestRate(uint256)\":{\"params\":{\"_blocks\":\"The number of block that interest accrued for\"},\"return\":\"The total estimated interest as a 18 point fixed decimal.\"},\"getDraw(uint256)\":{\"params\":{\"_drawId\":\"The id of the Draw to retrieve info for.\"},\"return\":\"Fields including: feeFraction: the fee fraction feeBeneficiary: the beneficiary of the fee openedBlock: The block at which the draw was opened secretHash: The hash of the secret committed to this draw. entropy: the entropy used to select the winner winner: the address of the winner netWinnings: the total winnings less the fee fee: the fee taken by the beneficiary\"},\"init(address,address,uint256,address,uint256,uint256)\":{\"params\":{\"_cToken\":\"The Compound cToken to bind this Pool to\",\"_feeBeneficiary\":\"The beneficiary who receives the fee\",\"_feeFraction\":\"The fraction of the winnings to give to the beneficiary\",\"_owner\":\"The initial administrator of the contract\"}},\"isAdmin(address)\":{\"params\":{\"_admin\":\"The address to check\"},\"return\":\"True if the address is an admin, false otherwise.\"},\"isLocked()\":{\"return\":\"True if the contract is locked, false otherwise\"},\"lockDuration()\":{\"return\":\"Returns the duration of the lock in blocks.\"},\"lockEndAt()\":{\"return\":\"The block number at which the lock expires\"},\"lockTokens()\":{\"details\":\"The lock only lasts for a duration of blocks.  The lock cannot be relocked until the cooldown duration completes.\"},\"moveCommitted(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to transfer\",\"_from\":\"The account to move tokens from\",\"_to\":\"The account that is receiving the tokens\"}},\"openBalanceOf(address)\":{\"params\":{\"_addr\":\"The address of the user\"},\"return\":\"The total open balance for the user\"},\"openNextDraw(bytes32)\":{\"params\":{\"nextSecretHash\":\"The secret hash to use to open a new Draw\"}},\"openSupply()\":{\"return\":\"The total open balance\"},\"removeAdmin(address)\":{\"params\":{\"_admin\":\"The address of the admin to remove\"}},\"reward(bytes32,bytes32)\":{\"params\":{\"_salt\":\"The salt that was used to conceal the secret\",\"_secret\":\"The secret to reveal for the current committed Draw\"}},\"rewardAndOpenNextDraw(bytes32,bytes32,bytes32)\":{\"params\":{\"_salt\":\"The salt that was used to conceal the secret\",\"lastSecret\":\"The secret to reveal to reward the current committed Draw.\",\"nextSecretHash\":\"The secret hash to use to open a new Draw\"}},\"rollover()\":{\"details\":\"This function will be removed once the entropy is decentralized.\"},\"rolloverAndOpenNextDraw(bytes32)\":{\"details\":\"This function will be removed once the winner selection has been decentralized.\",\"params\":{\"nextSecretHash\":\"The hash to commit for the next draw\"}},\"saiToken()\":{\"return\":\"The address of the sai token\"},\"setNextFeeBeneficiary(address)\":{\"params\":{\"_feeBeneficiary\":\"The beneficiary for the fee fraction.  Cannot be the 0 address.\"}},\"setNextFeeFraction(uint256)\":{\"params\":{\"_feeFraction\":\"The fee fraction to use. Must be between 0 and 1 and formatted as a fixed point number with 18 decimals (as in Ether).\"}},\"sponsorshipAndFeeBalanceOf(address)\":{\"params\":{\"_sender\":\"The user whose balance should be returned\"}},\"supplyRatePerBlock()\":{\"return\":\"The cToken supply rate per block\"},\"token()\":{\"return\":\"An ERC20 token address\"},\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"params\":{\"amount\":\"The amount they are transferring\",\"from\":\"The sender\"}},\"totalBalanceOf(address)\":{\"params\":{\"_addr\":\"The address of the user to check.\"},\"return\":\"The user's current balance.\"},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount to withdraw.\"}},\"withdrawCommittedDeposit(uint256)\":{\"params\":{\"_amount\":\"The amount to withdraw\"}},\"withdrawCommittedDepositFrom(address,uint256)\":{\"params\":{\"_amount\":\"The amount to withdraw\",\"_from\":\"The user to withdraw from\"}},\"withdrawOpenDeposit(uint256)\":{\"params\":{\"_amount\":\"The amount to withdraw\"}},\"withdrawSponsorshipAndFee(uint256)\":{\"params\":{\"_amount\":\"The amount to withdraw\"}}},\"title\":\"MCDAwarePool\"},\"userdoc\":{\"methods\":{\"addAdmin(address)\":{\"notice\":\"Adds an administrator. Can only be called by administrators. Fires the AdminAdded event.\"},\"balance()\":{\"notice\":\"Returns the underlying balance of this contract in the cToken.\"},\"balanceOf(address)\":{\"notice\":\"Returns a user's committed balance.  This is the balance of their Pool tokens.\"},\"calculateWinner(bytes32)\":{\"notice\":\"Calculates a winner using the passed entropy for the current committed balances.\"},\"canLock()\":{\"notice\":\"Returns whether the contract can be locked\"},\"committedBalanceOf(address)\":{\"notice\":\"Returns the total of the address's balance in committed Draws.  That is, the total that contributes to their chances of winning.\"},\"committedSupply()\":{\"notice\":\"Returns the total committed balance.  Used to compute an address's chances of winning.\"},\"cooldownDuration()\":{\"notice\":\"Returns the cooldown duration.  The cooldown period starts after the Pool has been unlocked. The Pool cannot be locked during the cooldown period.\"},\"cooldownEndAt()\":{\"notice\":\"Check cooldown end block\"},\"currentCommittedDrawId()\":{\"notice\":\"Returns the id of the current committed Draw.\"},\"currentOpenDrawId()\":{\"notice\":\"Returns the id of the current open Draw.\"},\"daiToken()\":{\"notice\":\"Returns the address of the Dai token\"},\"depositPool(uint256)\":{\"notice\":\"Deposits into the pool under the current open Draw.  The deposit is transferred into the cToken. Once the open draw is committed, the deposit will be added to the user's total committed balance and increase their chances of winning proportional to the total committed balance of all users.\"},\"depositSponsorship(uint256)\":{\"notice\":\"Allows a user to deposit a sponsorship amount.  The deposit is transferred into the cToken. Sponsorships allow a user to contribute to the pool without becoming eligible to win.  They can withdraw their sponsorship at any time. The deposit will immediately be added to Compound and the interest will contribute to the next draw.\"},\"estimatedInterestRate(uint256)\":{\"notice\":\"Calculates the total estimated interest earned for the given number of blocks\"},\"getDraw(uint256)\":{\"notice\":\"Gets information for a given draw.\"},\"init(address,address,uint256,address,uint256,uint256)\":{\"notice\":\"Initializes the contract.\"},\"initMCDAwarePool(uint256,uint256)\":{\"notice\":\"Used to initialize the BasePool contract after an upgrade.  Registers the MCDAwarePool with the ERC1820 registry so that it can receive tokens, and inits the block lock.\"},\"isAdmin(address)\":{\"notice\":\"Checks whether a given address is an administrator.\"},\"isLocked()\":{\"notice\":\"Check if the contract is locked.\"},\"lockDuration()\":{\"notice\":\"Duration of the lock\"},\"lockEndAt()\":{\"notice\":\"Returns the block number at which the lock expires\"},\"lockTokens()\":{\"notice\":\"Locks the movement of tokens (essentially the committed deposits and winnings)\"},\"moveCommitted(address,address,uint256)\":{\"notice\":\"Allows the associated PoolToken to move committed tokens from one user to another.\"},\"openBalanceOf(address)\":{\"notice\":\"Returns the total of the address's balance in the open Draw.  That is, the total that will *eventually* contribute to their chances of winning.\"},\"openNextDraw(bytes32)\":{\"notice\":\"Commits the current open draw, if any, and opens the next draw using the passed hash.  Really this function is only called twice: the first after Pool contract creation and the second immediately after. Can only be called by an admin. May fire the Committed event, and always fires the Open event.\"},\"openSupply()\":{\"notice\":\"Returns the total open balance.  This balance is the number of tickets purchased for the open draw.\"},\"pauseDeposits()\":{\"notice\":\"Pauses all deposits into the contract.  This was added so that we can slowly deprecate Pools.  Users can continue to collect rewards and withdraw, but eventually the Pool will grow smaller.   * emits DepositsPaused\"},\"removeAdmin(address)\":{\"notice\":\"Removes an administrator Can only be called by an admin. Admins cannot remove themselves.  This ensures there is always one admin.\"},\"reward(bytes32,bytes32)\":{\"notice\":\"Rewards the winner for the current committed Draw using the passed secret. The gross winnings are calculated by subtracting the accounted balance from the current underlying cToken balance. A winner is calculated using the revealed secret. If there is a winner (i.e. any eligible users) then winner's balance is updated with their net winnings. The draw beneficiary's balance is updated with the fee. The accounted balance is updated to include the fee and, if there was a winner, the net winnings. Fires the Rewarded event.\"},\"rewardAndOpenNextDraw(bytes32,bytes32,bytes32)\":{\"notice\":\"Rewards the current committed draw using the passed secret, commits the current open draw, and opens the next draw using the passed secret hash. Can only be called by an admin. Fires the Rewarded event, the Committed event, and the Open event.\"},\"rollover()\":{\"notice\":\"A function that skips the reward for the committed draw id.\"},\"rolloverAndOpenNextDraw(bytes32)\":{\"notice\":\"Ignores the current draw, and opens the next draw.\"},\"saiToken()\":{\"notice\":\"Returns the address of the Sai token\"},\"setNextFeeBeneficiary(address)\":{\"notice\":\"Sets the fee beneficiary for subsequent Draws. Can only be called by admins.\"},\"setNextFeeFraction(uint256)\":{\"notice\":\"Sets the beneficiary fee fraction for subsequent Draws. Fires the NextFeeFractionChanged event. Can only be called by an admin.\"},\"sponsorshipAndFeeBalanceOf(address)\":{\"notice\":\"Returns the total balance of the user's sponsorship and fees\"},\"supplyRatePerBlock()\":{\"notice\":\"Convenience function to return the supplyRatePerBlock value from the money market contract.\"},\"token()\":{\"notice\":\"Returns the token underlying the cToken.\"},\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"notice\":\"Called by an ERC777 token when tokens are sent, transferred, or minted.  If the sender is the original Sai Pool and this pool is bound to the Dai token then it will accept the transfer, migrate the tokens, and deposit on behalf of the sender.  It will reject all other tokens.   * If there is a committed draw this function will mint the user tickets immediately, otherwise it will place them in the open prize.  This is to encourage migration.\"},\"totalBalanceOf(address)\":{\"notice\":\"Returns a user's total balance.  This includes their sponsorships, fees, open deposits, and committed deposits.\"},\"transferBalanceToSponsorship()\":{\"notice\":\"Deposits the token balance for this contract as a sponsorship. If people erroneously transfer tokens to this contract, this function will allow us to recoup those tokens as sponsorship.\"},\"unlockTokens()\":{\"notice\":\"Unlocks the movement of tokens (essentially the committed deposits)\"},\"unpauseDeposits()\":{\"notice\":\"Unpauses all deposits into the contract   * emits DepositsUnpaused\"},\"withdraw()\":{\"notice\":\"Withdraw the sender's entire balance back to them.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws the given amount from the user's deposits.  It first withdraws from their sponsorship, then their open deposits, then their committed deposits.\"},\"withdrawCommittedDeposit(uint256)\":{\"notice\":\"Withdraws from the user's committed deposits\"},\"withdrawCommittedDepositFrom(address,uint256)\":{\"notice\":\"Allows the associated PoolToken to withdraw for a user; useful when redeeming through the token.\"},\"withdrawOpenDeposit(uint256)\":{\"notice\":\"Withdraws from the user's open deposits\"},\"withdrawSponsorshipAndFee(uint256)\":{\"notice\":\"Withdraws only from the sender's sponsorship and fee balances\"}},\"notice\":\"This contract is a Pool that is aware of the new Multi-Collateral Dai.  It uses the ERC777Recipient interface to detect if it's being transferred tickets from the old single collateral Dai (Sai) Pool.  If it is, it migrates the Sai to Dai and immediately deposits the new Dai as committed tickets for that user.  We are knowingly bypassing the committed period for users to encourage them to migrate to the MCD Pool.\"}},\"settings\":{\"compilationTarget\":{\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/MCDAwarePool.sol\":\"MCDAwarePool\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/BasePool.sol\":{\"keccak256\":\"0x9020308e3a615f59bb2d01b91150a2b3e463268a53d1fd7e687cf024d4f7a9d0\",\"urls\":[\"bzz-raw://cc85dcade9f882befa8062997718a06719ae8a6f1342227ccaa7c74c93b06463\",\"dweb:/ipfs/QmVvWMgFueyqgFoxwsf7f3bDoMKSKfbePVAuNkrsm6PJXo\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/Blocklock.sol\":{\"keccak256\":\"0x158e97130210f3580c43fce4ce288ea17e6d5f9d58a325b40402d889db00942e\",\"urls\":[\"bzz-raw://c1eddcab7465c39306d2ab91b2cc087bc7853dc7f667f0962934424ca0005196\",\"dweb:/ipfs/QmZFFnDcssFD1Xds1RmRvbWSbNjoioGZiP6sHKUV8SqCk9\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/DrawManager.sol\":{\"keccak256\":\"0xb90436524adbc8d8540ceb1a46b02b784b36dc96da64590b2b17e8e162327a11\",\"urls\":[\"bzz-raw://feaa738fc2f23700a0fb08b8c3841e24af443e3e282bed4ec99f2bbf9fc8aa85\",\"dweb:/ipfs/QmNswHbzyR3MRtTPAJ2DVaVnRLstNQNf7n3C7xrs89LKu6\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/MCDAwarePool.sol\":{\"keccak256\":\"0x49f3641a785f145a71433bb49dfe01958f64ddd4de15263fae1d5a3d39425132\",\"urls\":[\"bzz-raw://8bd8c5114b1dd2d397a39e03345f18bee849ff97c4d5ad576c60436ffe946a46\",\"dweb:/ipfs/Qmep9G8vAucsswauCqBiukx5UkgwzZJsquFDm4qFZRV5T2\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/PoolToken.sol\":{\"keccak256\":\"0xfe844eff920f3adf328286ff1bf531b6e586b575f82810123e72eca9235c1693\",\"urls\":[\"bzz-raw://f5d80d253f279c451870d9ed670179d9169a91ecf36dcfa00f95b7383df84ee0\",\"dweb:/ipfs/Qmd87yqYVzDYvXVQRogamyr8HtDVnCZeDFmqzhDyyfPpjk\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/UniformRandomNumber.sol\":{\"keccak256\":\"0x3da93664cd691eeab755215900bf807b9eda48675f6a3352c48f00c76d64c0fe\",\"urls\":[\"bzz-raw://395e8565cbd4bcf2b52f2ca54f57bd698b0aafa9a3cb2c2529fd365aa5377001\",\"dweb:/ipfs/QmeYh6NZTNjwvmCWx2HhPpK7aKruckjffcqdXkYRbb1uBX\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/compound/ICErc20.sol\":{\"keccak256\":\"0xd3179b29bdebb875acd0f6785089865665a77a7ebef7af49148ef570b5aa3299\",\"urls\":[\"bzz-raw://76445d294ee21c23039e42464c4e6cb4e7ad4670ffdd1fb9e7831abfa22bd0c3\",\"dweb:/ipfs/QmXGHtodEpTBMMd2yzPaKme758rVbjub4oYwg2tXSYp5Jp\"]},\"@deltacamp/kleros/contracts/data-structures/SortitionSumTreeFactory.sol\":{\"keccak256\":\"0x42614530f33b32e10cba4b1de0c3ecf6ff2e58599d8ff7ff1556052df02546d1\",\"urls\":[\"bzz-raw://505e577de7d8df1dc385e88109e64786c2224c5567896f4155b99534f9fc57b5\",\"dweb:/ipfs/QmQLLX6ZNxsjDEMzsBxASw9j1WTRetDzmZDJVdDmDao81Y\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x03c69b91f23efafb5d460b32520ac5066a084347733de3078cf2ba9b33397945\",\"urls\":[\"bzz-raw://2bed1580fb9b2ea946b2709cfccdc43aa2ed0089f61fb94201f385b297d027c2\",\"dweb:/ipfs/QmR2ogAcEAAiM5A4gHFTiQemYuZpVriei5Ud26j4YSQcfc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x01d1e2116e2d3a45d066969cf500da0648cb4903b885589021eaeb89f325d70f\",\"urls\":[\"bzz-raw://6783602f84db63a7fd140df918cd12b91d56a57b1f90b1f5f25798c3d7602987\",\"dweb:/ipfs/QmbDjeBQQguEsQWsfSd6WeKD5hGDhBdUFUX9KHMy3w5evz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x6b097bc7c7762b5ad4a7447755e3654ada71d1c10f40c0ad5a4f820892f67edf\",\"urls\":[\"bzz-raw://299e4189bf254f1df707ad2366ed41c91440eb58b6e937e46b7b349ba1124afb\",\"dweb:/ipfs/QmcQHnb9mZ3ibkzpsUfyCYobavoS5gwPhPBasomxNnsycj\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0xabd5c2413dd920a9737db506fd8691e147f010fe30e3cef33a6a2c89288f15f3\",\"urls\":[\"bzz-raw://6a3165a338de13310cf58d9e2be4afc2c7ddf44beb3a2115e5cc43286553cf65\",\"dweb:/ipfs/QmNPNSWc5yX5D3gkZnzd95JX2r2L87iSWVu8CbundMj94n\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]},\"fixidity/contracts/FixidityLib.sol\":{\"keccak256\":\"0x4c7bbef8a69774e26fd25e3b22e323ec2cf7a5597de19ad525949db97b8e5ec3\",\"urls\":[\"bzz-raw://76ff3484d58b722e62b6c8b705ed8f67e92fd0ed1f3d41033f20f84efa8da2c0\",\"dweb:/ipfs/QmTtJ75geNDPcxEG66dWsvh5u3PF9xz2D7LAjqArTJaqwG\"]},\"scd-mcd-migration/src/Interfaces.sol\":{\"keccak256\":\"0x774df5e08d8f467972c5a516a2d24cdd49d70efa2a193060129f1f61691d9007\",\"urls\":[\"bzz-raw://22549646279bb79adb11999e77859d043bfb9d948ddde50fae238369e2da24eb\",\"dweb:/ipfs/QmQZaGXHib8SddA9NMT12ap1VVAJsgyEsSkLVxJeZi2Epp\"]},\"scd-mcd-migration/src/ScdMcdMigration.sol\":{\"keccak256\":\"0xf133df5c24ee999c84205010e11ea5dcf275e2004040c2e5d29420a191903e25\",\"urls\":[\"bzz-raw://b1c1fce6fe7057283164eab5794f25ee8c39d8f38c62149b053a66bb1f4d63c7\",\"dweb:/ipfs/QmPfFGiZofYZFiob3ETPFhLotsAWXEUH7R1NeL8xHRZdyQ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50614ff5806100206000396000f3fe608060405234801561001057600080fd5b50600436106103ae5760003560e01c806370a08231116101f4578063a69121001161011a578063cbdf382c116100ad578063f27413ca1161007c578063f27413ca146109eb578063f968f493146109f3578063fc0c546a146109fb578063fe8e190114610a03576103ae565b8063cbdf382c146109b0578063cfb51052146109b8578063d9b6ccbf146109db578063e8f099f4146109e3576103ae565b8063b69ef8a8116100e9578063b69ef8a814610914578063be22f5461461091c578063be6307c814610924578063c1ebb4ac14610993576103ae565b8063a69121001461089d578063ac2defea146108e7578063ae9d70b014610904578063b056b49a1461090c576103ae565b80639512cb2211610192578063a30184de11610161578063a30184de14610844578063a3aac0e21461084c578063a423cd2914610869578063a4e2d63414610895576103ae565b80639512cb22146107f657806395cad80d146107fe5780639ad8bd78146108065780639e63a8c51461080e576103ae565b80637f77fc4d116101ce5780637f77fc4d146107a05780638129fc1c146107a8578063815d85d2146107b0578063944b1479146107d9576103ae565b806370a082311461075d57806377bbb7571461078357806379f087711461075d576103ae565b80633c10e560116102d95780634b0ee02a1161027757806363d8882a1161024657806363d8882a1461070357806369e527da1461070b5780636cbb721f1461072f5780637048027514610737576103ae565b80634b0ee02a1461068957806350193485146106af578063569afbc8146106d55780635c975abb146106fb576103ae565b80633d3d6a1a116102b35780633d3d6a1a14610621578063426d58e514610647578063435edacd146106645780634780006814610681576103ae565b80633c10e560146105f45780633c4be957146105fc5780633ccfd60b14610619576103ae565b80631785f53c11610351578063304c967011610320578063304c96701461059057806333ce01fd1461059857806335269315146105be578063391cc955146105c6576103ae565b80631785f53c146104f6578063234409441461051c57806324d7806c146105395780632e1a7d4d14610573576103ae565b80630937eb541161038d5780630937eb54146104c15780630a56293d146104c95780630ea0ffc4146104d157806314f74b8c146104ee576103ae565b806223de29146103b3578063021919801461049f57806304554443146104a7575b600080fd5b61049d600480360360c08110156103c957600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a08101608082013564010000000081111561040c57600080fd5b82018360208201111561041e57600080fd5b8035906020019184600183028401116401000000008311171561044057600080fd5b91939092909160208101903564010000000081111561045e57600080fd5b82018360208201111561047057600080fd5b8035906020019184600183028401116401000000008311171561049257600080fd5b509092509050610a26565b005b61049d610cb5565b6104af610d86565b60408051918252519081900360200190f35b6104af610d8d565b61049d610d93565b61049d600480360360208110156104e757600080fd5b5035610e54565b6104af610f74565b61049d6004803603602081101561050c57600080fd5b50356001600160a01b0316610f7a565b61049d6004803603602081101561053257600080fd5b50356110b4565b61055f6004803603602081101561054f57600080fd5b50356001600160a01b03166112e7565b604080519115158252519081900360200190f35b61049d6004803603602081101561058957600080fd5b5035611302565b6104af61152c565b61049d600480360360208110156105ae57600080fd5b50356001600160a01b0316611532565b6104af6116b6565b61049d600480360360408110156105dc57600080fd5b506001600160a01b03813581169160200135166116bc565b6104af611715565b61049d6004803603602081101561061257600080fd5b5035611726565b61049d6117c0565b61049d6004803603602081101561063757600080fd5b50356001600160a01b0316611a9e565b61049d6004803603602081101561065d57600080fd5b5035611af6565b61055f6004803603602081101561067a57600080fd5b5035611c1e565b6104af611d49565b6104af6004803603602081101561069f57600080fd5b50356001600160a01b0316611dce565b6104af600480360360208110156106c557600080fd5b50356001600160a01b0316611de9565b6104af600480360360208110156106eb57600080fd5b50356001600160a01b0316611e80565b61055f611f39565b61049d611f42565b610713612013565b604080516001600160a01b039092168252519081900360200190f35b61055f612022565b61049d6004803603602081101561074d57600080fd5b50356001600160a01b031661207e565b6104af6004803603602081101561077357600080fd5b50356001600160a01b03166120d6565b6104af6004803603602081101561079957600080fd5b503561213b565b6104af612155565b61049d61217a565b61049d600480360360608110156107c657600080fd5b5080359060208101359060400135612220565b61049d600480360360208110156107ef57600080fd5b5035612287565b6104af6122df565b61049d6122eb565b6107136123c7565b61055f6004803603606081101561082457600080fd5b506001600160a01b038135811691602081013590911690604001356123d6565b610713612780565b61049d6004803603602081101561086257600080fd5b5035612849565b61055f6004803603604081101561087f57600080fd5b506001600160a01b0381351690602001356128a9565b61055f6129d3565b61049d600480360360c08110156108b357600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359091169060808101359060a00135612a2e565b610713600480360360208110156108fd57600080fd5b5035612af6565b6104af612b52565b61049d612bab565b6104af612d25565b610713612d71565b6109416004803603602081101561093a57600080fd5b5035612e26565b604080519889526001600160a01b0397881660208a0152888101969096526060880194909452608087019290925290931660a085015260c084019290925260e083019190915251908190036101000190f35b61049d600480360360208110156109a957600080fd5b5035612e76565b610713612f3e565b61049d600480360360408110156109ce57600080fd5b5080359060200135612f4d565b6107136134f5565b6104af613504565b610713613558565b61049d613567565b61071361360e565b61049d60048036036040811015610a1957600080fd5b5080359060200135613653565b60735460ff1615610a6e576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b610a7661366c565b6001600160a01b0316336001600160a01b031614610acb576040805162461bcd60e51b815260206004820152600d60248201526c506f6f6c2f7361692d6f6e6c7960981b604482015290519081900360640190fd5b610ad3612d71565b6001600160a01b0316610ae461360e565b6001600160a01b031614610b2e576040805162461bcd60e51b815260206004820152600c60248201526b506f6f6c2f6e6f742d64616960a01b604482015290519081900360640190fd5b610b3661366c565b6001600160a01b031663e77c646d866040518263ffffffff1660e01b8152600401808281526020018060200182810382526000815260200160200192505050600060405180830381600087803b158015610b8f57600080fd5b505af1158015610ba3573d6000803e3d6000fd5b50505050610baf612780565b6079546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018990529051929091169163095ea7b39160448082019260009290919082900301818387803b158015610c0557600080fd5b505af1158015610c19573d6000803e3d6000fd5b50506079546040805163fbabdebd60e01b8152600481018a905290516001600160a01b03909216935063fbabdebd925060248082019260009290919082900301818387803b158015610c6a57600080fd5b505af1158015610c7e573d6000803e3d6000fd5b505050506000610c8c612155565b1115610ca157610c9c8786613701565b610cab565b610cab8786613891565b5050505050505050565b60735460ff1615610cfd576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b610d0e60723363ffffffff61395e16565b610d4c576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6073805460ff1916600117905560405133907feb225a736fbfee3f85ccb72bdf84ff0396ab358b7970e2cc351ab3e3fd92358d90600090a2565b6076545b90565b60695481565b610da460723363ffffffff61395e16565b610de2576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b60408051633e825e6d60e01b815260746004820152436024820152905173__Blocklock_____________________________91633e825e6d916044808301926000929190829003018186803b158015610e3a57600080fd5b505af4158015610e4e573d6000803e3d6000fd5b50505050565b60338054600101908190556040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b158015610eb657600080fd5b505af4158015610eca573d6000803e3d6000fd5b505050506040513d6020811015610ee057600080fd5b505115610f22576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b610f2c33836139c5565b6033548114610f70576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b5050565b60685481565b610f8b60723363ffffffff61395e16565b610fc9576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b610fda60728263ffffffff61395e16565b61101b576040805162461bcd60e51b815260206004820152600d60248201526c2837b7b617b73796b0b236b4b760991b604482015290519081900360640190fd5b6001600160a01b03811633141561106c576040805162461bcd60e51b815260206004820152601060248201526f2837b7b617b932b6b7bb3296b9b2b63360811b604482015290519081900360640190fd5b61107d60728263ffffffff613a9216565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6110bc61152c565b6110fc576040805162461bcd60e51b815260206004820152600c60248201526b2837b7b617b73796b7b832b760a11b604482015290519081900360640190fd5b60735460ff1615611144576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b60338054600101908190556040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b1580156111a657600080fd5b505af41580156111ba573d6000803e3d6000fd5b505050506040513d60208110156111d057600080fd5b505115611212576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b61121a61360e565b604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b0392909216916323b872dd916064808201926020929091908290030181600087803b15801561127257600080fd5b505af1158015611286573d6000803e3d6000fd5b505050506040513d602081101561129c57600080fd5b50516112dd576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdd0b59985a5b60aa1b604482015290519081900360640190fd5b610f2c3383613891565b60006112fa60728363ffffffff61395e16565b90505b919050565b60338054600101908190556040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561136457600080fd5b505af4158015611378573d6000803e3d6000fd5b505050506040513d602081101561138e57600080fd5b5051156113d0576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b8160006113dc33611e80565b905081811015611406576113ef81611726565b6113ff828263ffffffff613af916565b9150611416565b61140f82611726565b5050610f2c565b6040805163713b41f560e11b8152606c6004820152336024820152905160009173__DrawManager___________________________9163e27683ea91604480820192602092909190829003018186803b15801561147257600080fd5b505af4158015611486573d6000803e3d6000fd5b505050506040513d602081101561149c57600080fd5b50519050828110156114c9576114b233826139c5565b6114c2838263ffffffff613af916565b92506114db565b6114d333846139c5565b505050610f2c565b6114e53384613b3b565b5050506033548114610f70576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b60705490565b61154360723363ffffffff61395e16565b611581576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6078546001600160a01b0316156115d4576040805162461bcd60e51b8152602060048201526012602482015271141bdbdb0bdd1bdad95b8b5dd85ccb5cd95d60721b604482015290519081900360640190fd5b306001600160a01b0316816001600160a01b03166316f0115b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561161757600080fd5b505afa15801561162b573d6000803e3d6000fd5b505050506040513d602081101561164157600080fd5b50516001600160a01b031614611694576040805162461bcd60e51b81526020600482015260136024820152720a0deded85ee8ded6cadc5adad2e6dac2e8c6d606b1b604482015290519081900360640190fd5b607880546001600160a01b0319166001600160a01b0392909216919091179055565b60775490565b6116cd60723363ffffffff61395e16565b61170b576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b610f708282613bc8565b60006117216074613c8a565b905090565b600061173133611e80565b90508082111561177c576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c2f657863656564732d7366656560781b604482015290519081900360640190fd5b6117863383613cd0565b60408051838152905133917f6a4d2bc0b4e5453e814890ffd34fde45f1820118a5e3e08c8273e6befd8cc050919081900360200190a25050565b60338054600101908190556040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561182257600080fd5b505af4158015611836573d6000803e3d6000fd5b505050506040513d602081101561184c57600080fd5b50511561188e576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b604080516311f43c3360e31b8152606c6004820152336024820152905160009173__DrawManager___________________________91638fa1e19891604480820192602092909190829003018186803b1580156118ea57600080fd5b505af41580156118fe573d6000803e3d6000fd5b505050506040513d602081101561191457600080fd5b5051336000818152606a6020526040808220548151631326e7a760e21b8152606c6004820152602481019490945290519394509273__DrawManager___________________________92634c9b9e9c926044808301939192829003018186803b15801561198057600080fd5b505af4158015611994573d6000803e3d6000fd5b505050506119a23382613cd0565b6078546001600160a01b031615611a1f57607854604080516314274ad960e01b81523360048201526024810185905290516001600160a01b03909216916314274ad99160448082019260009290919082900301818387803b158015611a0657600080fd5b505af1158015611a1a573d6000803e3d6000fd5b505050505b60408051828152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a250506033548114611a9b576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b50565b611aaf60723363ffffffff61395e16565b611aed576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b611a9b81613efb565b60735460ff1615611b3e576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b6033805460010190819055611b5161360e565b604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b0392909216916323b872dd916064808201926020929091908290030181600087803b158015611ba957600080fd5b505af1158015611bbd573d6000803e3d6000fd5b505050506040513d6020811015611bd357600080fd5b5051611c14576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdd0b59985a5b60aa1b604482015290519081900360640190fd5b610f2c3383613f90565b60338054600101908190556040805162dec4c960e41b81526074600482015243602482015290516000929173__Blocklock_____________________________91630dec4c9091604480820192602092909190829003018186803b158015611c8557600080fd5b505af4158015611c99573d6000803e3d6000fd5b505050506040513d6020811015611caf57600080fd5b505115611cf1576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b611cfb3384613b3b565b600191506033548114611d43576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b50919050565b6000606c73__DrawManager___________________________63ed21d6ea90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611d9d57600080fd5b505af4158015611db1573d6000803e3d6000fd5b505050506040513d6020811015611dc757600080fd5b5051905090565b6001600160a01b03166000908152606a602052604090205490565b6040805163713b41f560e11b8152606c60048201526001600160a01b0383166024820152905160009173__DrawManager___________________________9163e27683ea91604480820192602092909190829003018186803b158015611e4e57600080fd5b505af4158015611e62573d6000803e3d6000fd5b505050506040513d6020811015611e7857600080fd5b505192915050565b604080516305a094bf60e51b8152606c60048201526001600160a01b038316602482015290516000916112fa9173__DrawManager___________________________9163b41297e0916044808301926020929190829003018186803b158015611ee857600080fd5b505af4158015611efc573d6000803e3d6000fd5b505050506040513d6020811015611f1257600080fd5b50516001600160a01b0384166000908152606a60205260409020549063ffffffff613af916565b60735460ff1681565b60735460ff16611f8d576040805162461bcd60e51b8152602060048201526011602482015270141bdbdb0bd90b5b9bdd0b5c185d5cd959607a1b604482015290519081900360640190fd5b611f9e60723363ffffffff61395e16565b611fdc576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6073805460ff1916905560405133907fd92e31f504caf26579aa9a5860a669bf0ccf07c267baa65bc79bf3ee57cfa27c90600090a2565b6066546001600160a01b031681565b60408051631307db5360e11b815260746004820152436024820152905160009173__Blocklock_____________________________9163260fb6a691604480820192602092909190829003018186803b158015611d9d57600080fd5b61208f60723363ffffffff61395e16565b6120cd576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b611a9b81613fdd565b604080516311f43c3360e31b8152606c60048201526001600160a01b0383166024820152905160009173__DrawManager___________________________91638fa1e19891604480820192602092909190829003018186803b158015611e4e57600080fd5b60006112fa82612149612b52565b9063ffffffff61402516565b60006001606c600401541115612172575060705460001901610d8a565b506000610d8a565b600054610100900460ff1680612193575061219361407e565b806121a1575060005460ff16155b6121dc5760405162461bcd60e51b815260040180806020018281038252602e815260200180614f93602e913960400191505060405180910390fd5b600054610100900460ff16158015612207576000805460ff1961ff0019909116610100171660011790555b60016033558015611a9b576000805461ff001916905550565b61223160723363ffffffff61395e16565b61226f576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6122798282612f4d565b61228283612e76565b505050565b61229860723363ffffffff61395e16565b6122d6576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b611a9b81614084565b6000611721607461410a565b60735460ff1615612333576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b6123c53061233f61360e565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561239457600080fd5b505afa1580156123a8573d6000803e3d6000fd5b505050506040513d60208110156123be57600080fd5b5051613f90565b565b6067546001600160a01b031681565b6078546000906001600160a01b0316331461242a576040805162461bcd60e51b815260206004820152600f60248201526e2837b7b617b7b7363c96ba37b5b2b760891b604482015290519081900360640190fd5b604080516311f43c3360e31b8152606c60048201526001600160a01b038616602482015290518591849160009173__DrawManager___________________________91638fa1e19891604480820192602092909190829003018186803b15801561249357600080fd5b505af41580156124a7573d6000803e3d6000fd5b505050506040513d60208110156124bd57600080fd5b5051905080821115612509576040805162461bcd60e51b815260206004820152601060248201526f6e6f7420656e6f7567682066756e647360801b604482015290519081900360640190fd5b6040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561256057600080fd5b505af4158015612574573d6000803e3d6000fd5b505050506040513d602081101561258a57600080fd5b5051156125cc576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b604080518082018252601981527f6d6f766520636f756c64206e6f742073756220616d6f756e74000000000000006020808301919091526001600160a01b038a166000908152606a909152919091205461262d91879063ffffffff61412916565b6001600160a01b038089166000908152606a60205260408082209390935590881681522054612662908663ffffffff6141c016565b6001600160a01b038088166000908152606a60205260408082209390935582516362559ecd60e11b8152606c6004820152918a16602483015260448201889052915173__DrawManager___________________________9263c4ab3d9a9260648082019391829003018186803b1580156126db57600080fd5b505af41580156126ef573d6000803e3d6000fd5b5050604080516349ec2abb60e11b8152606c60048201526001600160a01b038a16602482015260448101899052905173__DrawManager___________________________93506393d8557692506064808301926000929190829003018186803b15801561275b57600080fd5b505af415801561276f573d6000803e3d6000fd5b5060019a9950505050505050505050565b60795460408051630b14408f60e01b815290516000926001600160a01b031691630b14408f916004808301926020929190829003018186803b1580156127c557600080fd5b505afa1580156127d9573d6000803e3d6000fd5b505050506040513d60208110156127ef57600080fd5b505160408051637bd2bea760e01b815290516001600160a01b0390921691637bd2bea7916004808201926020929091908290030181600087803b15801561283557600080fd5b505af1158015611db1573d6000803e3d6000fd5b61285a60723363ffffffff61395e16565b612898576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6128a0612bab565b611a9b81612e76565b6078546000906001600160a01b031633146128fd576040805162461bcd60e51b815260206004820152600f60248201526e2837b7b617b7b7363c96ba37b5b2b760891b604482015290519081900360640190fd5b6040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561295457600080fd5b505af4158015612968573d6000803e3d6000fd5b505050506040513d602081101561297e57600080fd5b5051156129c0576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b6129ca838361421a565b90505b92915050565b6040805162dec4c960e41b815260746004820152436024820152905160009173__Blocklock_____________________________91630dec4c9091604480820192602092909190829003018186803b158015611d9d57600080fd5b600054610100900460ff1680612a475750612a4761407e565b80612a55575060005460ff16155b612a905760405162461bcd60e51b815260040180806020018281038252602e815260200180614f93602e913960400191505060405180910390fd5b600054610100900460ff16158015612abb576000805460ff1961ff0019909116610100171660011790555b612ac98787878787876142ef565b612ad161444d565b612adb83836144e0565b8015612aed576000805461ff00191690555b50505050505050565b6000606c73__DrawManager___________________________633484b6bb9091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015611e4e57600080fd5b60665460408051630ae9d70b60e41b815290516000926001600160a01b03169163ae9d70b0916004808301926020929190829003018186803b158015612b9757600080fd5b505afa158015611db1573d6000803e3d6000fd5b612bbc60723363ffffffff61395e16565b612bfa576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6000612c04612155565b11612c47576040805162461bcd60e51b815260206004820152600e60248201526d141bdbdb0bd8dbdb5b5a5d1d195960921b604482015290519081900360640190fd5b612c4f6145be565b15612c90576040805162461bcd60e51b815260206004820152600c60248201526b506f6f6c2f616c726561647960a01b604482015290519081900360640190fd5b6000612c9a612155565b6000818152606b60205260408082206001600482015590519293509183917f53d7daff7a7443f21eac131333ba8e4123eccaca1ca37c67665dca97f990f6f091a26040805160018152600060208201819052818301819052915184917f39d270b67baa0bff7a394d3427e52a85d706cae15e649754ec7b54f3c9deb3f0919081900360600190a35050565b60665460408051633af9e66960e01b815230600482015290516000926001600160a01b031691633af9e66991602480830192602092919082900301818787803b15801561283557600080fd5b60795460408051633045916f60e21b815290516000926001600160a01b03169163c11645bc916004808301926020929190829003018186803b158015612db657600080fd5b505afa158015612dca573d6000803e3d6000fd5b505050506040513d6020811015612de057600080fd5b50516040805163f4b9fa7560e01b815290516001600160a01b039092169163f4b9fa75916004808201926020929091908290030181600087803b15801561283557600080fd5b6000908152606b60205260409020805460018201546002830154600384015460048501546005860154600687015460079097015495976001600160a01b0395861697949693959294929091169290565b612e8760723363ffffffff61395e16565b612ec5576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6000612ecf612155565b1115612f2057612edd6145be565b612f20576040805162461bcd60e51b815260206004820152600f60248201526e141bdbdb0bdb9bdd0b5c995dd85c99608a1b604482015290519081900360640190fd5b612f2861152c565b15612f3557612f356145e9565b611a9b8161469c565b6078546001600160a01b031681565b612f5e60723363ffffffff61395e16565b612f9c576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b158015612ff357600080fd5b505af4158015613007573d6000803e3d6000fd5b505050506040513d602081101561301d57600080fd5b5051613060576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bdd5b9b1bd8dad959609a1b604482015290519081900360640190fd5b600061306a612155565b116130ad576040805162461bcd60e51b815260206004820152600e60248201526d141bdbdb0bd8dbdb5b5a5d1d195960921b604482015290519081900360640190fd5b6130b56145be565b156130f6576040805162461bcd60e51b815260206004820152600c60248201526b506f6f6c2f616c726561647960a01b604482015290519081900360640190fd5b60338054600101908190556040805163cc89d03b60e01b815260746004820152436024820152905173__Blocklock_____________________________9163cc89d03b916044808301926000929190829003018186803b15801561315957600080fd5b505af415801561316d573d6000803e3d6000fd5b50505050600061317b612155565b90506000606b60008381526020019081526020016000209050848460405160200180838152602001828152602001925050506040516020818303038152906040528051906020012081600301541461320c576040805162461bcd60e51b815260206004820152600f60248201526e141bdbdb0bd898590b5cd958dc995d608a1b604482015290519081900360640190fd5b6040805160208082018890528251808303820181529183019092528051910120600061323782612af6565b90506000613243612d25565b905060006069548211156132715761326e61326960695484613af990919063ffffffff16565b614814565b90505b600061328186600001548361489f565b60018701546001600160a01b03166000908152606a60205260409020549091506132b1908263ffffffff6141c016565b60018701546001600160a01b03166000908152606a60205260408120919091556132e1838363ffffffff613af916565b6005880180546001600160a01b0319166001600160a01b0388169081179091556006890182905560078901849055600489018890559091501580159061332657508015155b156133f95760698490556001600160a01b0385166000908152606a6020526040902054613359908263ffffffff6141c016565b6001600160a01b0386166000818152606a60205260408082209390935582516371a28dbb60e11b8152606c6004820152602481019290925260448201849052915173__DrawManager___________________________9263e3451b769260648082019391829003018186803b1580156133d157600080fd5b505af41580156133e5573d6000803e3d6000fd5b505050506133f485828a614aaf565b613410565b60695461340c908363ffffffff6141c016565b6069555b604080518781526020810183905280820184905290516001600160a01b038716918a917f39d270b67baa0bff7a394d3427e52a85d706cae15e649754ec7b54f3c9deb3f09181900360600190a3600187015460408051848152602081018b905281516001600160a01b03909316927f108516ddcf5ba43cea6bb2cd5ff6d59ac196c1c86ccb9178332b9dd72d1ca561929181900390910190a250505050505050506033548114612282576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b6079546001600160a01b031681565b6000606c73__DrawManager___________________________63663d9a7a90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611d9d57600080fd5b607a546001600160a01b031681565b61357860723363ffffffff61395e16565b6135b6576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6040805163cc89d03b60e01b815260746004820152436024820152905173__Blocklock_____________________________9163cc89d03b916044808301926000929190829003018186803b158015610e3a57600080fd5b60665460408051636f307dc360e01b815290516000926001600160a01b031691636f307dc3916004808301926020929190829003018186803b158015612b9757600080fd5b61365b61444d565b607654610f7057610f7082826144e0565b607a546000906001600160a01b03161561217257607a60009054906101000a90046001600160a01b03166001600160a01b031663cbdf382c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156136ce57600080fd5b505afa1580156136e2573d6000803e3d6000fd5b505050506040513d60208110156136f857600080fd5b50519050610d8a565b6040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561375857600080fd5b505af415801561376c573d6000803e3d6000fd5b505050506040513d602081101561378257600080fd5b5051156137c4576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b604080516349ec2abb60e11b8152606c60048201526001600160a01b038416602482015260448101839052905173__DrawManager___________________________916393d85576916064808301926000929190829003018186803b15801561382c57600080fd5b505af4158015613840573d6000803e3d6000fd5b5050505061384e8282614cb0565b6040805182815290516001600160a01b038416917fc3a2b1de03156df25decfda8ed3e5aaa02ad33dc5fdf3f13aa9e7f6a7a8ae100919081900360200190a25050565b604080516371a28dbb60e11b8152606c60048201526001600160a01b038416602482015260448101839052905173__DrawManager___________________________9163e3451b76916064808301926000929190829003018186803b1580156138f957600080fd5b505af415801561390d573d6000803e3d6000fd5b5050505061391b8282614cb0565b6040805182815290516001600160a01b038416917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4919081900360200190a25050565b60006001600160a01b0382166139a55760405162461bcd60e51b8152600401808060200182810382526022815260200180614f716022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b604080516383e8aad560e01b8152606c60048201526001600160a01b038416602482015260448101839052905173__DrawManager___________________________916383e8aad5916064808301926000929190829003018186803b158015613a2d57600080fd5b505af4158015613a41573d6000803e3d6000fd5b50505050613a4f8282613cd0565b6040805182815290516001600160a01b038416917f377533556d4ebd6be8b81e3573fd7e7bf70feb8737df314e8e7953cbb395f004919081900360200190a25050565b613a9c828261395e565b613ad75760405162461bcd60e51b8152600401808060200182810382526021815260200180614f2f6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006129ca83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614129565b613b45828261421a565b506078546001600160a01b031615610f7057607854604080516314274ad960e01b81526001600160a01b03858116600483015260248201859052915191909216916314274ad991604480830192600092919082900301818387803b158015613bac57600080fd5b505af1158015613bc0573d6000803e3d6000fd5b505050505050565b6079546001600160a01b031615613c12576040805162461bcd60e51b8152602060048201526009602482015268141bdbdb0bda5b9a5d60ba1b604482015290519081900360640190fd5b6001600160a01b038216613c5c576040805162461bcd60e51b815260206004820152600c60248201526b2837b7b617b6b4b396b232b360a11b604482015290519081900360640190fd5b607980546001600160a01b039384166001600160a01b031991821617909155607a8054929093169116179055565b600281015481546000918291613ca59163ffffffff6141c016565b90508260000154836001015410158015613cc25750808360010154105b156112fa5750506001015490565b6001600160a01b0382166000908152606a602052604090205480821115613d2e576040805162461bcd60e51b815260206004820152600d60248201526c506f6f6c2f6e6f2d66756e647360981b604482015290519081900360640190fd5b613d3e818363ffffffff613af916565b6001600160a01b0384166000908152606a6020526040902055606954613d6a908363ffffffff613af916565b6069556066546040805163852a12e360e01b81526004810185905290516001600160a01b039092169163852a12e3916024808201926020929091908290030181600087803b158015613dbb57600080fd5b505af1158015613dcf573d6000803e3d6000fd5b505050506040513d6020811015613de557600080fd5b505115613e27576040805162461bcd60e51b815260206004820152600b60248201526a506f6f6c2f72656465656d60a81b604482015290519081900360640190fd5b613e2f61360e565b6001600160a01b031663a9059cbb84846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015613e8e57600080fd5b505af1158015613ea2573d6000803e3d6000fd5b505050506040513d6020811015613eb857600080fd5b5051612282576040805162461bcd60e51b815260206004820152600d60248201526c2837b7b617ba3930b739b332b960991b604482015290519081900360640190fd5b6001600160a01b038116613f46576040805162461bcd60e51b815260206004820152600d60248201526c506f6f6c2f6e6f742d7a65726f60981b604482015290519081900360640190fd5b606780546001600160a01b0319166001600160a01b0383169081179091556040517f4adde74fa6a2bac1c22b89b0488eb67527c033fc6110f443d1424a91a0d41d4590600090a250565b613f9a8282614cb0565b6040805182815290516001600160a01b038416917f6dd4ea9218ce2f17ec77769fa65225b906e99dd3f597b7e087df3bdd8f7899dd919081900360200190a25050565b613fee60728263ffffffff614e8d16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b600082614034575060006129cd565b8282028284828161404157fe5b04146129ca5760405162461bcd60e51b8152600401808060200182810382526021815260200180614f506021913960400191505060405180910390fd5b303b1590565b670de0b6b3a76400008111156140cf576040805162461bcd60e51b815260206004820152600b60248201526a506f6f6c2f6c6573732d3160a81b604482015290519081900360640190fd5b60688190556040805182815290517f19cbde830537adec39ff348fcf33c89911750be4bc7433a01b3836d71ddb78819181900360200190a150565b60006112fa826003015461411d84613c8a565b9063ffffffff6141c016565b600081848411156141b85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561417d578181015183820152602001614165565b50505050905090810190601f1680156141aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156129ca576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516362559ecd60e11b8152606c60048201526001600160a01b038416602482015260448101839052905160009173__DrawManager___________________________9163c4ab3d9a916064808201928692909190829003018186803b15801561428557600080fd5b505af4158015614299573d6000803e3d6000fd5b505050506142a78383613cd0565b6040805183815290516001600160a01b038516917f5bd2fe46fdbb7534e8b97cffa63f641b75d3485cba0cfb856f0703409cf65e70919081900360200190a250600192915050565b600054610100900460ff1680614308575061430861407e565b80614316575060005460ff16155b6143515760405162461bcd60e51b815260040180806020018281038252602e815260200180614f93602e913960400191505060405180910390fd5b600054610100900460ff1615801561437c576000805460ff1961ff0019909116610100171660011790555b6001600160a01b0387166143c9576040805162461bcd60e51b815260206004820152600f60248201526e506f6f6c2f6f776e65722d7a65726f60881b604482015290519081900360640190fd5b6001600160a01b038616614417576040805162461bcd60e51b815260206004820152601060248201526f506f6f6c2f63746f6b656e2d7a65726f60801b604482015290519081900360640190fd5b606680546001600160a01b0319166001600160a01b03881617905561443b87613fdd565b61444485614084565b612ad184613efb565b604080516329965a1d60e01b815230600482018190527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad24916329965a1d91606480830192600092919082900301818387803b1580156144cc57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b604080516343be6ded60e01b81526074600482015260248101849052905173__Blocklock_____________________________916343be6ded916044808301926000929190829003018186803b15801561453957600080fd5b505af415801561454d573d6000803e3d6000fd5b505060408051636611206360e01b81526074600482015260248101859052905173__Blocklock_____________________________9350636611206392506044808301926000929190829003018186803b1580156145aa57600080fd5b505af4158015613bc0573d6000803e3d6000fd5b600080606b60006145cd612155565b8152602081019190915260400160002060040154151591505090565b60006145f361152c565b60405190915081907f023ad9f3cfd45bbf91919354cab651602c11b3d4267df2f095331f1e31c0c42990600090a26078546001600160a01b031615611a9b576078546001600160a01b031663a359470961464b611d49565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561468157600080fd5b505af1158015614695573d6000803e3d6000fd5b5050505050565b60408051630c520e5160e31b8152606c6004820152905173__DrawManager___________________________916362907288916024808301926020929190829003018186803b1580156146ee57600080fd5b505af4158015614702573d6000803e3d6000fd5b505050506040513d602081101561471857600080fd5b50506040805161010081018252606880548252606780546001600160a01b039081166020858101918252438688019081526060870189815260006080890181815260a08a0182815260c08b0183815260e08c01848152607080548652606b8952948e90209c518d55975160018d018054918b166001600160a01b0319928316179055955160028d0155935160038c0155905160048b01555160058a01805491881691909416179092555160068801559151600790960195909555915491549254855187815294850152845191169391927f3ba93e35d4f024f23249948504642bc624ab65bc80542daab33f8583f1b8d72f92908290030190a350565b60008073__FixidityLib___________________________63f800d6726040518163ffffffff1660e01b815260040160206040518083038186803b15801561485b57600080fd5b505af415801561486f573d6000803e3d6000fd5b505050506040513d602081101561488557600080fd5b50519050808311156148985790506112fd565b5090919050565b60008073__FixidityLib___________________________63bd5cbd62846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156148f157600080fd5b505af4158015614905573d6000803e3d6000fd5b505050506040513d602081101561491b57600080fd5b50516040805163d6c1528b60e01b81526004810187905260126024820152905191925060009173__FixidityLib___________________________91633c4308a8918591849163d6c1528b91604480820192602092909190829003018186803b15801561498757600080fd5b505af415801561499b573d6000803e3d6000fd5b505050506040513d60208110156149b157600080fd5b5051604080516001600160e01b031960e086901b16815260048101939093526024830191909152516044808301926020929190829003018186803b1580156149f857600080fd5b505af4158015614a0c573d6000803e3d6000fd5b505050506040513d6020811015614a2257600080fd5b505160408051630e99899360e01b815260048101839052905191925073__FixidityLib___________________________91630e99899391602480820192602092909190829003018186803b158015614a7a57600080fd5b505af4158015614a8e573d6000803e3d6000fd5b505050506040513d6020811015614aa457600080fd5b505195945050505050565b6040805163555ddc6560e11b81526001600160a01b03851660048201527f68f03b0b1a978ee238a70b362091d993343460bc1a2830ab3f708936d9f564a460248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b158015614b3357600080fd5b505afa158015614b47573d6000803e3d6000fd5b505050506040513d6020811015614b5d57600080fd5b505190506001600160a01b03811615610e4e57604080516001600160a01b03868116602483015260448201869052606480830186905283518084039091018152608490920183526020820180516001600160e01b0316630354092d60e31b178152925182516000949286169362030d40939092918291908083835b60208310614bf75780518252601f199092019160209182019101614bd8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d8060008114614c5a576040519150601f19603f3d011682016040523d82523d6000602084013e614c5f565b606091505b505090508061469557816001600160a01b0316856001600160a01b0316847fea0a60a98b5cdcd8aa181fe33e194645a2f58d715af888f2ad1df758203e14ad60405160405180910390a45050505050565b6001600160a01b0382166000908152606a6020526040902054614cd9908263ffffffff6141c016565b6001600160a01b0383166000908152606a6020526040902055606954614d05908263ffffffff6141c016565b606955614d1061360e565b6066546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018590529051929091169163095ea7b3916044808201926020929091908290030181600087803b158015614d6757600080fd5b505af1158015614d7b573d6000803e3d6000fd5b505050506040513d6020811015614d9157600080fd5b5051614dd3576040805162461bcd60e51b815260206004820152600c60248201526b506f6f6c2f617070726f766560a01b604482015290519081900360640190fd5b6066546040805163140e25ad60e31b81526004810184905290516001600160a01b039092169163a0712d68916024808201926020929091908290030181600087803b158015614e2157600080fd5b505af1158015614e35573d6000803e3d6000fd5b505050506040513d6020811015614e4b57600080fd5b505115610f70576040805162461bcd60e51b815260206004820152600b60248201526a506f6f6c2f737570706c7960a81b604482015290519081900360640190fd5b614e97828261395e565b15614ee9576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a7231582064b1d0d09746bf1ac1ecf53dd160f2c558193ddbe9cf919e3f4d2dc1e1b27ab864736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103ae5760003560e01c806370a08231116101f4578063a69121001161011a578063cbdf382c116100ad578063f27413ca1161007c578063f27413ca146109eb578063f968f493146109f3578063fc0c546a146109fb578063fe8e190114610a03576103ae565b8063cbdf382c146109b0578063cfb51052146109b8578063d9b6ccbf146109db578063e8f099f4146109e3576103ae565b8063b69ef8a8116100e9578063b69ef8a814610914578063be22f5461461091c578063be6307c814610924578063c1ebb4ac14610993576103ae565b8063a69121001461089d578063ac2defea146108e7578063ae9d70b014610904578063b056b49a1461090c576103ae565b80639512cb2211610192578063a30184de11610161578063a30184de14610844578063a3aac0e21461084c578063a423cd2914610869578063a4e2d63414610895576103ae565b80639512cb22146107f657806395cad80d146107fe5780639ad8bd78146108065780639e63a8c51461080e576103ae565b80637f77fc4d116101ce5780637f77fc4d146107a05780638129fc1c146107a8578063815d85d2146107b0578063944b1479146107d9576103ae565b806370a082311461075d57806377bbb7571461078357806379f087711461075d576103ae565b80633c10e560116102d95780634b0ee02a1161027757806363d8882a1161024657806363d8882a1461070357806369e527da1461070b5780636cbb721f1461072f5780637048027514610737576103ae565b80634b0ee02a1461068957806350193485146106af578063569afbc8146106d55780635c975abb146106fb576103ae565b80633d3d6a1a116102b35780633d3d6a1a14610621578063426d58e514610647578063435edacd146106645780634780006814610681576103ae565b80633c10e560146105f45780633c4be957146105fc5780633ccfd60b14610619576103ae565b80631785f53c11610351578063304c967011610320578063304c96701461059057806333ce01fd1461059857806335269315146105be578063391cc955146105c6576103ae565b80631785f53c146104f6578063234409441461051c57806324d7806c146105395780632e1a7d4d14610573576103ae565b80630937eb541161038d5780630937eb54146104c15780630a56293d146104c95780630ea0ffc4146104d157806314f74b8c146104ee576103ae565b806223de29146103b3578063021919801461049f57806304554443146104a7575b600080fd5b61049d600480360360c08110156103c957600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a08101608082013564010000000081111561040c57600080fd5b82018360208201111561041e57600080fd5b8035906020019184600183028401116401000000008311171561044057600080fd5b91939092909160208101903564010000000081111561045e57600080fd5b82018360208201111561047057600080fd5b8035906020019184600183028401116401000000008311171561049257600080fd5b509092509050610a26565b005b61049d610cb5565b6104af610d86565b60408051918252519081900360200190f35b6104af610d8d565b61049d610d93565b61049d600480360360208110156104e757600080fd5b5035610e54565b6104af610f74565b61049d6004803603602081101561050c57600080fd5b50356001600160a01b0316610f7a565b61049d6004803603602081101561053257600080fd5b50356110b4565b61055f6004803603602081101561054f57600080fd5b50356001600160a01b03166112e7565b604080519115158252519081900360200190f35b61049d6004803603602081101561058957600080fd5b5035611302565b6104af61152c565b61049d600480360360208110156105ae57600080fd5b50356001600160a01b0316611532565b6104af6116b6565b61049d600480360360408110156105dc57600080fd5b506001600160a01b03813581169160200135166116bc565b6104af611715565b61049d6004803603602081101561061257600080fd5b5035611726565b61049d6117c0565b61049d6004803603602081101561063757600080fd5b50356001600160a01b0316611a9e565b61049d6004803603602081101561065d57600080fd5b5035611af6565b61055f6004803603602081101561067a57600080fd5b5035611c1e565b6104af611d49565b6104af6004803603602081101561069f57600080fd5b50356001600160a01b0316611dce565b6104af600480360360208110156106c557600080fd5b50356001600160a01b0316611de9565b6104af600480360360208110156106eb57600080fd5b50356001600160a01b0316611e80565b61055f611f39565b61049d611f42565b610713612013565b604080516001600160a01b039092168252519081900360200190f35b61055f612022565b61049d6004803603602081101561074d57600080fd5b50356001600160a01b031661207e565b6104af6004803603602081101561077357600080fd5b50356001600160a01b03166120d6565b6104af6004803603602081101561079957600080fd5b503561213b565b6104af612155565b61049d61217a565b61049d600480360360608110156107c657600080fd5b5080359060208101359060400135612220565b61049d600480360360208110156107ef57600080fd5b5035612287565b6104af6122df565b61049d6122eb565b6107136123c7565b61055f6004803603606081101561082457600080fd5b506001600160a01b038135811691602081013590911690604001356123d6565b610713612780565b61049d6004803603602081101561086257600080fd5b5035612849565b61055f6004803603604081101561087f57600080fd5b506001600160a01b0381351690602001356128a9565b61055f6129d3565b61049d600480360360c08110156108b357600080fd5b506001600160a01b038135811691602081013582169160408201359160608101359091169060808101359060a00135612a2e565b610713600480360360208110156108fd57600080fd5b5035612af6565b6104af612b52565b61049d612bab565b6104af612d25565b610713612d71565b6109416004803603602081101561093a57600080fd5b5035612e26565b604080519889526001600160a01b0397881660208a0152888101969096526060880194909452608087019290925290931660a085015260c084019290925260e083019190915251908190036101000190f35b61049d600480360360208110156109a957600080fd5b5035612e76565b610713612f3e565b61049d600480360360408110156109ce57600080fd5b5080359060200135612f4d565b6107136134f5565b6104af613504565b610713613558565b61049d613567565b61071361360e565b61049d60048036036040811015610a1957600080fd5b5080359060200135613653565b60735460ff1615610a6e576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b610a7661366c565b6001600160a01b0316336001600160a01b031614610acb576040805162461bcd60e51b815260206004820152600d60248201526c506f6f6c2f7361692d6f6e6c7960981b604482015290519081900360640190fd5b610ad3612d71565b6001600160a01b0316610ae461360e565b6001600160a01b031614610b2e576040805162461bcd60e51b815260206004820152600c60248201526b506f6f6c2f6e6f742d64616960a01b604482015290519081900360640190fd5b610b3661366c565b6001600160a01b031663e77c646d866040518263ffffffff1660e01b8152600401808281526020018060200182810382526000815260200160200192505050600060405180830381600087803b158015610b8f57600080fd5b505af1158015610ba3573d6000803e3d6000fd5b50505050610baf612780565b6079546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018990529051929091169163095ea7b39160448082019260009290919082900301818387803b158015610c0557600080fd5b505af1158015610c19573d6000803e3d6000fd5b50506079546040805163fbabdebd60e01b8152600481018a905290516001600160a01b03909216935063fbabdebd925060248082019260009290919082900301818387803b158015610c6a57600080fd5b505af1158015610c7e573d6000803e3d6000fd5b505050506000610c8c612155565b1115610ca157610c9c8786613701565b610cab565b610cab8786613891565b5050505050505050565b60735460ff1615610cfd576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b610d0e60723363ffffffff61395e16565b610d4c576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6073805460ff1916600117905560405133907feb225a736fbfee3f85ccb72bdf84ff0396ab358b7970e2cc351ab3e3fd92358d90600090a2565b6076545b90565b60695481565b610da460723363ffffffff61395e16565b610de2576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b60408051633e825e6d60e01b815260746004820152436024820152905173__Blocklock_____________________________91633e825e6d916044808301926000929190829003018186803b158015610e3a57600080fd5b505af4158015610e4e573d6000803e3d6000fd5b50505050565b60338054600101908190556040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b158015610eb657600080fd5b505af4158015610eca573d6000803e3d6000fd5b505050506040513d6020811015610ee057600080fd5b505115610f22576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b610f2c33836139c5565b6033548114610f70576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b5050565b60685481565b610f8b60723363ffffffff61395e16565b610fc9576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b610fda60728263ffffffff61395e16565b61101b576040805162461bcd60e51b815260206004820152600d60248201526c2837b7b617b73796b0b236b4b760991b604482015290519081900360640190fd5b6001600160a01b03811633141561106c576040805162461bcd60e51b815260206004820152601060248201526f2837b7b617b932b6b7bb3296b9b2b63360811b604482015290519081900360640190fd5b61107d60728263ffffffff613a9216565b6040516001600160a01b038216907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a250565b6110bc61152c565b6110fc576040805162461bcd60e51b815260206004820152600c60248201526b2837b7b617b73796b7b832b760a11b604482015290519081900360640190fd5b60735460ff1615611144576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b60338054600101908190556040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b1580156111a657600080fd5b505af41580156111ba573d6000803e3d6000fd5b505050506040513d60208110156111d057600080fd5b505115611212576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b61121a61360e565b604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b0392909216916323b872dd916064808201926020929091908290030181600087803b15801561127257600080fd5b505af1158015611286573d6000803e3d6000fd5b505050506040513d602081101561129c57600080fd5b50516112dd576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdd0b59985a5b60aa1b604482015290519081900360640190fd5b610f2c3383613891565b60006112fa60728363ffffffff61395e16565b90505b919050565b60338054600101908190556040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561136457600080fd5b505af4158015611378573d6000803e3d6000fd5b505050506040513d602081101561138e57600080fd5b5051156113d0576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b8160006113dc33611e80565b905081811015611406576113ef81611726565b6113ff828263ffffffff613af916565b9150611416565b61140f82611726565b5050610f2c565b6040805163713b41f560e11b8152606c6004820152336024820152905160009173__DrawManager___________________________9163e27683ea91604480820192602092909190829003018186803b15801561147257600080fd5b505af4158015611486573d6000803e3d6000fd5b505050506040513d602081101561149c57600080fd5b50519050828110156114c9576114b233826139c5565b6114c2838263ffffffff613af916565b92506114db565b6114d333846139c5565b505050610f2c565b6114e53384613b3b565b5050506033548114610f70576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b60705490565b61154360723363ffffffff61395e16565b611581576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6078546001600160a01b0316156115d4576040805162461bcd60e51b8152602060048201526012602482015271141bdbdb0bdd1bdad95b8b5dd85ccb5cd95d60721b604482015290519081900360640190fd5b306001600160a01b0316816001600160a01b03166316f0115b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561161757600080fd5b505afa15801561162b573d6000803e3d6000fd5b505050506040513d602081101561164157600080fd5b50516001600160a01b031614611694576040805162461bcd60e51b81526020600482015260136024820152720a0deded85ee8ded6cadc5adad2e6dac2e8c6d606b1b604482015290519081900360640190fd5b607880546001600160a01b0319166001600160a01b0392909216919091179055565b60775490565b6116cd60723363ffffffff61395e16565b61170b576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b610f708282613bc8565b60006117216074613c8a565b905090565b600061173133611e80565b90508082111561177c576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c2f657863656564732d7366656560781b604482015290519081900360640190fd5b6117863383613cd0565b60408051838152905133917f6a4d2bc0b4e5453e814890ffd34fde45f1820118a5e3e08c8273e6befd8cc050919081900360200190a25050565b60338054600101908190556040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561182257600080fd5b505af4158015611836573d6000803e3d6000fd5b505050506040513d602081101561184c57600080fd5b50511561188e576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b604080516311f43c3360e31b8152606c6004820152336024820152905160009173__DrawManager___________________________91638fa1e19891604480820192602092909190829003018186803b1580156118ea57600080fd5b505af41580156118fe573d6000803e3d6000fd5b505050506040513d602081101561191457600080fd5b5051336000818152606a6020526040808220548151631326e7a760e21b8152606c6004820152602481019490945290519394509273__DrawManager___________________________92634c9b9e9c926044808301939192829003018186803b15801561198057600080fd5b505af4158015611994573d6000803e3d6000fd5b505050506119a23382613cd0565b6078546001600160a01b031615611a1f57607854604080516314274ad960e01b81523360048201526024810185905290516001600160a01b03909216916314274ad99160448082019260009290919082900301818387803b158015611a0657600080fd5b505af1158015611a1a573d6000803e3d6000fd5b505050505b60408051828152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a250506033548114611a9b576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b50565b611aaf60723363ffffffff61395e16565b611aed576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b611a9b81613efb565b60735460ff1615611b3e576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b6033805460010190819055611b5161360e565b604080516323b872dd60e01b81523360048201523060248201526044810185905290516001600160a01b0392909216916323b872dd916064808201926020929091908290030181600087803b158015611ba957600080fd5b505af1158015611bbd573d6000803e3d6000fd5b505050506040513d6020811015611bd357600080fd5b5051611c14576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdd0b59985a5b60aa1b604482015290519081900360640190fd5b610f2c3383613f90565b60338054600101908190556040805162dec4c960e41b81526074600482015243602482015290516000929173__Blocklock_____________________________91630dec4c9091604480820192602092909190829003018186803b158015611c8557600080fd5b505af4158015611c99573d6000803e3d6000fd5b505050506040513d6020811015611caf57600080fd5b505115611cf1576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b611cfb3384613b3b565b600191506033548114611d43576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b50919050565b6000606c73__DrawManager___________________________63ed21d6ea90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611d9d57600080fd5b505af4158015611db1573d6000803e3d6000fd5b505050506040513d6020811015611dc757600080fd5b5051905090565b6001600160a01b03166000908152606a602052604090205490565b6040805163713b41f560e11b8152606c60048201526001600160a01b0383166024820152905160009173__DrawManager___________________________9163e27683ea91604480820192602092909190829003018186803b158015611e4e57600080fd5b505af4158015611e62573d6000803e3d6000fd5b505050506040513d6020811015611e7857600080fd5b505192915050565b604080516305a094bf60e51b8152606c60048201526001600160a01b038316602482015290516000916112fa9173__DrawManager___________________________9163b41297e0916044808301926020929190829003018186803b158015611ee857600080fd5b505af4158015611efc573d6000803e3d6000fd5b505050506040513d6020811015611f1257600080fd5b50516001600160a01b0384166000908152606a60205260409020549063ffffffff613af916565b60735460ff1681565b60735460ff16611f8d576040805162461bcd60e51b8152602060048201526011602482015270141bdbdb0bd90b5b9bdd0b5c185d5cd959607a1b604482015290519081900360640190fd5b611f9e60723363ffffffff61395e16565b611fdc576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6073805460ff1916905560405133907fd92e31f504caf26579aa9a5860a669bf0ccf07c267baa65bc79bf3ee57cfa27c90600090a2565b6066546001600160a01b031681565b60408051631307db5360e11b815260746004820152436024820152905160009173__Blocklock_____________________________9163260fb6a691604480820192602092909190829003018186803b158015611d9d57600080fd5b61208f60723363ffffffff61395e16565b6120cd576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b611a9b81613fdd565b604080516311f43c3360e31b8152606c60048201526001600160a01b0383166024820152905160009173__DrawManager___________________________91638fa1e19891604480820192602092909190829003018186803b158015611e4e57600080fd5b60006112fa82612149612b52565b9063ffffffff61402516565b60006001606c600401541115612172575060705460001901610d8a565b506000610d8a565b600054610100900460ff1680612193575061219361407e565b806121a1575060005460ff16155b6121dc5760405162461bcd60e51b815260040180806020018281038252602e815260200180614f93602e913960400191505060405180910390fd5b600054610100900460ff16158015612207576000805460ff1961ff0019909116610100171660011790555b60016033558015611a9b576000805461ff001916905550565b61223160723363ffffffff61395e16565b61226f576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6122798282612f4d565b61228283612e76565b505050565b61229860723363ffffffff61395e16565b6122d6576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b611a9b81614084565b6000611721607461410a565b60735460ff1615612333576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bd90b5c185d5cd959609a1b604482015290519081900360640190fd5b6123c53061233f61360e565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561239457600080fd5b505afa1580156123a8573d6000803e3d6000fd5b505050506040513d60208110156123be57600080fd5b5051613f90565b565b6067546001600160a01b031681565b6078546000906001600160a01b0316331461242a576040805162461bcd60e51b815260206004820152600f60248201526e2837b7b617b7b7363c96ba37b5b2b760891b604482015290519081900360640190fd5b604080516311f43c3360e31b8152606c60048201526001600160a01b038616602482015290518591849160009173__DrawManager___________________________91638fa1e19891604480820192602092909190829003018186803b15801561249357600080fd5b505af41580156124a7573d6000803e3d6000fd5b505050506040513d60208110156124bd57600080fd5b5051905080821115612509576040805162461bcd60e51b815260206004820152601060248201526f6e6f7420656e6f7567682066756e647360801b604482015290519081900360640190fd5b6040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561256057600080fd5b505af4158015612574573d6000803e3d6000fd5b505050506040513d602081101561258a57600080fd5b5051156125cc576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b604080518082018252601981527f6d6f766520636f756c64206e6f742073756220616d6f756e74000000000000006020808301919091526001600160a01b038a166000908152606a909152919091205461262d91879063ffffffff61412916565b6001600160a01b038089166000908152606a60205260408082209390935590881681522054612662908663ffffffff6141c016565b6001600160a01b038088166000908152606a60205260408082209390935582516362559ecd60e11b8152606c6004820152918a16602483015260448201889052915173__DrawManager___________________________9263c4ab3d9a9260648082019391829003018186803b1580156126db57600080fd5b505af41580156126ef573d6000803e3d6000fd5b5050604080516349ec2abb60e11b8152606c60048201526001600160a01b038a16602482015260448101899052905173__DrawManager___________________________93506393d8557692506064808301926000929190829003018186803b15801561275b57600080fd5b505af415801561276f573d6000803e3d6000fd5b5060019a9950505050505050505050565b60795460408051630b14408f60e01b815290516000926001600160a01b031691630b14408f916004808301926020929190829003018186803b1580156127c557600080fd5b505afa1580156127d9573d6000803e3d6000fd5b505050506040513d60208110156127ef57600080fd5b505160408051637bd2bea760e01b815290516001600160a01b0390921691637bd2bea7916004808201926020929091908290030181600087803b15801561283557600080fd5b505af1158015611db1573d6000803e3d6000fd5b61285a60723363ffffffff61395e16565b612898576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6128a0612bab565b611a9b81612e76565b6078546000906001600160a01b031633146128fd576040805162461bcd60e51b815260206004820152600f60248201526e2837b7b617b7b7363c96ba37b5b2b760891b604482015290519081900360640190fd5b6040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561295457600080fd5b505af4158015612968573d6000803e3d6000fd5b505050506040513d602081101561297e57600080fd5b5051156129c0576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b6129ca838361421a565b90505b92915050565b6040805162dec4c960e41b815260746004820152436024820152905160009173__Blocklock_____________________________91630dec4c9091604480820192602092909190829003018186803b158015611d9d57600080fd5b600054610100900460ff1680612a475750612a4761407e565b80612a55575060005460ff16155b612a905760405162461bcd60e51b815260040180806020018281038252602e815260200180614f93602e913960400191505060405180910390fd5b600054610100900460ff16158015612abb576000805460ff1961ff0019909116610100171660011790555b612ac98787878787876142ef565b612ad161444d565b612adb83836144e0565b8015612aed576000805461ff00191690555b50505050505050565b6000606c73__DrawManager___________________________633484b6bb9091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015611e4e57600080fd5b60665460408051630ae9d70b60e41b815290516000926001600160a01b03169163ae9d70b0916004808301926020929190829003018186803b158015612b9757600080fd5b505afa158015611db1573d6000803e3d6000fd5b612bbc60723363ffffffff61395e16565b612bfa576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6000612c04612155565b11612c47576040805162461bcd60e51b815260206004820152600e60248201526d141bdbdb0bd8dbdb5b5a5d1d195960921b604482015290519081900360640190fd5b612c4f6145be565b15612c90576040805162461bcd60e51b815260206004820152600c60248201526b506f6f6c2f616c726561647960a01b604482015290519081900360640190fd5b6000612c9a612155565b6000818152606b60205260408082206001600482015590519293509183917f53d7daff7a7443f21eac131333ba8e4123eccaca1ca37c67665dca97f990f6f091a26040805160018152600060208201819052818301819052915184917f39d270b67baa0bff7a394d3427e52a85d706cae15e649754ec7b54f3c9deb3f0919081900360600190a35050565b60665460408051633af9e66960e01b815230600482015290516000926001600160a01b031691633af9e66991602480830192602092919082900301818787803b15801561283557600080fd5b60795460408051633045916f60e21b815290516000926001600160a01b03169163c11645bc916004808301926020929190829003018186803b158015612db657600080fd5b505afa158015612dca573d6000803e3d6000fd5b505050506040513d6020811015612de057600080fd5b50516040805163f4b9fa7560e01b815290516001600160a01b039092169163f4b9fa75916004808201926020929091908290030181600087803b15801561283557600080fd5b6000908152606b60205260409020805460018201546002830154600384015460048501546005860154600687015460079097015495976001600160a01b0395861697949693959294929091169290565b612e8760723363ffffffff61395e16565b612ec5576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6000612ecf612155565b1115612f2057612edd6145be565b612f20576040805162461bcd60e51b815260206004820152600f60248201526e141bdbdb0bdb9bdd0b5c995dd85c99608a1b604482015290519081900360640190fd5b612f2861152c565b15612f3557612f356145e9565b611a9b8161469c565b6078546001600160a01b031681565b612f5e60723363ffffffff61395e16565b612f9c576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b158015612ff357600080fd5b505af4158015613007573d6000803e3d6000fd5b505050506040513d602081101561301d57600080fd5b5051613060576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bdd5b9b1bd8dad959609a1b604482015290519081900360640190fd5b600061306a612155565b116130ad576040805162461bcd60e51b815260206004820152600e60248201526d141bdbdb0bd8dbdb5b5a5d1d195960921b604482015290519081900360640190fd5b6130b56145be565b156130f6576040805162461bcd60e51b815260206004820152600c60248201526b506f6f6c2f616c726561647960a01b604482015290519081900360640190fd5b60338054600101908190556040805163cc89d03b60e01b815260746004820152436024820152905173__Blocklock_____________________________9163cc89d03b916044808301926000929190829003018186803b15801561315957600080fd5b505af415801561316d573d6000803e3d6000fd5b50505050600061317b612155565b90506000606b60008381526020019081526020016000209050848460405160200180838152602001828152602001925050506040516020818303038152906040528051906020012081600301541461320c576040805162461bcd60e51b815260206004820152600f60248201526e141bdbdb0bd898590b5cd958dc995d608a1b604482015290519081900360640190fd5b6040805160208082018890528251808303820181529183019092528051910120600061323782612af6565b90506000613243612d25565b905060006069548211156132715761326e61326960695484613af990919063ffffffff16565b614814565b90505b600061328186600001548361489f565b60018701546001600160a01b03166000908152606a60205260409020549091506132b1908263ffffffff6141c016565b60018701546001600160a01b03166000908152606a60205260408120919091556132e1838363ffffffff613af916565b6005880180546001600160a01b0319166001600160a01b0388169081179091556006890182905560078901849055600489018890559091501580159061332657508015155b156133f95760698490556001600160a01b0385166000908152606a6020526040902054613359908263ffffffff6141c016565b6001600160a01b0386166000818152606a60205260408082209390935582516371a28dbb60e11b8152606c6004820152602481019290925260448201849052915173__DrawManager___________________________9263e3451b769260648082019391829003018186803b1580156133d157600080fd5b505af41580156133e5573d6000803e3d6000fd5b505050506133f485828a614aaf565b613410565b60695461340c908363ffffffff6141c016565b6069555b604080518781526020810183905280820184905290516001600160a01b038716918a917f39d270b67baa0bff7a394d3427e52a85d706cae15e649754ec7b54f3c9deb3f09181900360600190a3600187015460408051848152602081018b905281516001600160a01b03909316927f108516ddcf5ba43cea6bb2cd5ff6d59ac196c1c86ccb9178332b9dd72d1ca561929181900390910190a250505050505050506033548114612282576040805162461bcd60e51b815260206004820152601f6024820152600080516020614f0f833981519152604482015290519081900360640190fd5b6079546001600160a01b031681565b6000606c73__DrawManager___________________________63663d9a7a90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611d9d57600080fd5b607a546001600160a01b031681565b61357860723363ffffffff61395e16565b6135b6576040805162461bcd60e51b815260206004820152600a6024820152692837b7b617b0b236b4b760b11b604482015290519081900360640190fd5b6040805163cc89d03b60e01b815260746004820152436024820152905173__Blocklock_____________________________9163cc89d03b916044808301926000929190829003018186803b158015610e3a57600080fd5b60665460408051636f307dc360e01b815290516000926001600160a01b031691636f307dc3916004808301926020929190829003018186803b158015612b9757600080fd5b61365b61444d565b607654610f7057610f7082826144e0565b607a546000906001600160a01b03161561217257607a60009054906101000a90046001600160a01b03166001600160a01b031663cbdf382c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156136ce57600080fd5b505afa1580156136e2573d6000803e3d6000fd5b505050506040513d60208110156136f857600080fd5b50519050610d8a565b6040805162dec4c960e41b815260746004820152436024820152905173__Blocklock_____________________________91630dec4c90916044808301926020929190829003018186803b15801561375857600080fd5b505af415801561376c573d6000803e3d6000fd5b505050506040513d602081101561378257600080fd5b5051156137c4576040805162461bcd60e51b815260206004820152600b60248201526a141bdbdb0bdb1bd8dad95960aa1b604482015290519081900360640190fd5b604080516349ec2abb60e11b8152606c60048201526001600160a01b038416602482015260448101839052905173__DrawManager___________________________916393d85576916064808301926000929190829003018186803b15801561382c57600080fd5b505af4158015613840573d6000803e3d6000fd5b5050505061384e8282614cb0565b6040805182815290516001600160a01b038416917fc3a2b1de03156df25decfda8ed3e5aaa02ad33dc5fdf3f13aa9e7f6a7a8ae100919081900360200190a25050565b604080516371a28dbb60e11b8152606c60048201526001600160a01b038416602482015260448101839052905173__DrawManager___________________________9163e3451b76916064808301926000929190829003018186803b1580156138f957600080fd5b505af415801561390d573d6000803e3d6000fd5b5050505061391b8282614cb0565b6040805182815290516001600160a01b038416917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4919081900360200190a25050565b60006001600160a01b0382166139a55760405162461bcd60e51b8152600401808060200182810382526022815260200180614f716022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b604080516383e8aad560e01b8152606c60048201526001600160a01b038416602482015260448101839052905173__DrawManager___________________________916383e8aad5916064808301926000929190829003018186803b158015613a2d57600080fd5b505af4158015613a41573d6000803e3d6000fd5b50505050613a4f8282613cd0565b6040805182815290516001600160a01b038416917f377533556d4ebd6be8b81e3573fd7e7bf70feb8737df314e8e7953cbb395f004919081900360200190a25050565b613a9c828261395e565b613ad75760405162461bcd60e51b8152600401808060200182810382526021815260200180614f2f6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006129ca83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614129565b613b45828261421a565b506078546001600160a01b031615610f7057607854604080516314274ad960e01b81526001600160a01b03858116600483015260248201859052915191909216916314274ad991604480830192600092919082900301818387803b158015613bac57600080fd5b505af1158015613bc0573d6000803e3d6000fd5b505050505050565b6079546001600160a01b031615613c12576040805162461bcd60e51b8152602060048201526009602482015268141bdbdb0bda5b9a5d60ba1b604482015290519081900360640190fd5b6001600160a01b038216613c5c576040805162461bcd60e51b815260206004820152600c60248201526b2837b7b617b6b4b396b232b360a11b604482015290519081900360640190fd5b607980546001600160a01b039384166001600160a01b031991821617909155607a8054929093169116179055565b600281015481546000918291613ca59163ffffffff6141c016565b90508260000154836001015410158015613cc25750808360010154105b156112fa5750506001015490565b6001600160a01b0382166000908152606a602052604090205480821115613d2e576040805162461bcd60e51b815260206004820152600d60248201526c506f6f6c2f6e6f2d66756e647360981b604482015290519081900360640190fd5b613d3e818363ffffffff613af916565b6001600160a01b0384166000908152606a6020526040902055606954613d6a908363ffffffff613af916565b6069556066546040805163852a12e360e01b81526004810185905290516001600160a01b039092169163852a12e3916024808201926020929091908290030181600087803b158015613dbb57600080fd5b505af1158015613dcf573d6000803e3d6000fd5b505050506040513d6020811015613de557600080fd5b505115613e27576040805162461bcd60e51b815260206004820152600b60248201526a506f6f6c2f72656465656d60a81b604482015290519081900360640190fd5b613e2f61360e565b6001600160a01b031663a9059cbb84846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015613e8e57600080fd5b505af1158015613ea2573d6000803e3d6000fd5b505050506040513d6020811015613eb857600080fd5b5051612282576040805162461bcd60e51b815260206004820152600d60248201526c2837b7b617ba3930b739b332b960991b604482015290519081900360640190fd5b6001600160a01b038116613f46576040805162461bcd60e51b815260206004820152600d60248201526c506f6f6c2f6e6f742d7a65726f60981b604482015290519081900360640190fd5b606780546001600160a01b0319166001600160a01b0383169081179091556040517f4adde74fa6a2bac1c22b89b0488eb67527c033fc6110f443d1424a91a0d41d4590600090a250565b613f9a8282614cb0565b6040805182815290516001600160a01b038416917f6dd4ea9218ce2f17ec77769fa65225b906e99dd3f597b7e087df3bdd8f7899dd919081900360200190a25050565b613fee60728263ffffffff614e8d16565b6040516001600160a01b038216907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a250565b600082614034575060006129cd565b8282028284828161404157fe5b04146129ca5760405162461bcd60e51b8152600401808060200182810382526021815260200180614f506021913960400191505060405180910390fd5b303b1590565b670de0b6b3a76400008111156140cf576040805162461bcd60e51b815260206004820152600b60248201526a506f6f6c2f6c6573732d3160a81b604482015290519081900360640190fd5b60688190556040805182815290517f19cbde830537adec39ff348fcf33c89911750be4bc7433a01b3836d71ddb78819181900360200190a150565b60006112fa826003015461411d84613c8a565b9063ffffffff6141c016565b600081848411156141b85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561417d578181015183820152602001614165565b50505050905090810190601f1680156141aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156129ca576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516362559ecd60e11b8152606c60048201526001600160a01b038416602482015260448101839052905160009173__DrawManager___________________________9163c4ab3d9a916064808201928692909190829003018186803b15801561428557600080fd5b505af4158015614299573d6000803e3d6000fd5b505050506142a78383613cd0565b6040805183815290516001600160a01b038516917f5bd2fe46fdbb7534e8b97cffa63f641b75d3485cba0cfb856f0703409cf65e70919081900360200190a250600192915050565b600054610100900460ff1680614308575061430861407e565b80614316575060005460ff16155b6143515760405162461bcd60e51b815260040180806020018281038252602e815260200180614f93602e913960400191505060405180910390fd5b600054610100900460ff1615801561437c576000805460ff1961ff0019909116610100171660011790555b6001600160a01b0387166143c9576040805162461bcd60e51b815260206004820152600f60248201526e506f6f6c2f6f776e65722d7a65726f60881b604482015290519081900360640190fd5b6001600160a01b038616614417576040805162461bcd60e51b815260206004820152601060248201526f506f6f6c2f63746f6b656e2d7a65726f60801b604482015290519081900360640190fd5b606680546001600160a01b0319166001600160a01b03881617905561443b87613fdd565b61444485614084565b612ad184613efb565b604080516329965a1d60e01b815230600482018190527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad24916329965a1d91606480830192600092919082900301818387803b1580156144cc57600080fd5b505af1158015610e4e573d6000803e3d6000fd5b604080516343be6ded60e01b81526074600482015260248101849052905173__Blocklock_____________________________916343be6ded916044808301926000929190829003018186803b15801561453957600080fd5b505af415801561454d573d6000803e3d6000fd5b505060408051636611206360e01b81526074600482015260248101859052905173__Blocklock_____________________________9350636611206392506044808301926000929190829003018186803b1580156145aa57600080fd5b505af4158015613bc0573d6000803e3d6000fd5b600080606b60006145cd612155565b8152602081019190915260400160002060040154151591505090565b60006145f361152c565b60405190915081907f023ad9f3cfd45bbf91919354cab651602c11b3d4267df2f095331f1e31c0c42990600090a26078546001600160a01b031615611a9b576078546001600160a01b031663a359470961464b611d49565b6040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561468157600080fd5b505af1158015614695573d6000803e3d6000fd5b5050505050565b60408051630c520e5160e31b8152606c6004820152905173__DrawManager___________________________916362907288916024808301926020929190829003018186803b1580156146ee57600080fd5b505af4158015614702573d6000803e3d6000fd5b505050506040513d602081101561471857600080fd5b50506040805161010081018252606880548252606780546001600160a01b039081166020858101918252438688019081526060870189815260006080890181815260a08a0182815260c08b0183815260e08c01848152607080548652606b8952948e90209c518d55975160018d018054918b166001600160a01b0319928316179055955160028d0155935160038c0155905160048b01555160058a01805491881691909416179092555160068801559151600790960195909555915491549254855187815294850152845191169391927f3ba93e35d4f024f23249948504642bc624ab65bc80542daab33f8583f1b8d72f92908290030190a350565b60008073__FixidityLib___________________________63f800d6726040518163ffffffff1660e01b815260040160206040518083038186803b15801561485b57600080fd5b505af415801561486f573d6000803e3d6000fd5b505050506040513d602081101561488557600080fd5b50519050808311156148985790506112fd565b5090919050565b60008073__FixidityLib___________________________63bd5cbd62846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156148f157600080fd5b505af4158015614905573d6000803e3d6000fd5b505050506040513d602081101561491b57600080fd5b50516040805163d6c1528b60e01b81526004810187905260126024820152905191925060009173__FixidityLib___________________________91633c4308a8918591849163d6c1528b91604480820192602092909190829003018186803b15801561498757600080fd5b505af415801561499b573d6000803e3d6000fd5b505050506040513d60208110156149b157600080fd5b5051604080516001600160e01b031960e086901b16815260048101939093526024830191909152516044808301926020929190829003018186803b1580156149f857600080fd5b505af4158015614a0c573d6000803e3d6000fd5b505050506040513d6020811015614a2257600080fd5b505160408051630e99899360e01b815260048101839052905191925073__FixidityLib___________________________91630e99899391602480820192602092909190829003018186803b158015614a7a57600080fd5b505af4158015614a8e573d6000803e3d6000fd5b505050506040513d6020811015614aa457600080fd5b505195945050505050565b6040805163555ddc6560e11b81526001600160a01b03851660048201527f68f03b0b1a978ee238a70b362091d993343460bc1a2830ab3f708936d9f564a460248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b158015614b3357600080fd5b505afa158015614b47573d6000803e3d6000fd5b505050506040513d6020811015614b5d57600080fd5b505190506001600160a01b03811615610e4e57604080516001600160a01b03868116602483015260448201869052606480830186905283518084039091018152608490920183526020820180516001600160e01b0316630354092d60e31b178152925182516000949286169362030d40939092918291908083835b60208310614bf75780518252601f199092019160209182019101614bd8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d8060008114614c5a576040519150601f19603f3d011682016040523d82523d6000602084013e614c5f565b606091505b505090508061469557816001600160a01b0316856001600160a01b0316847fea0a60a98b5cdcd8aa181fe33e194645a2f58d715af888f2ad1df758203e14ad60405160405180910390a45050505050565b6001600160a01b0382166000908152606a6020526040902054614cd9908263ffffffff6141c016565b6001600160a01b0383166000908152606a6020526040902055606954614d05908263ffffffff6141c016565b606955614d1061360e565b6066546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018590529051929091169163095ea7b3916044808201926020929091908290030181600087803b158015614d6757600080fd5b505af1158015614d7b573d6000803e3d6000fd5b505050506040513d6020811015614d9157600080fd5b5051614dd3576040805162461bcd60e51b815260206004820152600c60248201526b506f6f6c2f617070726f766560a01b604482015290519081900360640190fd5b6066546040805163140e25ad60e31b81526004810184905290516001600160a01b039092169163a0712d68916024808201926020929091908290030181600087803b158015614e2157600080fd5b505af1158015614e35573d6000803e3d6000fd5b505050506040513d6020811015614e4b57600080fd5b505115610f70576040805162461bcd60e51b815260206004820152600b60248201526a506f6f6c2f737570706c7960a81b604482015290519081900360640190fd5b614e97828261395e565b15614ee9576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a7231582064b1d0d09746bf1ac1ecf53dd160f2c558193ddbe9cf919e3f4d2dc1e1b27ab864736f6c634300050c0032",
  "sourceMap": "1434:4832:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1434:4832:5;;;;;;;",
  "deployedSourceMap": "1434:4832:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1434:4832:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4611:924;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;4611:924:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4611:924:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4611:924:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4611:924:5;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4611:924:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4611:924:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;4611:924:5;;-1:-1:-1;4611:924:5;-1:-1:-1;4611:924:5;:::i;:::-;;36888:125:0;;;:::i;38271:94::-;;;:::i;:::-;;;;;;;;;;;;;;;;8302:31;;;:::i;36384:78::-;;;:::i;24914:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24914:128:0;;:::i;8224:30::-;;;:::i;35208:223::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;35208:223:0;-1:-1:-1;;;;;35208:223:0;;:::i;20126:311::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20126:311:0;;:::i;34601:96::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;34601:96:0;-1:-1:-1;;;;;34601:96:0;;:::i;:::-;;;;;;;;;;;;;;;;;;22610:965;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22610:965:0;;:::i;28038:100::-;;;:::i;9895:246::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9895:246:0;-1:-1:-1;;;;;9895:246:0;;:::i;38591:102::-;;;:::i;3567:150:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3567:150:5;;;;;;;;;;:::i;37599:90:0:-;;;:::i;24216:298::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24216:298:0;;:::i;23655:435::-;;;:::i;33640:123::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33640:123:0;-1:-1:-1;;;;;33640:123:0;;:::i;18998:312::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18998:312:0;;:::i;25358:171::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25358:171:0;;:::i;32067:92::-;;;:::i;30888:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30888:104:0;-1:-1:-1;;;;;30888:104:0;;:::i;30536:118::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30536:118:0;-1:-1:-1;;;;;30536:118:0;;:::i;24658:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24658:152:0;-1:-1:-1;;;;;24658:152:0;;:::i;8814:18::-;;;:::i;37115:128::-;;;:::i;8031:21::-;;;:::i;:::-;;;;-1:-1:-1;;;;;8031:21:0;;;;;;;;;;;;;;38069:95;;;:::i;34338:79::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;34338:79:0;-1:-1:-1;;;;;34338:79:0;;:::i;31193:119::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;31193:119:0;-1:-1:-1;;;;;31193:119:0;;:::i;32403:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32403:129:0;;:::i;28256:185::-;;;:::i;769:214:38:-;;;:::i;12682:177:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12682:177:0;;;;;;;;;;;;:::i;33120:111::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33120:111:0;;:::i;37834:98::-;;;:::i;19530:189::-;;;:::i;8123:33::-;;;:::i;26884:416::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;26884:416:0;;;;;;;;;;;;;;;;;:::i;5967:94:5:-;;;:::i;12056:129:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12056:129:0;;:::i;25970:193::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;25970:193:0;;;;;;;;:::i;37366:97::-;;;:::i;2605:404:5:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2605:404:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;31516:126:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;31516:126:0;;:::i;32699:105::-;;;:::i;17031:365::-;;;:::i;36049:103::-;;;:::i;6170:94:5:-;;;:::i;29343:547:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;29343:547:0;;:::i;:::-;;;;;;;-1:-1:-1;;;;;29343:547:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11544:278;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11544:278:0;;:::i;8876:26::-;;;:::i;13578:2252::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13578:2252:0;;;;;;;:::i;2149:38:5:-;;;:::i;31800:102:0:-;;;:::i;2254:27:5:-;;;:::i;36559:82:0:-;;;:::i;35804:91::-;;;:::i;3208:204:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3208:204:5;;;;;;;:::i;4611:924::-;39568:6:0;;;;39567:7;39559:33;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;;;;4915:14:5;:12;:14::i;:::-;-1:-1:-1;;;;;4893:37:5;:10;-1:-1:-1;;;;;4893:37:5;;4885:63;;;;;-1:-1:-1;;;4885:63:5;;;;;;;;;;;;-1:-1:-1;;;4885:63:5;;;;;;;;;;;;;;;4990:10;:8;:10::i;:::-;-1:-1:-1;;;;;4962:39:5;4970:7;:5;:7::i;:::-;-1:-1:-1;;;;;4962:39:5;;4954:64;;;;;-1:-1:-1;;;4954:64:5;;;;;;;;;;;;-1:-1:-1;;;4954:64:5;;;;;;;;;;;;;;;5096:14;:12;:14::i;:::-;-1:-1:-1;;;;;5096:21:5;;5118:6;5096:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5096:33:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5096:33:5;;;;5193:10;:8;:10::i;:::-;5220:15;;5193:52;;;-1:-1:-1;;;5193:52:5;;-1:-1:-1;;;;;5220:15:5;;;5193:52;;;;;;;;;;;;:18;;;;;;;:52;;;;;5220:15;;5193:52;;;;;;;;5220:15;5193:18;:52;;;5:2:-1;;;;30:1;27;20:12;5:2;5193:52:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5309:15:5;;:36;;;-1:-1:-1;;;5309:36:5;;;;;;;;;;-1:-1:-1;;;;;5309:15:5;;;;-1:-1:-1;5309:28:5;;-1:-1:-1;5309:36:5;;;;;:15;;:36;;;;;;;;:15;;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;5309:36:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5309:36:5;;;;5383:1;5356:24;:22;:24::i;:::-;:28;5352:179;;;5434:39;5460:4;5466:6;5434:25;:39::i;:::-;5352:179;;;5494:30;5511:4;5517:6;5494:16;:30::i;:::-;4611:924;;;;;;;;:::o;36888:125:0:-;39568:6;;;;39567:7;39559:33;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;;;;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;36957:6;:13;;-1:-1:-1;;36957:13:0;36966:4;36957:13;;;36982:26;;36997:10;;36982:26;;36957:6;;36982:26;36888:125::o;38271:94::-;38338:22;;38271:94;;:::o;8302:31::-;;;;:::o;36384:78::-;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;36429:28;;;-1:-1:-1;;;36429:28:0;;:9;:28;;;;36444:12;36429:28;;;;;;:14;;;;:28;;;;;-1:-1:-1;;36429:28:0;;;;;;;:14;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;36429:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36429:28:0;;;;36384:78::o;24914:128::-;1392:13:38;:18;;1409:1;1392:18;;;;;38793:32:0;;;-1:-1:-1;;;38793:32:0;;:9;:32;;;;38812:12;38793:32;;;;;;:18;;;;:32;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;38793:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38793:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38793:32:0;38792:33;38784:57;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;;;;24996:41;25017:10;25029:7;24996:20;:41::i;:::-;1501:13:38;;1485:12;:29;1477:73;;;;;-1:-1:-1;;;1477:73:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1477:73:38;;;;;;;;;;;;;;;24914:128:0;;:::o;8224:30::-;;;;:::o;35208:223::-;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;35276:18;:6;35287;35276:18;:10;:18;:::i;:::-;35268:44;;;;;-1:-1:-1;;;35268:44:0;;;;;;;;;;;;-1:-1:-1;;;35268:44:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;35326:20:0;;35336:10;35326:20;;35318:49;;;;;-1:-1:-1;;;35318:49:0;;;;;;;;;;;;-1:-1:-1;;;35318:49:0;;;;;;;;;;;;;;;35373:21;:6;35387;35373:21;:13;:21;:::i;:::-;35406:20;;-1:-1:-1;;;;;35406:20:0;;;;;;;;35208:223;:::o;20126:311::-;39260:19;:17;:19::i;:::-;39252:49;;;;;-1:-1:-1;;;39252:49:0;;;;;;;;;;;;-1:-1:-1;;;39252:49:0;;;;;;;;;;;;;;;39568:6;;;;39567:7;39559:33;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;;;;1392:13:38;:18;;1409:1;1392:18;;;;;38793:32:0;;;-1:-1:-1;;;38793:32:0;;:9;:32;;;;38812:12;38793:32;;;;;;:18;;;;:32;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;38793:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38793:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38793:32:0;38792:33;38784:57;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;;;;20291:7;:5;:7::i;:::-;:56;;;-1:-1:-1;;;20291:56:0;;20312:10;20291:56;;;;20332:4;20291:56;;;;;;;;;;;;-1:-1:-1;;;;;20291:20:0;;;;;;;:56;;;;;;;;;;;;;;;-1:-1:-1;20291:20:0;:56;;;5:2:-1;;;;30:1;27;20:12;5:2;20291:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20291:56:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20291:56:0;20283:80;;;;;-1:-1:-1;;;20283:80:0;;;;;;;;;;;;-1:-1:-1;;;20283:80:0;;;;;;;;;;;;;;;20395:37;20412:10;20424:7;20395:16;:37::i;34601:96::-;34655:4;34674:18;:6;34685;34674:18;:10;:18;:::i;:::-;34667:25;;34601:96;;;;:::o;22610:965::-;1392:13:38;:18;;1409:1;1392:18;;;;;38793:32:0;;;-1:-1:-1;;;38793:32:0;;:9;:32;;;;38812:12;38793:32;;;;;;:18;;;;:32;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;38793:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38793:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38793:32:0;38792:33;38784:57;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;;;;22706:6;22680:23;22779:38;22806:10;22779:26;:38::i;:::-;22743:74;;22855:15;22827:25;:43;22823:265;;;22880:52;22906:25;22880;:52::i;:::-;22958:46;:15;22978:25;22958:46;:19;:46;:::i;:::-;22940:64;;22823:265;;;23025:42;23051:15;23025:25;:42::i;:::-;23075:7;;;;22823:265;23138:35;;;-1:-1:-1;;;23138:35:0;;:9;:35;;;;23162:10;23138:35;;;;;;23113:22;;23138:23;;;;:35;;;;;;;;;;;;;;;:23;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;23138:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23138:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23138:35:0;;-1:-1:-1;23183:32:0;;;23179:246;;;23225:48;23246:10;23258:14;23225:20;:48::i;:::-;23299:35;:15;23319:14;23299:35;:19;:35;:::i;:::-;23281:53;;23179:246;;;23355:49;23376:10;23388:15;23355:20;:49::i;:::-;23412:7;;;;;23179:246;23516:54;23542:10;23554:15;23516:25;:54::i;:::-;38847:1;;;1501:13:38;;1485:12;:29;1477:73;;;;;-1:-1:-1;;;1477:73:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1477:73:38;;;;;;;;;;;;;;28038:100:0;28110:23;;28038:100;:::o;9895:246::-;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;9980:9;;-1:-1:-1;;;;;9980:9:0;9972:32;9964:63;;;;;-1:-1:-1;;;9964:63:0;;;;;;;;;;;;-1:-1:-1;;;9964:63:0;;;;;;;;;;;;;;;10079:4;-1:-1:-1;;;;;10041:43:0;10049:10;-1:-1:-1;;;;;10049:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10049:17:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10049:17:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10049:17:0;-1:-1:-1;;;;;10041:43:0;;10033:75;;;;;-1:-1:-1;;;10033:75:0;;;;;;;;;;;;-1:-1:-1;;;10033:75:0;;;;;;;;;;;;;;;10114:9;:22;;-1:-1:-1;;;;;;10114:22:0;-1:-1:-1;;;;;10114:22:0;;;;;;;;;;9895:246::o;38591:102::-;38662:26;;38591:102;:::o;3567:150:5:-;39110:22:0;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;3670:42:5;3685:16;3703:8;3670:14;:42::i;37599:90:0:-;37641:7;37663:21;:9;:19;:21::i;:::-;37656:28;;37599:90;:::o;24216:298::-;24281:26;24310:38;24337:10;24310:26;:38::i;:::-;24281:67;;24373:18;24362:7;:29;;24354:59;;;;;-1:-1:-1;;;24354:59:0;;;;;;;;;;;;-1:-1:-1;;;24354:59:0;;;;;;;;;;;;;;;24419:30;24429:10;24441:7;24419:9;:30::i;:::-;24461:48;;;;;;;;24489:10;;24461:48;;;;;;;;;;24216:298;;:::o;23655:435::-;1392:13:38;:18;;1409:1;1392:18;;;;;38793:32:0;;;-1:-1:-1;;;38793:32:0;;:9;:32;;;;38812:12;38793:32;;;;;;:18;;;;:32;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;38793:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38793:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38793:32:0;38792:33;38784:57;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;;;;23738:40;;;-1:-1:-1;;;23738:40:0;;:9;:40;;;;23767:10;23738:40;;;;;;23711:24;;23738:28;;;;:40;;;;;;;;;;;;;;;:28;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;23738:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23738:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23738:40:0;23812:10;23785:15;23803:20;;;:8;23738:40;23803:20;;;;;;23868:30;;-1:-1:-1;;;23868:30:0;;:9;:30;;;;;;;;;;;;;23738:40;;-1:-1:-1;23803:20:0;23868:18;;;;:30;;;;;23785:15;;23868:30;;;;;:18;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;23868:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23868:30:0;;;;23904;23914:10;23926:7;23904:9;:30::i;:::-;23953:9;;-1:-1:-1;;;;;23953:9:0;23945:32;23941:103;;23987:9;;:50;;;-1:-1:-1;;;23987:50:0;;24008:10;23987:50;;;;;;;;;;;;-1:-1:-1;;;;;23987:9:0;;;;:20;;:50;;;;;:9;;:50;;;;;;;;:9;;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;23987:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23987:50:0;;;;23941:103;24055:30;;;;;;;;24065:10;;24055:30;;;;;;;;;;38847:1;;1501:13:38;;1485:12;:29;1477:73;;;;;-1:-1:-1;;;1477:73:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1477:73:38;;;;;;;;;;;;;;;23655:435:0;:::o;33640:123::-;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;33719:39;33742:15;33719:22;:39::i;18998:312::-;39568:6;;;;39567:7;39559:33;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;;;;1392:13:38;:18;;1409:1;1392:18;;;;;19144:7:0;:5;:7::i;:::-;:56;;;-1:-1:-1;;;19144:56:0;;19165:10;19144:56;;;;19185:4;19144:56;;;;;;;;;;;;-1:-1:-1;;;;;19144:20:0;;;;;;;:56;;;;;;;;;;;;;;;-1:-1:-1;19144:20:0;:56;;;5:2:-1;;;;30:1;27;20:12;5:2;19144:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19144:56:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19144:56:0;19136:80;;;;;-1:-1:-1;;;19136:80:0;;;;;;;;;;;;-1:-1:-1;;;19136:80:0;;;;;;;;;;;;;;;19261:44;19285:10;19297:7;19261:23;:44::i;25358:171::-;1392:13:38;:18;;1409:1;1392:18;;;;;38793:32:0;;;-1:-1:-1;;;38793:32:0;;:9;:32;;;;38812:12;38793:32;;;;;;25448:4;;1392:18:38;38793::0;;;;:32;;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;38793:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38793:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38793:32:0;38792:33;38784:57;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;;;;25461:46;25487:10;25499:7;25461:25;:46::i;:::-;25520:4;25513:11;;1501:13:38;;1485:12;:29;1477:73;;;;;-1:-1:-1;;;1477:73:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1477:73:38;;;;;;;;;;;;;;;25358:171:0;;;;:::o;32067:92::-;32110:7;32132:9;:20;;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32132:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32132:22:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32132:22:0;;-1:-1:-1;32067:92:0;:::o;30888:104::-;-1:-1:-1;;;;;30972:15:0;30950:7;30972:15;;;:8;:15;;;;;;;30888:104::o;30536:118::-;30619:30;;;-1:-1:-1;;;30619:30:0;;:9;:30;;;;-1:-1:-1;;;;;30619:30:0;;;;;;;;30597:7;;30619:23;;;;:30;;;;;;;;;;;;;;;:23;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;30619:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30619:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30619:30:0;;30536:118;-1:-1:-1;;30536:118:0:o;24658:152::-;24776:28;;;-1:-1:-1;;;24776:28:0;;:9;:28;;;;-1:-1:-1;;;;;24776:28:0;;;;;;;;24732:7;;24754:51;;24776:19;;;;:28;;;;;;;;;;;;;;:19;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;24776:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24776:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24776:28:0;-1:-1:-1;;;;;24754:17:0;;;;;;:8;24776:28;24754:17;;;;;;:51;:21;:51;:::i;8814:18::-;;;;;;:::o;37115:128::-;39417:6;;;;39409:36;;;;;-1:-1:-1;;;39409:36:0;;;;;;;;;;;;-1:-1:-1;;;39409:36:0;;;;;;;;;;;;;;;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;37184:6;:14;;-1:-1:-1;;37184:14:0;;;37210:28;;37227:10;;37210:28;;37193:5;;37210:28;37115:128::o;8031:21::-;;;-1:-1:-1;;;;;8031:21:0;;:::o;38069:95::-;38128:31;;;-1:-1:-1;;;38128:31:0;;:9;:31;;;;38146:12;38128:31;;;;;;38109:4;;38128:17;;;;:31;;;;;;;;;;;;;;;:17;:31;;;5:2:-1;;;;30:1;27;20:12;34338:79:0;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;34395:17;34405:6;34395:9;:17::i;31193:119::-;31272:35;;;-1:-1:-1;;;31272:35:0;;:9;:35;;;;-1:-1:-1;;;;;31272:35:0;;;;;;;;31250:7;;31272:28;;;;:35;;;;;;;;;;;;;;;:28;:35;;;5:2:-1;;;;30:1;27;20:12;32403:129:0;32472:7;32494:33;32519:7;32494:20;:18;:20::i;:::-;:24;:33;:24;:33;:::i;28256:185::-;28311:7;28356:1;28330:9;:23;;;:27;28326:111;;;-1:-1:-1;28374:23:0;;-1:-1:-1;;28374:27:0;28367:34;;28326:111;-1:-1:-1;28429:1:0;28422:8;;769:214:38;1024:12:39;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:39;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:39;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:38;959:13;:17;1264:55:39;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:39;;;769:214:38;:::o;12682:177:0:-;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;12795:25;12802:10;12814:5;12795:6;:25::i;:::-;12826:28;12839:14;12826:12;:28::i;:::-;12682:177;;;:::o;33120:111::-;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;33193:33;33213:12;33193:19;:33::i;37834:98::-;37880:7;37902:25;:9;:23;:25::i;19530:189::-;39568:6;;;;39567:7;39559:33;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;-1:-1:-1;;;39559:33:0;;;;;;;;;;;;;;;19642:72;19674:4;19681:7;:5;:7::i;:::-;-1:-1:-1;;;;;19681:17:0;;19707:4;19681:32;;;;;;;;;;;;;-1:-1:-1;;;;;19681:32:0;-1:-1:-1;;;;;19681:32:0;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19681:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19681:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19681:32:0;19642:23;:72::i;:::-;19530:189::o;8123:33::-;;;-1:-1:-1;;;;;8123:33:0;;:::o;26884:416::-;39731:9;;27047:4;;-1:-1:-1;;;;;39731:9:0;39709:10;:32;39701:60;;;;;-1:-1:-1;;;39701:60:0;;;;;;;;;;;;-1:-1:-1;;;39701:60:0;;;;;;;;;;;;;;;40118:35;;;-1:-1:-1;;;40118:35:0;;:9;:35;;;;-1:-1:-1;;;;;40118:35:0;;;;;;;;27012:5;;27019:7;;40091:24;;40118:28;;;;:35;;;;;;;;;;;;;;;:28;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;40118:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;40118:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;40118:35:0;;-1:-1:-1;40167:27:0;;;;40159:56;;;;;-1:-1:-1;;;40159:56:0;;;;;;;;;;;;-1:-1:-1;;;40159:56:0;;;;;;;;;;;;;;;38793:32;;;-1:-1:-1;;;38793:32:0;;:9;:32;;;;38812:12;38793:32;;;;;;:18;;;;:32;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;38793:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38793:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38793:32:0;38792:33;38784:57;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;;;;27077;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27077:15:0;;-1:-1:-1;27077:15:0;;;:8;:15;;;;;;;;:57;;27097:7;;27077:57;:19;:57;:::i;:::-;-1:-1:-1;;;;;27059:15:0;;;;;;;:8;:15;;;;;;:75;;;;27156:13;;;;;;;:26;;27174:7;27156:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;27140:13:0;;;;;;;:8;:13;;;;;;:42;;;;27188:43;;-1:-1:-1;;;27188:43:0;;:9;:43;;;;;;;;;;;;;;;;;;;:27;;;;:43;;;;;;;;;;;:27;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;27188:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;27237:40:0;;;-1:-1:-1;;;27237:40:0;;:9;:40;;;;-1:-1:-1;;;;;27237:40:0;;;;;;;;;;;;;;:26;;-1:-1:-1;27237:26:0;;-1:-1:-1;27237:40:0;;;;;-1:-1:-1;;27237:40:0;;;;;;;:26;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;27237:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;27291:4:0;;26884:416;-1:-1:-1;;;;;;;;;;26884:416:0:o;5967:94:5:-;6025:15;;:25;;;-1:-1:-1;;;6025:25:5;;;;6003:7;;-1:-1:-1;;;;;6025:15:5;;:23;;:25;;;;;;;;;;;;;;:15;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;6025:25:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6025:25:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6025:25:5;:31;;;-1:-1:-1;;;6025:31:5;;;;-1:-1:-1;;;;;6025:29:5;;;;;;:31;;;;;:25;;:31;;;;;;;;;:29;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;6025:31:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;12056:129:0;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;12136:10;:8;:10::i;:::-;12152:28;12165:14;12152:12;:28::i;25970:193::-;39731:9;;26090:4;;-1:-1:-1;;;;;39731:9:0;39709:10;:32;39701:60;;;;;-1:-1:-1;;;39701:60:0;;;;;;;;;;;;-1:-1:-1;;;39701:60:0;;;;;;;;;;;;;;;38793:32;;;-1:-1:-1;;;38793:32:0;;:9;:32;;;;38812:12;38793:32;;;;;;:18;;;;:32;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;38793:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38793:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38793:32:0;38792:33;38784:57;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;;;;26110:48;26143:5;26150:7;26110:32;:48::i;:::-;26103:55;;38847:1;25970:193;;;;:::o;37366:97::-;37426:32;;;-1:-1:-1;;;37426:32:0;;:9;:32;;;;37445:12;37426:32;;;;;;37407:4;;37426:18;;;;:32;;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;2605:404:5;1024:12:39;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:39;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:39;;;;;1225:18;1213:4;1225:18;;;1170:80;2801:132:5;2819:6;2833:7;2848:12;2868:15;2891:12;2911:16;2801:10;:132::i;:::-;2939:14;:12;:14::i;:::-;2959:45;2973:12;2987:16;2959:13;:45::i;:::-;1268:14:39;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:39;;;1264:55;2605:404:5;;;;;;;:::o;31516:126:0:-;31580:7;31602:9;:25;;;;31628:8;31602:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;32699:105:0;32772:6;;:27;;;-1:-1:-1;;;32772:27:0;;;;32750:7;;-1:-1:-1;;;;;32772:6:0;;:25;;:27;;;;;;;;;;;;;;:6;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;32772:27:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;17031:365:0;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;35597:1;35570:24;:22;:24::i;:::-;:28;35562:55;;;;;-1:-1:-1;;;35562:55:0;;;;;;;;;;;;-1:-1:-1;;;35562:55:0;;;;;;;;;;;;;;;35632:37;:35;:37::i;:::-;35631:38;35623:63;;;;;-1:-1:-1;;;35623:63:0;;;;;;;;;;;;-1:-1:-1;;;35623:63:0;;;;;;;;;;;;;;;17099:14;17116:24;:22;:24::i;:::-;17147:17;17167:13;;;:5;:13;;;;;;2845:1;17186:12;;;:47;17245:30;;17099:41;;-1:-1:-1;17167:13:0;17099:41;;17245:30;;;17287:104;;;2845:1;17287:104;;17325:1;17287:104;;;;;;;;;;;;;;17303:6;;17287:104;;;;;;;;;;35692:1;;17031:365::o;36049:103::-;36106:6;;:41;;;-1:-1:-1;;;36106:41:0;;36141:4;36106:41;;;;;;36084:7;;-1:-1:-1;;;;;36106:6:0;;:26;;:41;;;;;;;;;;;;;;36084:7;36106:6;:41;;;5:2:-1;;;;30:1;27;20:12;6170:94:5;6228:15;;:25;;;-1:-1:-1;;;6228:25:5;;;;6206:7;;-1:-1:-1;;;;;6228:15:5;;:23;;:25;;;;;;;;;;;;;;:15;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;6228:25:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6228:25:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6228:25:5;:31;;;-1:-1:-1;;;6228:31:5;;;;-1:-1:-1;;;;;6228:29:5;;;;;;:31;;;;;:25;;:31;;;;;;;;;:29;:31;;;5:2:-1;;;;30:1;27;20:12;29343:547:0;29403:19;29613:14;;;:5;:14;;;;;29647:16;;29686:19;;;;29725:16;;;;29760:15;;;;29791:12;;;;29818:11;;;;29849:16;;;;29877:8;;;;;29647:16;;-1:-1:-1;;;;;29686:19:0;;;;29725:16;;29760:15;;29791:12;;29818:11;;;;;29877:8;29343:547::o;11544:278::-;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;11644:1;11617:24;:22;:24::i;:::-;:28;11613:114;;;11663:37;:35;:37::i;:::-;11655:65;;;;;-1:-1:-1;;;11655:65:0;;;;;;;;;;;;-1:-1:-1;;;11655:65:0;;;;;;;;;;;;;;;11736:19;:17;:19::i;:::-;:24;11732:60;;11770:15;:13;:15::i;:::-;11797:20;11802:14;11797:4;:20::i;8876:26::-;;;-1:-1:-1;;;;;8876:26:0;;:::o;13578:2252::-;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;38949:32;;;-1:-1:-1;;;38949:32:0;;:9;:32;;;;38968:12;38949:32;;;;;;:18;;;;:32;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;38949:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38949:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38949:32:0;38941:58;;;;;-1:-1:-1;;;38941:58:0;;;;;;;;;;;;-1:-1:-1;;;38941:58:0;;;;;;;;;;;;;;;35597:1;35570:24;:22;:24::i;:::-;:28;35562:55;;;;;-1:-1:-1;;;35562:55:0;;;;;;;;;;;;-1:-1:-1;;;35562:55:0;;;;;;;;;;;;;;;35632:37;:35;:37::i;:::-;35631:38;35623:63;;;;;-1:-1:-1;;;35623:63:0;;;;;;;;;;;;-1:-1:-1;;;35623:63:0;;;;;;;;;;;;;;;1392:13:38;:18;;1409:1;1392:18;;;;;13698:30:0;;;-1:-1:-1;;;13698:30:0;;:9;:30;;;;13715:12;13698:30;;;;;;:16;;;;:30;;;;;1392:13:38;;13698:30:0;;;;;;;:16;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;13698:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13698:30:0;;;;13841:14;13858:24;:22;:24::i;:::-;13841:41;;13889:17;13909:5;:13;13915:6;13909:13;;;;;;;;;;;13889:33;;13983:7;13992:5;13966:32;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13966:32:0;;;13956:43;;;;;;13937:4;:15;;;:62;13929:90;;;;;-1:-1:-1;;;13929:90:0;;;;;;;;;;;;-1:-1:-1;;;13929:90:0;;;;;;;;;;;;;;;14101:25;;;;;;;;;;;;26:21:-1;;;22:32;;6:49;;14101:25:0;;;;;;14091:36;;;;;14073:15;14210:24;14091:36;14210:15;:24::i;:::-;14185:49;;14277:25;14305:9;:7;:9::i;:::-;14277:37;;14321:21;14548:16;;14528:17;:36;14524:125;;;14590:52;14602:39;14624:16;;14602:17;:21;;:39;;;;:::i;:::-;14590:11;:52::i;:::-;14574:68;;14524:125;14692:11;14706:45;14719:4;:16;;;14737:13;14706:12;:45::i;:::-;14840:19;;;;-1:-1:-1;;;;;14840:19:0;14831:29;;;;:8;:29;;;;;;14692:59;;-1:-1:-1;14831:38:0;;14692:59;14831:38;:33;:38;:::i;:::-;14808:19;;;;-1:-1:-1;;;;;14808:19:0;14799:29;;;;:8;:29;;;;;:70;;;;14932:22;:13;14950:3;14932:22;:17;:22;:::i;:::-;14961:11;;;:28;;-1:-1:-1;;;;;;14961:28:0;-1:-1:-1;;;;;14961:28:0;;;;;;;;14995:16;;;:30;;;15031:8;;;:14;;;15051:12;;;:22;;;14995:30;;-1:-1:-1;15148:28:0;;;;:48;;-1:-1:-1;15180:16:0;;;15148:48;15144:518;;;15243:16;:36;;;-1:-1:-1;;;;;15353:24:0;;;;;;:8;:24;;;;;;:41;;15382:11;15353:41;:28;:41;:::i;:::-;-1:-1:-1;;;;;15326:24:0;;;;;;:8;:24;;;;;;:68;;;;15452:46;;-1:-1:-1;;;15452:46:0;;:9;:46;;;;;;;;;;;;;;;;;;;:17;;;;:46;;;;;;;;;;;:17;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;15452:46:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15452:46:0;;;;15507:49;15520:14;15536:11;15549:6;15507:12;:49::i;:::-;15144:518;;;15630:16;;:25;;15651:3;15630:25;:20;:25;:::i;:::-;15611:16;:44;15144:518;15673:95;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15673:95:0;;;15689:6;;15673:95;;;;;;;;;15792:19;;;;15779:46;;;;;;;;;;;;;;-1:-1:-1;;;;;15792:19:0;;;;15779:46;;;;;;;;;;;1466:1:38;;;;;;;;1501:13;;1485:12;:29;1477:73;;;;;-1:-1:-1;;;1477:73:38;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1477:73:38;;;;;;;;;;;;;;2149:38:5;;;-1:-1:-1;;;;;2149:38:5;;:::o;31800:102:0:-;31848:7;31870:9;:25;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2254:27:5;;;-1:-1:-1;;;;;2254:27:5;;:::o;36559:82:0:-;39110:22;:6;39121:10;39110:22;:10;:22;:::i;:::-;39102:45;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;-1:-1:-1;;;39102:45:0;;;;;;;;;;;;;;;36606:30;;;-1:-1:-1;;;36606:30:0;;:9;:30;;;;36623:12;36606:30;;;;;;:16;;;;:30;;;;;-1:-1:-1;;36606:30:0;;;;;;;:16;:30;;;5:2:-1;;;;30:1;27;20:12;35804:91:0;35870:6;;:19;;;-1:-1:-1;;;35870:19:0;;;;35842:6;;-1:-1:-1;;;;;35870:6:0;;:17;;:19;;;;;;;;;;;;;;:6;:19;;;5:2:-1;;;;30:1;27;20:12;3208:204:5;3295:14;:12;:14::i;:::-;3319:22;;3315:93;;3356:45;3370:12;3384:16;3356:13;:45::i;5674:185::-;5750:7;;5721:9;;-1:-1:-1;;;;;5750:7:5;5742:30;5738:117;;5789:7;;;;;;;;;-1:-1:-1;;;;;5789:7:5;-1:-1:-1;;;;;5789:17:5;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5789:19:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5789:19:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5789:19:5;;-1:-1:-1;5782:26:5;;21462:272:0;38793:32;;;-1:-1:-1;;;38793:32:0;;:9;:32;;;;38812:12;38793:32;;;;;;:18;;;;:32;;;;;;;;;;;;;;:18;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;38793:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38793:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38793:32:0;38792:33;38784:57;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;-1:-1:-1;;;38784:57:0;;;;;;;;;;;;;;;21594:45;;;-1:-1:-1;;;21594:45:0;;:9;:45;;;;-1:-1:-1;;;;;21594:45:0;;;;;;;;;;;;;;:26;;;;:45;;;;;-1:-1:-1;;21594:45:0;;;;;;;:26;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;21594:45:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21594:45:0;;;;21646:31;21659:8;21669:7;21646:12;:31::i;:::-;21689:40;;;;;;;;-1:-1:-1;;;;;21689:40:0;;;;;;;;;;;;;21462:272;;:::o;21018:232::-;21131:36;;;-1:-1:-1;;;21131:36:0;;:9;:36;;;;-1:-1:-1;;;;;21131:36:0;;;;;;;;;;;;;;:17;;;;:36;;;;;-1:-1:-1;;21131:36:0;;;;;;;:17;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;21131:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21131:36:0;;;;21174:31;21187:8;21197:7;21174:12;:31::i;:::-;21217:28;;;;;;;;-1:-1:-1;;;;;21217:28:0;;;;;;;;;;;;;21018:232;;:::o;779:200:26:-;851:4;-1:-1:-1;;;;;875:21:26;;867:68;;;;-1:-1:-1;;;867:68:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:26;:11;:20;;;;;;;;;;;;;;;779:200::o;25046:203:0:-;25124:39;;;-1:-1:-1;;;25124:39:0;;:9;:39;;;;-1:-1:-1;;;;;25124:39:0;;;;;;;;;;;;;;:22;;;;:39;;;;;-1:-1:-1;;25124:39:0;;;;;;;:22;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;25124:39:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25124:39:0;;;;25169:26;25179:6;25187:7;25169:9;:26::i;:::-;25207:37;;;;;;;;-1:-1:-1;;;;;25207:37:0;;;;;;;;;;;;;25046:203;;:::o;510:180:26:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:26;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:26;;;510:180::o;1274:134:30:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;25533:232:0:-;25616:49;25649:6;25657:7;25616:32;:49::i;:::-;-1:-1:-1;25683:9:0;;-1:-1:-1;;;;;25683:9:0;25675:32;25671:90;;25717:9;;:37;;;-1:-1:-1;;;25717:37:0;;-1:-1:-1;;;;;25717:37:0;;;;;;;;;;;;;;;:9;;;;;:20;;:37;;;;;:9;;:37;;;;;;;:9;;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;25717:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25717:37:0;;;;25533:232;;:::o;3721:310:5:-;3833:15;;-1:-1:-1;;;;;3833:15:5;3825:38;3817:60;;;;;-1:-1:-1;;;3817:60:5;;;;;;;;;;;;-1:-1:-1;;;3817:60:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;3891:39:5;;3883:64;;;;;-1:-1:-1;;;3883:64:5;;;;;;;;;;;;-1:-1:-1;;;3883:64:5;;;;;;;;;;;;;;;3953:15;:34;;-1:-1:-1;;;;;3953:34:5;;;-1:-1:-1;;;;;;3953:34:5;;;;;;;3993:7;:18;;;;;;;;;;;3721:310::o;3222:288:1:-;3333:17;;;;3315:13;;3284:7;;;;3315:36;;;:17;:36;:::i;:::-;3299:52;;3408:4;:13;;;3389:4;:15;;;:32;;:59;;;;;3443:5;3425:4;:15;;;:23;3389:59;3385:103;;;-1:-1:-1;;3466:15:1;;;;3222:288::o;27418:512:0:-;-1:-1:-1;;;;;27504:17:0;;27486:15;27504:17;;;:8;:17;;;;;;27536:18;;;;27528:44;;;;;-1:-1:-1;;;27528:44:0;;;;;;;;;;;;-1:-1:-1;;;27528:44:0;;;;;;;;;;;;;;;27632:20;:7;27644;27632:20;:11;:20;:::i;:::-;-1:-1:-1;;;;;27612:17:0;;;;;;:8;:17;;;;;:40;27719:16;;:29;;27740:7;27719:29;:20;:29;:::i;:::-;27700:16;:48;27806:6;;:32;;;-1:-1:-1;;;27806:32:0;;;;;;;;;;-1:-1:-1;;;;;27806:6:0;;;;:23;;:32;;;;;;;;;;;;;;;:6;;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;27806:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27806:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27806:32:0;:37;27798:61;;;;;-1:-1:-1;;;27798:61:0;;;;;;;;;;;;-1:-1:-1;;;27798:61:0;;;;;;;;;;;;;;;27873:7;:5;:7::i;:::-;-1:-1:-1;;;;;27873:16:0;;27890:7;27899;27873:34;;;;;;;;;;;;;-1:-1:-1;;;;;27873:34:0;-1:-1:-1;;;;;27873:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27873:34:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27873:34:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27873:34:0;27865:60;;;;;-1:-1:-1;;;27865:60:0;;;;;;;;;;;;-1:-1:-1;;;27865:60:0;;;;;;;;;;;;;;33931:228;-1:-1:-1;;;;;34011:29:0;;34003:55;;;;;-1:-1:-1;;;34003:55:0;;;;;;;;;;;;-1:-1:-1;;;34003:55:0;;;;;;;;;;;;;;;34064:18;:36;;-1:-1:-1;;;;;;34064:36:0;-1:-1:-1;;;;;34064:36:0;;;;;;;;34112:42;;;;-1:-1:-1;;34112:42:0;33931:228;:::o;20597:195::-;20705:31;20718:8;20728:7;20705:12;:31::i;:::-;20748:39;;;;;;;;-1:-1:-1;;;;;20748:39:0;;;;;;;;;;;;;20597:195;;:::o;34881:103::-;34931:18;:6;34942;34931:18;:10;:18;:::i;:::-;34961;;-1:-1:-1;;;;;34961:18:0;;;;;;;;34881:103;:::o;2159:459:30:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:30;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1409:467:39;1842:7;1830:20;1864:7;1409:467;:::o;33235:202:0:-;33325:7;33309:12;:23;;33301:47;;;;;-1:-1:-1;;;33301:47:0;;;;;;;;;;;;-1:-1:-1;;;33301:47:0;;;;;;;;;;;;;;;33354:15;:30;;;33396:36;;;;;;;;;;;;;;;;;33235:202;:::o;3083:135:1:-;3149:7;3171:42;3191:4;:21;;;3171:15;3181:4;3171:9;:15::i;:::-;:19;:42;:19;:42;:::i;1732:187:30:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:30;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:30;;;;;;;;;;;;;;;;;;;;;;;;;;;26358:254:0;26462:43;;;-1:-1:-1;;;26462:43:0;;:9;:43;;;;-1:-1:-1;;;;;26462:43:0;;;;;;;;;;;;;;26450:4;;26462:27;;;;:43;;;;;26450:4;;26462:43;;;;;;;;:27;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;26462:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26462:43:0;;;;26511:25;26521:5;26528:7;26511:9;:25::i;:::-;26548:41;;;;;;;;-1:-1:-1;;;;;26548:41:0;;;;;;;;;;;;;-1:-1:-1;26603:4:0;26358:254;;;;:::o;9393:498::-;1024:12:39;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:39;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:39;;;;;1225:18;1213:4;1225:18;;;1170:80;-1:-1:-1;;;;;9599:20:0;;9591:48;;;;;-1:-1:-1;;;9591:48:0;;;;;;;;;;;;-1:-1:-1;;;9591:48:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;9653:21:0;;9645:50;;;;;-1:-1:-1;;;9645:50:0;;;;;;;;;;;;-1:-1:-1;;;9645:50:0;;;;;;;;;;;;;;;9701:6;:25;;-1:-1:-1;;;;;;9701:25:0;-1:-1:-1;;;;;9701:25:0;;;;;9732:17;9742:6;9732:9;:17::i;:::-;9755:33;9775:12;9755:19;:33::i;:::-;9794:39;9817:15;9794:22;:39::i;3416:147:5:-;3455:103;;;-1:-1:-1;;;3455:103:5;;3504:4;3455:103;;;;;;1715:66;3455:103;;;;;;;;;;1561:42;;3455:40;;:103;;;;;3511:31;;3455:103;;;;;;;3511:31;1561:42;3455:103;;;5:2:-1;;;;30:1;27;20:12;5:2;3455:103:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;10145:187:0;10233:40;;;-1:-1:-1;;;10233:40:0;;:9;:40;;;;;;;;;;;;:25;;;;:40;;;;;-1:-1:-1;;10233:40:0;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;10233:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;10279:48:0;;;-1:-1:-1;;;10279:48:0;;:9;:48;;;;;;;;;;;;:29;;-1:-1:-1;10279:29:0;;-1:-1:-1;10279:48:0;;;;;-1:-1:-1;;10279:48:0;;;;;;;:29;:48;;;5:2:-1;;;;30:1;27;20:12;5:2;10279:48:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;28614:177:0;28684:4;28696:17;28716:5;:31;28722:24;:22;:24::i;:::-;28716:31;;;;;;;;;;;-1:-1:-1;28716:31:0;28760:12;;;:26;;;-1:-1:-1;;28614:177:0;:::o;10934:199::-;10974:14;10991:19;:17;:19::i;:::-;11021:17;;10974:36;;-1:-1:-1;10974:36:0;;11021:17;;;;;11056:9;;-1:-1:-1;;;;;11056:9:0;11048:32;11044:85;;11090:9;;-1:-1:-1;;;;;11090:9:0;:18;11109:12;:10;:12::i;:::-;11090:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11090:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11090:32:0;;;;10934:199;:::o;10442:410::-;10492:24;;;-1:-1:-1;;;10492:24:0;;:9;:24;;;;;;:22;;;;:24;;;;;;;;;;;;;;:22;:24;;;5:2:-1;;;;30:1;27;20:12;5:2;10492:24:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10492:24:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;10555:170:0;;;;;;;;10567:15;;;10555:170;;10590:18;;;-1:-1:-1;;;;;10590:18:0;;;10492:24;10555:170;;;;;;10616:12;10555:170;;;;;;;;;;;;-1:-1:-1;10555:170:0;;;;;;;;;;;;;;;;;;;;;;;;10528:23;;;10522:30;;:5;:30;;;;;;:203;;;;;;10590:18;10522:203;;;;;;;-1:-1:-1;;;;;;10522:203:0;;;;;;;;;;;;;;;;;;;;10528:23;10522:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10781:18;;10750:23;;10826:15;;10736:111;;;;;;;;;;;10781:18;;;10750:23;;10736:111;;;;;;;;;10442:410;:::o;17625:219::-;17693:7;17708:11;17730;:23;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17730:25:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17730:25:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17730:25:0;;-1:-1:-1;17766:20:0;;;17762:51;;;17803:3;-1:-1:-1;17796:10:0;;17762:51;-1:-1:-1;17825:14:0;;17625:219;-1:-1:-1;17625:219:0:o;18122:430::-;18213:7;18228:25;18256:11;:20;18284:14;18256:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18256:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18256:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18256:44:0;18440:53;;;-1:-1:-1;;;18440:53:0;;;;;;;;18489:2;18440:53;;;;;;18256:44;;-1:-1:-1;18381:15:0;;18399:11;;:20;;18256:44;;18399:11;;18440:20;;:53;;;;;18256:44;;18440:53;;;;;;;;18399:11;18440:53;;;5:2:-1;;;;30:1;27;20:12;5:2;18440:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18440:53:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18440:53:0;18399:95;;;-1:-1:-1;;;;;;18399:95:0;;;;;;;;;;;;;;;;;;;;;;;;;;;18440:53;;18399:95;;;;;;;;;;;5:2:-1;;;;30:1;27;20:12;5:2;18399:95:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18399:95:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18399:95:0;18515:31;;;-1:-1:-1;;;18515:31:0;;;;;;;;;;18399:95;;-1:-1:-1;18515:11:0;;:21;;:31;;;;;18399:95;;18515:31;;;;;;;;:11;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;18515:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18515:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18515:31:0;;18122:430;-1:-1:-1;;;;;18122:430:0:o;16416:451::-;16521:80;;;-1:-1:-1;;;16521:80:0;;-1:-1:-1;;;;;16521:80:0;;;;;;3247:66;16521:80;;;;;;16506:12;;2924:42;;16521:40;;:80;;;;;;;;;;;;;;;2924:42;16521:80;;;5:2:-1;;;;30:1;27;20:12;5:2;16521:80:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16521:80:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16521:80:0;;-1:-1:-1;;;;;;16611:18:0;;;16607:256;;16679:89;;;-1:-1:-1;;;;;16679:89:0;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;16679:89:0;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;16657:112:0;;;;16640:12;;16657:9;;;;16671:6;;16679:89;;16657:112;;;25:18:-1;16657:112:0;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;16657:112:0;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;16639:130:0;;;16782:7;16777:80;;16843:4;-1:-1:-1;;;;;16806:42:0;16835:6;-1:-1:-1;;;;;16806:42:0;16827:6;16806:42;;;;;;;;;;16607:256;16416:451;;;;:::o;21967:415::-;-1:-1:-1;;;;;22093:18:0;;;;;;:8;:18;;;;;;:31;;22116:7;22093:31;:22;:31;:::i;:::-;-1:-1:-1;;;;;22072:18:0;;;;;;:8;:18;;;;;:52;22191:16;;:29;;22212:7;22191:29;:20;:29;:::i;:::-;22172:16;:48;22264:7;:5;:7::i;:::-;22288:6;;22264:41;;;-1:-1:-1;;;22264:41:0;;-1:-1:-1;;;;;22288:6:0;;;22264:41;;;;;;;;;;;;:15;;;;;;;:41;;;;;;;;;;;;;;;22288:6;22264:15;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;22264:41:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22264:41:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22264:41:0;22256:66;;;;;-1:-1:-1;;;22256:66:0;;;;;;;;;;;;-1:-1:-1;;;22256:66:0;;;;;;;;;;;;;;;22336:6;;:20;;;-1:-1:-1;;;22336:20:0;;;;;;;;;;-1:-1:-1;;;;;22336:6:0;;;;:11;;:20;;;;;;;;;;;;;;;:6;;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;22336:20:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22336:20:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22336:20:0;:25;22328:49;;;;;-1:-1:-1;;;22328:49:0;;;;;;;;;;;;-1:-1:-1;;;22328:49:0;;;;;;;;;;;;;;260:175:26;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:26;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:26;424:4;401:27;;;260:175::o",
  "source": "/**\nCopyright 2020 PoolTogether Inc.\n\nThis file is part of PoolTogether.\n\nPoolTogether is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation under version 3 of the License.\n\nPoolTogether is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with PoolTogether.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\npragma solidity 0.5.12;\n\nimport \"./BasePool.sol\";\nimport \"scd-mcd-migration/src/ScdMcdMigration.sol\";\nimport { GemLike } from \"scd-mcd-migration/src/Interfaces.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol\";\n\n/**\n * @title MCDAwarePool\n * @author Brendan Asselstine brendan@pooltogether.us\n * @notice This contract is a Pool that is aware of the new Multi-Collateral Dai.  It uses the ERC777Recipient interface to\n * detect if it's being transferred tickets from the old single collateral Dai (Sai) Pool.  If it is, it migrates the Sai to Dai\n * and immediately deposits the new Dai as committed tickets for that user.  We are knowingly bypassing the committed period for\n * users to encourage them to migrate to the MCD Pool.\n */\ncontract MCDAwarePool is BasePool, IERC777Recipient {\n  IERC1820Registry constant internal ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n  // keccak256(\"ERC777TokensRecipient\")\n  bytes32 constant internal TOKENS_RECIPIENT_INTERFACE_HASH =\n      0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b;\n\n  uint256 internal constant DEFAULT_LOCK_DURATION = 40;\n  uint256 internal constant DEFAULT_COOLDOWN_DURATION = 80;\n\n  /**\n   * @notice The address of the ScdMcdMigration contract (see https://github.com/makerdao/developerguides/blob/master/mcd/upgrading-to-multi-collateral-dai/upgrading-to-multi-collateral-dai.md#direct-integration-with-smart-contracts)\n   */\n  ScdMcdMigration public scdMcdMigration;\n\n  /**\n   * @notice The address of the Sai Pool contract\n   */\n  MCDAwarePool public saiPool;\n\n  /**\n   * @notice Initializes the contract.\n   * @param _owner The initial administrator of the contract\n   * @param _cToken The Compound cToken to bind this Pool to\n   * @param _feeFraction The fraction of the winnings to give to the beneficiary\n   * @param _feeBeneficiary The beneficiary who receives the fee\n   */\n  function init (\n    address _owner,\n    address _cToken,\n    uint256 _feeFraction,\n    address _feeBeneficiary,\n    uint256 lockDuration,\n    uint256 cooldownDuration\n  ) public initializer {\n    super.init(\n      _owner,\n      _cToken,\n      _feeFraction,\n      _feeBeneficiary,\n      lockDuration,\n      cooldownDuration\n    );\n    initRegistry();\n    initBlocklock(lockDuration, cooldownDuration);\n  }\n\n  /**\n   * @notice Used to initialize the BasePool contract after an upgrade.  Registers the MCDAwarePool with the ERC1820 registry so that it can receive tokens, and inits the block lock.\n   */\n  function initMCDAwarePool(uint256 lockDuration, uint256 cooldownDuration) public {\n    initRegistry();\n    if (blocklock.lockDuration == 0) {\n      initBlocklock(lockDuration, cooldownDuration);\n    }\n  }\n\n  function initRegistry() internal {\n    ERC1820_REGISTRY.setInterfaceImplementer(address(this), TOKENS_RECIPIENT_INTERFACE_HASH, address(this));\n  }\n\n  function initMigration(ScdMcdMigration _scdMcdMigration, MCDAwarePool _saiPool) public onlyAdmin {\n    _initMigration(_scdMcdMigration, _saiPool);\n  }\n\n  function _initMigration(ScdMcdMigration _scdMcdMigration, MCDAwarePool _saiPool) internal {\n    require(address(scdMcdMigration) == address(0), \"Pool/init\");\n    require(address(_scdMcdMigration) != address(0), \"Pool/mig-def\");\n    scdMcdMigration = _scdMcdMigration;\n    saiPool = _saiPool; // may be null\n  }\n\n  /**\n   * @notice Called by an ERC777 token when tokens are sent, transferred, or minted.  If the sender is the original Sai Pool\n   * and this pool is bound to the Dai token then it will accept the transfer, migrate the tokens, and deposit on behalf of\n   * the sender.  It will reject all other tokens.\n   *\n   * If there is a committed draw this function will mint the user tickets immediately, otherwise it will place them in the\n   * open prize.  This is to encourage migration.\n   *\n   * @param from The sender\n   * @param amount The amount they are transferring\n   */\n  function tokensReceived(\n    address, // operator\n    address from,\n    address, // to address can't be anything but us because we don't implement ERC1820ImplementerInterface\n    uint256 amount,\n    bytes calldata,\n    bytes calldata\n  ) external unlessDepositsPaused {\n    require(msg.sender == address(saiPoolToken()), \"Pool/sai-only\");\n    require(address(token()) == address(daiToken()), \"Pool/not-dai\");\n\n    // cash out of the Pool.  This call transfers sai to this contract\n    saiPoolToken().redeem(amount, '');\n\n    // approve of the transfer to the migration contract\n    saiToken().approve(address(scdMcdMigration), amount);\n\n    // migrate the sai to dai.  The contract now has dai\n    scdMcdMigration.swapSaiToDai(amount);\n\n    if (currentCommittedDrawId() > 0) {\n      // now deposit the dai as tickets\n      _depositPoolFromCommitted(from, amount);\n    } else {\n      _depositPoolFrom(from, amount);\n    }\n  }\n\n  /**\n   * @notice Returns the address of the PoolSai pool token contract\n   * @return The address of the Sai PoolToken contract\n   */\n  function saiPoolToken() internal view returns (PoolToken) {\n    if (address(saiPool) != address(0)) {\n      return saiPool.poolToken();\n    } else {\n      return PoolToken(0);\n    }\n  }\n\n  /**\n   * @notice Returns the address of the Sai token\n   * @return The address of the sai token\n   */\n  function saiToken() public returns (GemLike) {\n    return scdMcdMigration.saiJoin().gem();\n  }\n\n  /**\n   * @notice Returns the address of the Dai token\n   * @return The address of the Dai token.\n   */\n  function daiToken() public returns (GemLike) {\n    return scdMcdMigration.daiJoin().dai();\n  }\n}\n",
  "sourcePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/MCDAwarePool.sol",
  "ast": {
    "absolutePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/MCDAwarePool.sol",
    "exportedSymbols": {
      "MCDAwarePool": [
        3714
      ]
    },
    "id": 3715,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3429,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "650:23:5"
      },
      {
        "absolutePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/BasePool.sol",
        "file": "./BasePool.sol",
        "id": 3430,
        "nodeType": "ImportDirective",
        "scope": 3715,
        "sourceUnit": 2101,
        "src": "675:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "scd-mcd-migration/src/ScdMcdMigration.sol",
        "file": "scd-mcd-migration/src/ScdMcdMigration.sol",
        "id": 3431,
        "nodeType": "ImportDirective",
        "scope": 3715,
        "sourceUnit": 11092,
        "src": "700:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "scd-mcd-migration/src/Interfaces.sol",
        "file": "scd-mcd-migration/src/Interfaces.sol",
        "id": 3433,
        "nodeType": "ImportDirective",
        "scope": 3715,
        "sourceUnit": 10520,
        "src": "752:63:5",
        "symbolAliases": [
          {
            "foreign": 3432,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol",
        "id": 3434,
        "nodeType": "ImportDirective",
        "scope": 3715,
        "sourceUnit": 9326,
        "src": "816:94:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3435,
              "name": "BasePool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2100,
              "src": "1459:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasePool_$2100",
                "typeString": "contract BasePool"
              }
            },
            "id": 3436,
            "nodeType": "InheritanceSpecifier",
            "src": "1459:8:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3437,
              "name": "IERC777Recipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9325,
              "src": "1469:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC777Recipient_$9325",
                "typeString": "contract IERC777Recipient"
              }
            },
            "id": 3438,
            "nodeType": "InheritanceSpecifier",
            "src": "1469:16:5"
          }
        ],
        "contractDependencies": [
          2100,
          9325,
          9459,
          9522
        ],
        "contractKind": "contract",
        "documentation": "@title MCDAwarePool\n@author Brendan Asselstine brendan@pooltogether.us\n@notice This contract is a Pool that is aware of the new Multi-Collateral Dai.  It uses the ERC777Recipient interface to\ndetect if it's being transferred tickets from the old single collateral Dai (Sai) Pool.  If it is, it migrates the Sai to Dai\nand immediately deposits the new Dai as committed tickets for that user.  We are knowingly bypassing the committed period for\nusers to encourage them to migrate to the MCD Pool.",
        "fullyImplemented": true,
        "id": 3714,
        "linearizedBaseContracts": [
          3714,
          9325,
          2100,
          9459,
          9522
        ],
        "name": "MCDAwarePool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3443,
            "name": "ERC1820_REGISTRY",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "1490:114:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$7501",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 3439,
              "name": "IERC1820Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7501,
              "src": "1490:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$7501",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 3441,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1561:42:5",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 3440,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 7501,
                "src": "1544:16:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$7501_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 3442,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1544:60:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$7501",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3446,
            "name": "TOKENS_RECIPIENT_INTERFACE_HASH",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "1649:132:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3444,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1649:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307862323831666338633132393534643232353434646234356465333135396133393237323839356231363961383532623331346639636337363265343463353362",
              "id": 3445,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1715:66:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_80741353335606793576644178559265408063696393279619534167571325834855102858555_by_1",
                "typeString": "int_const 8074...(69 digits omitted)...8555"
              },
              "value": "0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3449,
            "name": "DEFAULT_LOCK_DURATION",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "1786:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3447,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1786:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3430",
              "id": 3448,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1836:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_40_by_1",
                "typeString": "int_const 40"
              },
              "value": "40"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3452,
            "name": "DEFAULT_COOLDOWN_DURATION",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "1842:56:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3450,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1842:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3830",
              "id": 3451,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1896:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_80_by_1",
                "typeString": "int_const 80"
              },
              "value": "80"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3454,
            "name": "scdMcdMigration",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "2149:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
              "typeString": "contract ScdMcdMigration"
            },
            "typeName": {
              "contractScope": null,
              "id": 3453,
              "name": "ScdMcdMigration",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11091,
              "src": "2149:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                "typeString": "contract ScdMcdMigration"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3456,
            "name": "saiPool",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "2254:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
              "typeString": "contract MCDAwarePool"
            },
            "typeName": {
              "contractScope": null,
              "id": 3455,
              "name": "MCDAwarePool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3714,
              "src": "2254:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                "typeString": "contract MCDAwarePool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3492,
              "nodeType": "Block",
              "src": "2795:214:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3476,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3458,
                        "src": "2819:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3477,
                        "name": "_cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3460,
                        "src": "2833:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3478,
                        "name": "_feeFraction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3462,
                        "src": "2848:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3479,
                        "name": "_feeBeneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3464,
                        "src": "2868:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3480,
                        "name": "lockDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3466,
                        "src": "2891:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3481,
                        "name": "cooldownDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3468,
                        "src": "2911:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3473,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11179,
                        "src": "2801:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_MCDAwarePool_$3714",
                          "typeString": "contract super MCDAwarePool"
                        }
                      },
                      "id": 3475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 257,
                      "src": "2801:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 3482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:132:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3483,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:132:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3484,
                      "name": "initRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3531,
                      "src": "2939:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2939:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3486,
                  "nodeType": "ExpressionStatement",
                  "src": "2939:14:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3488,
                        "name": "lockDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3466,
                        "src": "2973:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3489,
                        "name": "cooldownDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3468,
                        "src": "2987:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3487,
                      "name": "initBlocklock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "2959:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2959:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3491,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:45:5"
                }
              ]
            },
            "documentation": "@notice Initializes the contract.\n@param _owner The initial administrator of the contract\n@param _cToken The Compound cToken to bind this Pool to\n@param _feeFraction The fraction of the winnings to give to the beneficiary\n@param _feeBeneficiary The beneficiary who receives the fee",
            "id": 3493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3471,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3470,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9503,
                  "src": "2783:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2783:11:5"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3458,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2625:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3460,
                  "name": "_cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2645:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2645:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3462,
                  "name": "_feeFraction",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2666:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3464,
                  "name": "_feeBeneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2692:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2692:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3466,
                  "name": "lockDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2721:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2721:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3468,
                  "name": "cooldownDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2747:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2619:156:5"
            },
            "returnParameters": {
              "id": 3472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2795:0:5"
            },
            "scope": 3714,
            "src": "2605:404:5",
            "stateMutability": "nonpayable",
            "superFunction": 257,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3514,
              "nodeType": "Block",
              "src": "3289:123:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3500,
                      "name": "initRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3531,
                      "src": "3295:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3502,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:14:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3503,
                        "name": "blocklock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "3319:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$2115_storage",
                          "typeString": "struct Blocklock.State storage ref"
                        }
                      },
                      "id": 3504,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lockDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2112,
                      "src": "3319:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3345:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3319:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3513,
                  "nodeType": "IfStatement",
                  "src": "3315:93:5",
                  "trueBody": {
                    "id": 3512,
                    "nodeType": "Block",
                    "src": "3348:60:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3508,
                              "name": "lockDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3495,
                              "src": "3370:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3509,
                              "name": "cooldownDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3497,
                              "src": "3384:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3507,
                            "name": "initBlocklock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "3356:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 3510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3356:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3511,
                        "nodeType": "ExpressionStatement",
                        "src": "3356:45:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Used to initialize the BasePool contract after an upgrade.  Registers the MCDAwarePool with the ERC1820 registry so that it can receive tokens, and inits the block lock.",
            "id": 3515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initMCDAwarePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3495,
                  "name": "lockDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3515,
                  "src": "3234:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3234:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3497,
                  "name": "cooldownDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3515,
                  "src": "3256:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3233:48:5"
            },
            "returnParameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3289:0:5"
            },
            "scope": 3714,
            "src": "3208:204:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3530,
              "nodeType": "Block",
              "src": "3449:114:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3522,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11178,
                            "src": "3504:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                              "typeString": "contract MCDAwarePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                              "typeString": "contract MCDAwarePool"
                            }
                          ],
                          "id": 3521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3496:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3496:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3524,
                        "name": "TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3446,
                        "src": "3511:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3526,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11178,
                            "src": "3552:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                              "typeString": "contract MCDAwarePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                              "typeString": "contract MCDAwarePool"
                            }
                          ],
                          "id": 3525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3544:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3544:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3518,
                        "name": "ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3443,
                        "src": "3455:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$7501",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 3520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7445,
                      "src": "3455:40:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 3528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3455:103:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3529,
                  "nodeType": "ExpressionStatement",
                  "src": "3455:103:5"
                }
              ]
            },
            "documentation": null,
            "id": 3531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3437:2:5"
            },
            "returnParameters": {
              "id": 3517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3449:0:5"
            },
            "scope": 3714,
            "src": "3416:147:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3545,
              "nodeType": "Block",
              "src": "3664:53:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3541,
                        "name": "_scdMcdMigration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "3685:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                          "typeString": "contract ScdMcdMigration"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3542,
                        "name": "_saiPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3535,
                        "src": "3703:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                          "typeString": "contract MCDAwarePool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                          "typeString": "contract ScdMcdMigration"
                        },
                        {
                          "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                          "typeString": "contract MCDAwarePool"
                        }
                      ],
                      "id": 3540,
                      "name": "_initMigration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3584,
                      "src": "3670:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ScdMcdMigration_$11091_$_t_contract$_MCDAwarePool_$3714_$returns$__$",
                        "typeString": "function (contract ScdMcdMigration,contract MCDAwarePool)"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3544,
                  "nodeType": "ExpressionStatement",
                  "src": "3670:42:5"
                }
              ]
            },
            "documentation": null,
            "id": 3546,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3538,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3537,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2032,
                  "src": "3654:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3654:9:5"
              }
            ],
            "name": "initMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3533,
                  "name": "_scdMcdMigration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3546,
                  "src": "3590:32:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                    "typeString": "contract ScdMcdMigration"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3532,
                    "name": "ScdMcdMigration",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11091,
                    "src": "3590:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                      "typeString": "contract ScdMcdMigration"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3535,
                  "name": "_saiPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 3546,
                  "src": "3624:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                    "typeString": "contract MCDAwarePool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3534,
                    "name": "MCDAwarePool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3714,
                    "src": "3624:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                      "typeString": "contract MCDAwarePool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3589:57:5"
            },
            "returnParameters": {
              "id": 3539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3664:0:5"
            },
            "scope": 3714,
            "src": "3567:150:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3583,
              "nodeType": "Block",
              "src": "3811:220:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3555,
                              "name": "scdMcdMigration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3454,
                              "src": "3833:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                                "typeString": "contract ScdMcdMigration"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                                "typeString": "contract ScdMcdMigration"
                              }
                            ],
                            "id": 3554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3825:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3825:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3861:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3853:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3853:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3825:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6f6c2f696e6974",
                        "id": 3561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3865:11:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b4125f50acf6f97fca5f8163383e05343697203faa0b5eefdce8d0c34ccc6ed",
                          "typeString": "literal_string \"Pool/init\""
                        },
                        "value": "Pool/init"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b4125f50acf6f97fca5f8163383e05343697203faa0b5eefdce8d0c34ccc6ed",
                          "typeString": "literal_string \"Pool/init\""
                        }
                      ],
                      "id": 3553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "3817:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:60:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3563,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3566,
                              "name": "_scdMcdMigration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3548,
                              "src": "3899:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                                "typeString": "contract ScdMcdMigration"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                                "typeString": "contract ScdMcdMigration"
                              }
                            ],
                            "id": 3565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3891:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3891:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3928:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3920:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3920:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3891:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6f6c2f6d69672d646566",
                        "id": 3572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3932:14:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_583601fd25fe1564006ad4bde6b5b7bea04ce04e742119d6a2d0f9aeee76dfe5",
                          "typeString": "literal_string \"Pool/mig-def\""
                        },
                        "value": "Pool/mig-def"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_583601fd25fe1564006ad4bde6b5b7bea04ce04e742119d6a2d0f9aeee76dfe5",
                          "typeString": "literal_string \"Pool/mig-def\""
                        }
                      ],
                      "id": 3564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "3883:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3883:64:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3574,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3575,
                      "name": "scdMcdMigration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3454,
                      "src": "3953:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                        "typeString": "contract ScdMcdMigration"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3576,
                      "name": "_scdMcdMigration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3548,
                      "src": "3971:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                        "typeString": "contract ScdMcdMigration"
                      }
                    },
                    "src": "3953:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                      "typeString": "contract ScdMcdMigration"
                    }
                  },
                  "id": 3578,
                  "nodeType": "ExpressionStatement",
                  "src": "3953:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3579,
                      "name": "saiPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3456,
                      "src": "3993:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                        "typeString": "contract MCDAwarePool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3580,
                      "name": "_saiPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3550,
                      "src": "4003:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                        "typeString": "contract MCDAwarePool"
                      }
                    },
                    "src": "3993:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                      "typeString": "contract MCDAwarePool"
                    }
                  },
                  "id": 3582,
                  "nodeType": "ExpressionStatement",
                  "src": "3993:18:5"
                }
              ]
            },
            "documentation": null,
            "id": 3584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3548,
                  "name": "_scdMcdMigration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3584,
                  "src": "3745:32:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                    "typeString": "contract ScdMcdMigration"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3547,
                    "name": "ScdMcdMigration",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11091,
                    "src": "3745:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                      "typeString": "contract ScdMcdMigration"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3550,
                  "name": "_saiPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 3584,
                  "src": "3779:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                    "typeString": "contract MCDAwarePool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3549,
                    "name": "MCDAwarePool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3714,
                    "src": "3779:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                      "typeString": "contract MCDAwarePool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3744:57:5"
            },
            "returnParameters": {
              "id": 3552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3811:0:5"
            },
            "scope": 3714,
            "src": "3721:310:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3664,
              "nodeType": "Block",
              "src": "4879:656:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3602,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11106,
                            "src": "4893:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4893:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3605,
                                "name": "saiPoolToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3689,
                                "src": "4915:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_PoolToken_$4857_$",
                                  "typeString": "function () view returns (contract PoolToken)"
                                }
                              },
                              "id": 3606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4915:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PoolToken_$4857",
                                "typeString": "contract PoolToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PoolToken_$4857",
                                "typeString": "contract PoolToken"
                              }
                            ],
                            "id": 3604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4907:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4907:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4893:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6f6c2f7361692d6f6e6c79",
                        "id": 3609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4932:15:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6666bccbfdddc6359271dc1f5d15df64d5ec9d41040f7766fbe2fd2d5fda621c",
                          "typeString": "literal_string \"Pool/sai-only\""
                        },
                        "value": "Pool/sai-only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6666bccbfdddc6359271dc1f5d15df64d5ec9d41040f7766fbe2fd2d5fda621c",
                          "typeString": "literal_string \"Pool/sai-only\""
                        }
                      ],
                      "id": 3601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "4885:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3611,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:63:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3614,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "4970:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$8169_$",
                                  "typeString": "function () view returns (contract IERC20)"
                                }
                              },
                              "id": 3615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4970:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8169",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$8169",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 3613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4962:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4962:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3618,
                                "name": "daiToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3713,
                                "src": "4990:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_GemLike_$10281_$",
                                  "typeString": "function () returns (contract GemLike)"
                                }
                              },
                              "id": 3619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4990:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GemLike_$10281",
                                "typeString": "contract GemLike"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GemLike_$10281",
                                "typeString": "contract GemLike"
                              }
                            ],
                            "id": 3617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4982:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4982:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4962:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6f6c2f6e6f742d646169",
                        "id": 3622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5003:14:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13d117805a9e8292d6a35754751faa672be73bee1c07d6640c35f384fc81068f",
                          "typeString": "literal_string \"Pool/not-dai\""
                        },
                        "value": "Pool/not-dai"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13d117805a9e8292d6a35754751faa672be73bee1c07d6640c35f384fc81068f",
                          "typeString": "literal_string \"Pool/not-dai\""
                        }
                      ],
                      "id": 3612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "4954:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4954:64:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3624,
                  "nodeType": "ExpressionStatement",
                  "src": "4954:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3628,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3592,
                        "src": "5118:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 3629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5126:2:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3625,
                          "name": "saiPoolToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3689,
                          "src": "5096:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_PoolToken_$4857_$",
                            "typeString": "function () view returns (contract PoolToken)"
                          }
                        },
                        "id": 3626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5096:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolToken_$4857",
                          "typeString": "contract PoolToken"
                        }
                      },
                      "id": 3627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4097,
                      "src": "5096:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) external"
                      }
                    },
                    "id": 3630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5096:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3631,
                  "nodeType": "ExpressionStatement",
                  "src": "5096:33:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3636,
                            "name": "scdMcdMigration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3454,
                            "src": "5220:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                              "typeString": "contract ScdMcdMigration"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                              "typeString": "contract ScdMcdMigration"
                            }
                          ],
                          "id": 3635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5212:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5212:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3638,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3592,
                        "src": "5238:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3632,
                          "name": "saiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3701,
                          "src": "5193:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_GemLike_$10281_$",
                            "typeString": "function () returns (contract GemLike)"
                          }
                        },
                        "id": 3633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5193:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GemLike_$10281",
                          "typeString": "contract GemLike"
                        }
                      },
                      "id": 3634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10260,
                      "src": "5193:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5193:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3640,
                  "nodeType": "ExpressionStatement",
                  "src": "5193:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3644,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3592,
                        "src": "5338:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3641,
                        "name": "scdMcdMigration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3454,
                        "src": "5309:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                          "typeString": "contract ScdMcdMigration"
                        }
                      },
                      "id": 3643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapSaiToDai",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10856,
                      "src": "5309:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3646,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:36:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3647,
                        "name": "currentCommittedDrawId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "5356:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 3648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5356:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5383:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5356:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3662,
                    "nodeType": "Block",
                    "src": "5486:45:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3658,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3588,
                              "src": "5511:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3659,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3592,
                              "src": "5517:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3657,
                            "name": "_depositPoolFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "5494:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5494:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3661,
                        "nodeType": "ExpressionStatement",
                        "src": "5494:30:5"
                      }
                    ]
                  },
                  "id": 3663,
                  "nodeType": "IfStatement",
                  "src": "5352:179:5",
                  "trueBody": {
                    "id": 3656,
                    "nodeType": "Block",
                    "src": "5386:94:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3652,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3588,
                              "src": "5460:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3653,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3592,
                              "src": "5466:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3651,
                            "name": "_depositPoolFromCommitted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "5434:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5434:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3655,
                        "nodeType": "ExpressionStatement",
                        "src": "5434:39:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Called by an ERC777 token when tokens are sent, transferred, or minted.  If the sender is the original Sai Pool\nand this pool is bound to the Dai token then it will accept the transfer, migrate the tokens, and deposit on behalf of\nthe sender.  It will reject all other tokens.\n   * If there is a committed draw this function will mint the user tickets immediately, otherwise it will place them in the\nopen prize.  This is to encourage migration.\n   * @param from The sender\n@param amount The amount they are transferring",
            "id": 3665,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3599,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3598,
                  "name": "unlessDepositsPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2063,
                  "src": "4858:20:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4858:20:5"
              }
            ],
            "name": "tokensReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3586,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4640:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4640:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3588,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4665:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3590,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4683:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4683:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3592,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4790:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3594,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4810:14:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3593,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4810:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3596,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4830:14:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3595,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4830:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4634:214:5"
            },
            "returnParameters": {
              "id": 3600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4879:0:5"
            },
            "scope": 3714,
            "src": "4611:924:5",
            "stateMutability": "nonpayable",
            "superFunction": 9324,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3688,
              "nodeType": "Block",
              "src": "5732:127:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3671,
                          "name": "saiPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3456,
                          "src": "5750:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                            "typeString": "contract MCDAwarePool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                            "typeString": "contract MCDAwarePool"
                          }
                        ],
                        "id": 3670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5742:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 3672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5742:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5770:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5762:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 3675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5762:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5742:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3686,
                    "nodeType": "Block",
                    "src": "5821:34:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5846:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3682,
                            "name": "PoolToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4857,
                            "src": "5836:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolToken_$4857_$",
                              "typeString": "type(contract PoolToken)"
                            }
                          },
                          "id": 3684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5836:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolToken_$4857",
                            "typeString": "contract PoolToken"
                          }
                        },
                        "functionReturnParameters": 3669,
                        "id": 3685,
                        "nodeType": "Return",
                        "src": "5829:19:5"
                      }
                    ]
                  },
                  "id": 3687,
                  "nodeType": "IfStatement",
                  "src": "5738:117:5",
                  "trueBody": {
                    "id": 3681,
                    "nodeType": "Block",
                    "src": "5774:41:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3677,
                              "name": "saiPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3456,
                              "src": "5789:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                                "typeString": "contract MCDAwarePool"
                              }
                            },
                            "id": 3678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "poolToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 198,
                            "src": "5789:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_PoolToken_$4857_$",
                              "typeString": "function () view external returns (contract PoolToken)"
                            }
                          },
                          "id": 3679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5789:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolToken_$4857",
                            "typeString": "contract PoolToken"
                          }
                        },
                        "functionReturnParameters": 3669,
                        "id": 3680,
                        "nodeType": "Return",
                        "src": "5782:26:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Returns the address of the PoolSai pool token contract\n@return The address of the Sai PoolToken contract",
            "id": 3689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saiPoolToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5695:2:5"
            },
            "returnParameters": {
              "id": 3669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3668,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3689,
                  "src": "5721:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PoolToken_$4857",
                    "typeString": "contract PoolToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3667,
                    "name": "PoolToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4857,
                    "src": "5721:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PoolToken_$4857",
                      "typeString": "contract PoolToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5720:11:5"
            },
            "scope": 3714,
            "src": "5674:185:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3700,
              "nodeType": "Block",
              "src": "6012:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3694,
                            "name": "scdMcdMigration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3454,
                            "src": "6025:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                              "typeString": "contract ScdMcdMigration"
                            }
                          },
                          "id": 3695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "saiJoin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10534,
                          "src": "6025:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_JoinLike_$10413_$",
                            "typeString": "function () view external returns (contract JoinLike)"
                          }
                        },
                        "id": 3696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6025:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_JoinLike_$10413",
                          "typeString": "contract JoinLike"
                        }
                      },
                      "id": 3697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10393,
                      "src": "6025:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_GemLike_$10281_$",
                        "typeString": "function () external returns (contract GemLike)"
                      }
                    },
                    "id": 3698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6025:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemLike_$10281",
                      "typeString": "contract GemLike"
                    }
                  },
                  "functionReturnParameters": 3693,
                  "id": 3699,
                  "nodeType": "Return",
                  "src": "6018:38:5"
                }
              ]
            },
            "documentation": "@notice Returns the address of the Sai token\n@return The address of the sai token",
            "id": 3701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saiToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5984:2:5"
            },
            "returnParameters": {
              "id": 3693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3692,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "6003:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GemLike_$10281",
                    "typeString": "contract GemLike"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3691,
                    "name": "GemLike",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10281,
                    "src": "6003:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemLike_$10281",
                      "typeString": "contract GemLike"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6002:9:5"
            },
            "scope": 3714,
            "src": "5967:94:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3712,
              "nodeType": "Block",
              "src": "6215:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3706,
                            "name": "scdMcdMigration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3454,
                            "src": "6228:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                              "typeString": "contract ScdMcdMigration"
                            }
                          },
                          "id": 3707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "daiJoin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10538,
                          "src": "6228:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_JoinLike_$10413_$",
                            "typeString": "function () view external returns (contract JoinLike)"
                          }
                        },
                        "id": 3708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6228:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_JoinLike_$10413",
                          "typeString": "contract JoinLike"
                        }
                      },
                      "id": 3709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dai",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10398,
                      "src": "6228:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_GemLike_$10281_$",
                        "typeString": "function () external returns (contract GemLike)"
                      }
                    },
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6228:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemLike_$10281",
                      "typeString": "contract GemLike"
                    }
                  },
                  "functionReturnParameters": 3705,
                  "id": 3711,
                  "nodeType": "Return",
                  "src": "6221:38:5"
                }
              ]
            },
            "documentation": "@notice Returns the address of the Dai token\n@return The address of the Dai token.",
            "id": 3713,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "daiToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6187:2:5"
            },
            "returnParameters": {
              "id": 3705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3704,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3713,
                  "src": "6206:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GemLike_$10281",
                    "typeString": "contract GemLike"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3703,
                    "name": "GemLike",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10281,
                    "src": "6206:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemLike_$10281",
                      "typeString": "contract GemLike"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6205:9:5"
            },
            "scope": 3714,
            "src": "6170:94:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3715,
        "src": "1434:4832:5"
      }
    ],
    "src": "650:5617:5"
  },
  "legacyAST": {
    "absolutePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/MCDAwarePool.sol",
    "exportedSymbols": {
      "MCDAwarePool": [
        3714
      ]
    },
    "id": 3715,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3429,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "650:23:5"
      },
      {
        "absolutePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/BasePool.sol",
        "file": "./BasePool.sol",
        "id": 3430,
        "nodeType": "ImportDirective",
        "scope": 3715,
        "sourceUnit": 2101,
        "src": "675:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "scd-mcd-migration/src/ScdMcdMigration.sol",
        "file": "scd-mcd-migration/src/ScdMcdMigration.sol",
        "id": 3431,
        "nodeType": "ImportDirective",
        "scope": 3715,
        "sourceUnit": 11092,
        "src": "700:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "scd-mcd-migration/src/Interfaces.sol",
        "file": "scd-mcd-migration/src/Interfaces.sol",
        "id": 3433,
        "nodeType": "ImportDirective",
        "scope": 3715,
        "sourceUnit": 10520,
        "src": "752:63:5",
        "symbolAliases": [
          {
            "foreign": 3432,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol",
        "id": 3434,
        "nodeType": "ImportDirective",
        "scope": 3715,
        "sourceUnit": 9326,
        "src": "816:94:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3435,
              "name": "BasePool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2100,
              "src": "1459:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasePool_$2100",
                "typeString": "contract BasePool"
              }
            },
            "id": 3436,
            "nodeType": "InheritanceSpecifier",
            "src": "1459:8:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3437,
              "name": "IERC777Recipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9325,
              "src": "1469:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC777Recipient_$9325",
                "typeString": "contract IERC777Recipient"
              }
            },
            "id": 3438,
            "nodeType": "InheritanceSpecifier",
            "src": "1469:16:5"
          }
        ],
        "contractDependencies": [
          2100,
          9325,
          9459,
          9522
        ],
        "contractKind": "contract",
        "documentation": "@title MCDAwarePool\n@author Brendan Asselstine brendan@pooltogether.us\n@notice This contract is a Pool that is aware of the new Multi-Collateral Dai.  It uses the ERC777Recipient interface to\ndetect if it's being transferred tickets from the old single collateral Dai (Sai) Pool.  If it is, it migrates the Sai to Dai\nand immediately deposits the new Dai as committed tickets for that user.  We are knowingly bypassing the committed period for\nusers to encourage them to migrate to the MCD Pool.",
        "fullyImplemented": true,
        "id": 3714,
        "linearizedBaseContracts": [
          3714,
          9325,
          2100,
          9459,
          9522
        ],
        "name": "MCDAwarePool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3443,
            "name": "ERC1820_REGISTRY",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "1490:114:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$7501",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 3439,
              "name": "IERC1820Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7501,
              "src": "1490:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$7501",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 3441,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1561:42:5",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 3440,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 7501,
                "src": "1544:16:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$7501_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 3442,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1544:60:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$7501",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3446,
            "name": "TOKENS_RECIPIENT_INTERFACE_HASH",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "1649:132:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3444,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1649:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307862323831666338633132393534643232353434646234356465333135396133393237323839356231363961383532623331346639636337363265343463353362",
              "id": 3445,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1715:66:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_80741353335606793576644178559265408063696393279619534167571325834855102858555_by_1",
                "typeString": "int_const 8074...(69 digits omitted)...8555"
              },
              "value": "0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3449,
            "name": "DEFAULT_LOCK_DURATION",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "1786:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3447,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1786:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3430",
              "id": 3448,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1836:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_40_by_1",
                "typeString": "int_const 40"
              },
              "value": "40"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 3452,
            "name": "DEFAULT_COOLDOWN_DURATION",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "1842:56:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3450,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1842:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3830",
              "id": 3451,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1896:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_80_by_1",
                "typeString": "int_const 80"
              },
              "value": "80"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3454,
            "name": "scdMcdMigration",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "2149:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
              "typeString": "contract ScdMcdMigration"
            },
            "typeName": {
              "contractScope": null,
              "id": 3453,
              "name": "ScdMcdMigration",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11091,
              "src": "2149:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                "typeString": "contract ScdMcdMigration"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3456,
            "name": "saiPool",
            "nodeType": "VariableDeclaration",
            "scope": 3714,
            "src": "2254:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
              "typeString": "contract MCDAwarePool"
            },
            "typeName": {
              "contractScope": null,
              "id": 3455,
              "name": "MCDAwarePool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3714,
              "src": "2254:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                "typeString": "contract MCDAwarePool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3492,
              "nodeType": "Block",
              "src": "2795:214:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3476,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3458,
                        "src": "2819:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3477,
                        "name": "_cToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3460,
                        "src": "2833:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3478,
                        "name": "_feeFraction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3462,
                        "src": "2848:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3479,
                        "name": "_feeBeneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3464,
                        "src": "2868:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3480,
                        "name": "lockDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3466,
                        "src": "2891:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3481,
                        "name": "cooldownDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3468,
                        "src": "2911:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3473,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11179,
                        "src": "2801:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_MCDAwarePool_$3714",
                          "typeString": "contract super MCDAwarePool"
                        }
                      },
                      "id": 3475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 257,
                      "src": "2801:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 3482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:132:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3483,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:132:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3484,
                      "name": "initRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3531,
                      "src": "2939:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2939:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3486,
                  "nodeType": "ExpressionStatement",
                  "src": "2939:14:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3488,
                        "name": "lockDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3466,
                        "src": "2973:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3489,
                        "name": "cooldownDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3468,
                        "src": "2987:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3487,
                      "name": "initBlocklock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "2959:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2959:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3491,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:45:5"
                }
              ]
            },
            "documentation": "@notice Initializes the contract.\n@param _owner The initial administrator of the contract\n@param _cToken The Compound cToken to bind this Pool to\n@param _feeFraction The fraction of the winnings to give to the beneficiary\n@param _feeBeneficiary The beneficiary who receives the fee",
            "id": 3493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3471,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3470,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9503,
                  "src": "2783:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2783:11:5"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3458,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2625:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3460,
                  "name": "_cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2645:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2645:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3462,
                  "name": "_feeFraction",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2666:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3464,
                  "name": "_feeBeneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2692:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2692:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3466,
                  "name": "lockDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2721:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2721:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3468,
                  "name": "cooldownDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2747:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2619:156:5"
            },
            "returnParameters": {
              "id": 3472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2795:0:5"
            },
            "scope": 3714,
            "src": "2605:404:5",
            "stateMutability": "nonpayable",
            "superFunction": 257,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3514,
              "nodeType": "Block",
              "src": "3289:123:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3500,
                      "name": "initRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3531,
                      "src": "3295:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3502,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:14:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3503,
                        "name": "blocklock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "3319:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$2115_storage",
                          "typeString": "struct Blocklock.State storage ref"
                        }
                      },
                      "id": 3504,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lockDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2112,
                      "src": "3319:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3345:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3319:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3513,
                  "nodeType": "IfStatement",
                  "src": "3315:93:5",
                  "trueBody": {
                    "id": 3512,
                    "nodeType": "Block",
                    "src": "3348:60:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3508,
                              "name": "lockDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3495,
                              "src": "3370:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3509,
                              "name": "cooldownDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3497,
                              "src": "3384:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3507,
                            "name": "initBlocklock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "3356:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 3510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3356:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3511,
                        "nodeType": "ExpressionStatement",
                        "src": "3356:45:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Used to initialize the BasePool contract after an upgrade.  Registers the MCDAwarePool with the ERC1820 registry so that it can receive tokens, and inits the block lock.",
            "id": 3515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initMCDAwarePool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3495,
                  "name": "lockDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3515,
                  "src": "3234:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3234:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3497,
                  "name": "cooldownDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3515,
                  "src": "3256:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3233:48:5"
            },
            "returnParameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3289:0:5"
            },
            "scope": 3714,
            "src": "3208:204:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3530,
              "nodeType": "Block",
              "src": "3449:114:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3522,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11178,
                            "src": "3504:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                              "typeString": "contract MCDAwarePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                              "typeString": "contract MCDAwarePool"
                            }
                          ],
                          "id": 3521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3496:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3496:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3524,
                        "name": "TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3446,
                        "src": "3511:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3526,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11178,
                            "src": "3552:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                              "typeString": "contract MCDAwarePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                              "typeString": "contract MCDAwarePool"
                            }
                          ],
                          "id": 3525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3544:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3544:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3518,
                        "name": "ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3443,
                        "src": "3455:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$7501",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 3520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7445,
                      "src": "3455:40:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 3528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3455:103:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3529,
                  "nodeType": "ExpressionStatement",
                  "src": "3455:103:5"
                }
              ]
            },
            "documentation": null,
            "id": 3531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3437:2:5"
            },
            "returnParameters": {
              "id": 3517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3449:0:5"
            },
            "scope": 3714,
            "src": "3416:147:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3545,
              "nodeType": "Block",
              "src": "3664:53:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3541,
                        "name": "_scdMcdMigration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3533,
                        "src": "3685:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                          "typeString": "contract ScdMcdMigration"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3542,
                        "name": "_saiPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3535,
                        "src": "3703:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                          "typeString": "contract MCDAwarePool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                          "typeString": "contract ScdMcdMigration"
                        },
                        {
                          "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                          "typeString": "contract MCDAwarePool"
                        }
                      ],
                      "id": 3540,
                      "name": "_initMigration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3584,
                      "src": "3670:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ScdMcdMigration_$11091_$_t_contract$_MCDAwarePool_$3714_$returns$__$",
                        "typeString": "function (contract ScdMcdMigration,contract MCDAwarePool)"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3544,
                  "nodeType": "ExpressionStatement",
                  "src": "3670:42:5"
                }
              ]
            },
            "documentation": null,
            "id": 3546,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3538,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3537,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2032,
                  "src": "3654:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3654:9:5"
              }
            ],
            "name": "initMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3533,
                  "name": "_scdMcdMigration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3546,
                  "src": "3590:32:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                    "typeString": "contract ScdMcdMigration"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3532,
                    "name": "ScdMcdMigration",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11091,
                    "src": "3590:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                      "typeString": "contract ScdMcdMigration"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3535,
                  "name": "_saiPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 3546,
                  "src": "3624:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                    "typeString": "contract MCDAwarePool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3534,
                    "name": "MCDAwarePool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3714,
                    "src": "3624:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                      "typeString": "contract MCDAwarePool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3589:57:5"
            },
            "returnParameters": {
              "id": 3539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3664:0:5"
            },
            "scope": 3714,
            "src": "3567:150:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3583,
              "nodeType": "Block",
              "src": "3811:220:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3555,
                              "name": "scdMcdMigration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3454,
                              "src": "3833:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                                "typeString": "contract ScdMcdMigration"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                                "typeString": "contract ScdMcdMigration"
                              }
                            ],
                            "id": 3554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3825:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3825:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3861:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3853:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3853:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3825:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6f6c2f696e6974",
                        "id": 3561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3865:11:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b4125f50acf6f97fca5f8163383e05343697203faa0b5eefdce8d0c34ccc6ed",
                          "typeString": "literal_string \"Pool/init\""
                        },
                        "value": "Pool/init"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b4125f50acf6f97fca5f8163383e05343697203faa0b5eefdce8d0c34ccc6ed",
                          "typeString": "literal_string \"Pool/init\""
                        }
                      ],
                      "id": 3553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "3817:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:60:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3563,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3566,
                              "name": "_scdMcdMigration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3548,
                              "src": "3899:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                                "typeString": "contract ScdMcdMigration"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                                "typeString": "contract ScdMcdMigration"
                              }
                            ],
                            "id": 3565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3891:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3891:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3928:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3920:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3920:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3891:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6f6c2f6d69672d646566",
                        "id": 3572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3932:14:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_583601fd25fe1564006ad4bde6b5b7bea04ce04e742119d6a2d0f9aeee76dfe5",
                          "typeString": "literal_string \"Pool/mig-def\""
                        },
                        "value": "Pool/mig-def"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_583601fd25fe1564006ad4bde6b5b7bea04ce04e742119d6a2d0f9aeee76dfe5",
                          "typeString": "literal_string \"Pool/mig-def\""
                        }
                      ],
                      "id": 3564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "3883:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3883:64:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3574,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3575,
                      "name": "scdMcdMigration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3454,
                      "src": "3953:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                        "typeString": "contract ScdMcdMigration"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3576,
                      "name": "_scdMcdMigration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3548,
                      "src": "3971:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                        "typeString": "contract ScdMcdMigration"
                      }
                    },
                    "src": "3953:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                      "typeString": "contract ScdMcdMigration"
                    }
                  },
                  "id": 3578,
                  "nodeType": "ExpressionStatement",
                  "src": "3953:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3579,
                      "name": "saiPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3456,
                      "src": "3993:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                        "typeString": "contract MCDAwarePool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3580,
                      "name": "_saiPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3550,
                      "src": "4003:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                        "typeString": "contract MCDAwarePool"
                      }
                    },
                    "src": "3993:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                      "typeString": "contract MCDAwarePool"
                    }
                  },
                  "id": 3582,
                  "nodeType": "ExpressionStatement",
                  "src": "3993:18:5"
                }
              ]
            },
            "documentation": null,
            "id": 3584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3548,
                  "name": "_scdMcdMigration",
                  "nodeType": "VariableDeclaration",
                  "scope": 3584,
                  "src": "3745:32:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                    "typeString": "contract ScdMcdMigration"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3547,
                    "name": "ScdMcdMigration",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11091,
                    "src": "3745:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                      "typeString": "contract ScdMcdMigration"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3550,
                  "name": "_saiPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 3584,
                  "src": "3779:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                    "typeString": "contract MCDAwarePool"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3549,
                    "name": "MCDAwarePool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3714,
                    "src": "3779:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                      "typeString": "contract MCDAwarePool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3744:57:5"
            },
            "returnParameters": {
              "id": 3552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3811:0:5"
            },
            "scope": 3714,
            "src": "3721:310:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3664,
              "nodeType": "Block",
              "src": "4879:656:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3602,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11106,
                            "src": "4893:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4893:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3605,
                                "name": "saiPoolToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3689,
                                "src": "4915:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_PoolToken_$4857_$",
                                  "typeString": "function () view returns (contract PoolToken)"
                                }
                              },
                              "id": 3606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4915:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PoolToken_$4857",
                                "typeString": "contract PoolToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PoolToken_$4857",
                                "typeString": "contract PoolToken"
                              }
                            ],
                            "id": 3604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4907:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4907:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4893:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6f6c2f7361692d6f6e6c79",
                        "id": 3609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4932:15:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6666bccbfdddc6359271dc1f5d15df64d5ec9d41040f7766fbe2fd2d5fda621c",
                          "typeString": "literal_string \"Pool/sai-only\""
                        },
                        "value": "Pool/sai-only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6666bccbfdddc6359271dc1f5d15df64d5ec9d41040f7766fbe2fd2d5fda621c",
                          "typeString": "literal_string \"Pool/sai-only\""
                        }
                      ],
                      "id": 3601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "4885:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3611,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:63:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3614,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1857,
                                "src": "4970:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$8169_$",
                                  "typeString": "function () view returns (contract IERC20)"
                                }
                              },
                              "id": 3615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4970:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8169",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$8169",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 3613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4962:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4962:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3618,
                                "name": "daiToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3713,
                                "src": "4990:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_GemLike_$10281_$",
                                  "typeString": "function () returns (contract GemLike)"
                                }
                              },
                              "id": 3619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4990:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GemLike_$10281",
                                "typeString": "contract GemLike"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GemLike_$10281",
                                "typeString": "contract GemLike"
                              }
                            ],
                            "id": 3617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4982:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4982:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4962:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6f6c2f6e6f742d646169",
                        "id": 3622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5003:14:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13d117805a9e8292d6a35754751faa672be73bee1c07d6640c35f384fc81068f",
                          "typeString": "literal_string \"Pool/not-dai\""
                        },
                        "value": "Pool/not-dai"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13d117805a9e8292d6a35754751faa672be73bee1c07d6640c35f384fc81068f",
                          "typeString": "literal_string \"Pool/not-dai\""
                        }
                      ],
                      "id": 3612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "4954:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4954:64:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3624,
                  "nodeType": "ExpressionStatement",
                  "src": "4954:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3628,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3592,
                        "src": "5118:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 3629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5126:2:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3625,
                          "name": "saiPoolToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3689,
                          "src": "5096:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_PoolToken_$4857_$",
                            "typeString": "function () view returns (contract PoolToken)"
                          }
                        },
                        "id": 3626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5096:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PoolToken_$4857",
                          "typeString": "contract PoolToken"
                        }
                      },
                      "id": 3627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4097,
                      "src": "5096:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) external"
                      }
                    },
                    "id": 3630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5096:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3631,
                  "nodeType": "ExpressionStatement",
                  "src": "5096:33:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3636,
                            "name": "scdMcdMigration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3454,
                            "src": "5220:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                              "typeString": "contract ScdMcdMigration"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                              "typeString": "contract ScdMcdMigration"
                            }
                          ],
                          "id": 3635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5212:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5212:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3638,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3592,
                        "src": "5238:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3632,
                          "name": "saiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3701,
                          "src": "5193:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_GemLike_$10281_$",
                            "typeString": "function () returns (contract GemLike)"
                          }
                        },
                        "id": 3633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5193:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GemLike_$10281",
                          "typeString": "contract GemLike"
                        }
                      },
                      "id": 3634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10260,
                      "src": "5193:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5193:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3640,
                  "nodeType": "ExpressionStatement",
                  "src": "5193:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3644,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3592,
                        "src": "5338:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3641,
                        "name": "scdMcdMigration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3454,
                        "src": "5309:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                          "typeString": "contract ScdMcdMigration"
                        }
                      },
                      "id": 3643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapSaiToDai",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10856,
                      "src": "5309:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3646,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:36:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3647,
                        "name": "currentCommittedDrawId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "5356:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 3648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5356:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5383:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5356:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3662,
                    "nodeType": "Block",
                    "src": "5486:45:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3658,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3588,
                              "src": "5511:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3659,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3592,
                              "src": "5517:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3657,
                            "name": "_depositPoolFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "5494:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5494:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3661,
                        "nodeType": "ExpressionStatement",
                        "src": "5494:30:5"
                      }
                    ]
                  },
                  "id": 3663,
                  "nodeType": "IfStatement",
                  "src": "5352:179:5",
                  "trueBody": {
                    "id": 3656,
                    "nodeType": "Block",
                    "src": "5386:94:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3652,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3588,
                              "src": "5460:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3653,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3592,
                              "src": "5466:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3651,
                            "name": "_depositPoolFromCommitted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "5434:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5434:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3655,
                        "nodeType": "ExpressionStatement",
                        "src": "5434:39:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Called by an ERC777 token when tokens are sent, transferred, or minted.  If the sender is the original Sai Pool\nand this pool is bound to the Dai token then it will accept the transfer, migrate the tokens, and deposit on behalf of\nthe sender.  It will reject all other tokens.\n   * If there is a committed draw this function will mint the user tickets immediately, otherwise it will place them in the\nopen prize.  This is to encourage migration.\n   * @param from The sender\n@param amount The amount they are transferring",
            "id": 3665,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3599,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3598,
                  "name": "unlessDepositsPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2063,
                  "src": "4858:20:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4858:20:5"
              }
            ],
            "name": "tokensReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3586,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4640:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4640:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3588,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4665:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3590,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4683:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4683:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3592,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4790:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3594,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4810:14:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3593,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4810:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3596,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3665,
                  "src": "4830:14:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3595,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4830:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4634:214:5"
            },
            "returnParameters": {
              "id": 3600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4879:0:5"
            },
            "scope": 3714,
            "src": "4611:924:5",
            "stateMutability": "nonpayable",
            "superFunction": 9324,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3688,
              "nodeType": "Block",
              "src": "5732:127:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3671,
                          "name": "saiPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3456,
                          "src": "5750:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                            "typeString": "contract MCDAwarePool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                            "typeString": "contract MCDAwarePool"
                          }
                        ],
                        "id": 3670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5742:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 3672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5742:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5770:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5762:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 3675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5762:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5742:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3686,
                    "nodeType": "Block",
                    "src": "5821:34:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5846:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3682,
                            "name": "PoolToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4857,
                            "src": "5836:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolToken_$4857_$",
                              "typeString": "type(contract PoolToken)"
                            }
                          },
                          "id": 3684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5836:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolToken_$4857",
                            "typeString": "contract PoolToken"
                          }
                        },
                        "functionReturnParameters": 3669,
                        "id": 3685,
                        "nodeType": "Return",
                        "src": "5829:19:5"
                      }
                    ]
                  },
                  "id": 3687,
                  "nodeType": "IfStatement",
                  "src": "5738:117:5",
                  "trueBody": {
                    "id": 3681,
                    "nodeType": "Block",
                    "src": "5774:41:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3677,
                              "name": "saiPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3456,
                              "src": "5789:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MCDAwarePool_$3714",
                                "typeString": "contract MCDAwarePool"
                              }
                            },
                            "id": 3678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "poolToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 198,
                            "src": "5789:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_PoolToken_$4857_$",
                              "typeString": "function () view external returns (contract PoolToken)"
                            }
                          },
                          "id": 3679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5789:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PoolToken_$4857",
                            "typeString": "contract PoolToken"
                          }
                        },
                        "functionReturnParameters": 3669,
                        "id": 3680,
                        "nodeType": "Return",
                        "src": "5782:26:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Returns the address of the PoolSai pool token contract\n@return The address of the Sai PoolToken contract",
            "id": 3689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saiPoolToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5695:2:5"
            },
            "returnParameters": {
              "id": 3669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3668,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3689,
                  "src": "5721:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PoolToken_$4857",
                    "typeString": "contract PoolToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3667,
                    "name": "PoolToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4857,
                    "src": "5721:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PoolToken_$4857",
                      "typeString": "contract PoolToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5720:11:5"
            },
            "scope": 3714,
            "src": "5674:185:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3700,
              "nodeType": "Block",
              "src": "6012:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3694,
                            "name": "scdMcdMigration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3454,
                            "src": "6025:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                              "typeString": "contract ScdMcdMigration"
                            }
                          },
                          "id": 3695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "saiJoin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10534,
                          "src": "6025:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_JoinLike_$10413_$",
                            "typeString": "function () view external returns (contract JoinLike)"
                          }
                        },
                        "id": 3696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6025:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_JoinLike_$10413",
                          "typeString": "contract JoinLike"
                        }
                      },
                      "id": 3697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10393,
                      "src": "6025:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_GemLike_$10281_$",
                        "typeString": "function () external returns (contract GemLike)"
                      }
                    },
                    "id": 3698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6025:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemLike_$10281",
                      "typeString": "contract GemLike"
                    }
                  },
                  "functionReturnParameters": 3693,
                  "id": 3699,
                  "nodeType": "Return",
                  "src": "6018:38:5"
                }
              ]
            },
            "documentation": "@notice Returns the address of the Sai token\n@return The address of the sai token",
            "id": 3701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saiToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5984:2:5"
            },
            "returnParameters": {
              "id": 3693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3692,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "6003:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GemLike_$10281",
                    "typeString": "contract GemLike"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3691,
                    "name": "GemLike",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10281,
                    "src": "6003:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemLike_$10281",
                      "typeString": "contract GemLike"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6002:9:5"
            },
            "scope": 3714,
            "src": "5967:94:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3712,
              "nodeType": "Block",
              "src": "6215:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3706,
                            "name": "scdMcdMigration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3454,
                            "src": "6228:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ScdMcdMigration_$11091",
                              "typeString": "contract ScdMcdMigration"
                            }
                          },
                          "id": 3707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "daiJoin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10538,
                          "src": "6228:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_JoinLike_$10413_$",
                            "typeString": "function () view external returns (contract JoinLike)"
                          }
                        },
                        "id": 3708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6228:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_JoinLike_$10413",
                          "typeString": "contract JoinLike"
                        }
                      },
                      "id": 3709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dai",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10398,
                      "src": "6228:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_GemLike_$10281_$",
                        "typeString": "function () external returns (contract GemLike)"
                      }
                    },
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6228:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemLike_$10281",
                      "typeString": "contract GemLike"
                    }
                  },
                  "functionReturnParameters": 3705,
                  "id": 3711,
                  "nodeType": "Return",
                  "src": "6221:38:5"
                }
              ]
            },
            "documentation": "@notice Returns the address of the Dai token\n@return The address of the Dai token.",
            "id": 3713,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "daiToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6187:2:5"
            },
            "returnParameters": {
              "id": 3705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3704,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3713,
                  "src": "6206:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GemLike_$10281",
                    "typeString": "contract GemLike"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3703,
                    "name": "GemLike",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10281,
                    "src": "6206:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemLike_$10281",
                      "typeString": "contract GemLike"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6205:9:5"
            },
            "scope": 3714,
            "src": "6170:94:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3715,
        "src": "1434:4832:5"
      }
    ],
    "src": "650:5617:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-21T20:34:55.064Z",
  "devdoc": {
    "author": "Brendan Asselstine brendan@pooltogether.us",
    "methods": {
      "addAdmin(address)": {
        "params": {
          "_admin": "The address of the admin to add"
        }
      },
      "balance()": {
        "return": "The cToken underlying balance for this contract."
      },
      "balanceOf(address)": {
        "params": {
          "_addr": "The address of the user to check."
        },
        "return": "The user's current balance."
      },
      "calculateWinner(bytes32)": {
        "params": {
          "_entropy": "The entropy to use to select the winner"
        },
        "return": "The winning address"
      },
      "canLock()": {
        "return": "True if the contract can be locked, false otherwise"
      },
      "committedBalanceOf(address)": {
        "params": {
          "_addr": "The address of the user"
        },
        "return": "The total committed balance for the user"
      },
      "committedSupply()": {
        "return": "The total committed balance."
      },
      "cooldownDuration()": {
        "return": "The cooldown duration in blocks"
      },
      "cooldownEndAt()": {
        "return": "The block number at which the cooldown ends and the contract can be re-locked"
      },
      "currentCommittedDrawId()": {
        "return": "The current committed Draw id"
      },
      "currentOpenDrawId()": {
        "return": "The current open Draw id"
      },
      "daiToken()": {
        "return": "The address of the Dai token."
      },
      "depositPool(uint256)": {
        "params": {
          "_amount": "The amount of the token underlying the cToken to deposit."
        }
      },
      "depositSponsorship(uint256)": {
        "params": {
          "_amount": "The amount of the token underlying the cToken to deposit."
        }
      },
      "estimatedInterestRate(uint256)": {
        "params": {
          "_blocks": "The number of block that interest accrued for"
        },
        "return": "The total estimated interest as a 18 point fixed decimal."
      },
      "getDraw(uint256)": {
        "params": {
          "_drawId": "The id of the Draw to retrieve info for."
        },
        "return": "Fields including: feeFraction: the fee fraction feeBeneficiary: the beneficiary of the fee openedBlock: The block at which the draw was opened secretHash: The hash of the secret committed to this draw. entropy: the entropy used to select the winner winner: the address of the winner netWinnings: the total winnings less the fee fee: the fee taken by the beneficiary"
      },
      "init(address,address,uint256,address,uint256,uint256)": {
        "params": {
          "_cToken": "The Compound cToken to bind this Pool to",
          "_feeBeneficiary": "The beneficiary who receives the fee",
          "_feeFraction": "The fraction of the winnings to give to the beneficiary",
          "_owner": "The initial administrator of the contract"
        }
      },
      "isAdmin(address)": {
        "params": {
          "_admin": "The address to check"
        },
        "return": "True if the address is an admin, false otherwise."
      },
      "isLocked()": {
        "return": "True if the contract is locked, false otherwise"
      },
      "lockDuration()": {
        "return": "Returns the duration of the lock in blocks."
      },
      "lockEndAt()": {
        "return": "The block number at which the lock expires"
      },
      "lockTokens()": {
        "details": "The lock only lasts for a duration of blocks.  The lock cannot be relocked until the cooldown duration completes."
      },
      "moveCommitted(address,address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to transfer",
          "_from": "The account to move tokens from",
          "_to": "The account that is receiving the tokens"
        }
      },
      "openBalanceOf(address)": {
        "params": {
          "_addr": "The address of the user"
        },
        "return": "The total open balance for the user"
      },
      "openNextDraw(bytes32)": {
        "params": {
          "nextSecretHash": "The secret hash to use to open a new Draw"
        }
      },
      "openSupply()": {
        "return": "The total open balance"
      },
      "removeAdmin(address)": {
        "params": {
          "_admin": "The address of the admin to remove"
        }
      },
      "reward(bytes32,bytes32)": {
        "params": {
          "_salt": "The salt that was used to conceal the secret",
          "_secret": "The secret to reveal for the current committed Draw"
        }
      },
      "rewardAndOpenNextDraw(bytes32,bytes32,bytes32)": {
        "params": {
          "_salt": "The salt that was used to conceal the secret",
          "lastSecret": "The secret to reveal to reward the current committed Draw.",
          "nextSecretHash": "The secret hash to use to open a new Draw"
        }
      },
      "rollover()": {
        "details": "This function will be removed once the entropy is decentralized."
      },
      "rolloverAndOpenNextDraw(bytes32)": {
        "details": "This function will be removed once the winner selection has been decentralized.",
        "params": {
          "nextSecretHash": "The hash to commit for the next draw"
        }
      },
      "saiToken()": {
        "return": "The address of the sai token"
      },
      "setNextFeeBeneficiary(address)": {
        "params": {
          "_feeBeneficiary": "The beneficiary for the fee fraction.  Cannot be the 0 address."
        }
      },
      "setNextFeeFraction(uint256)": {
        "params": {
          "_feeFraction": "The fee fraction to use. Must be between 0 and 1 and formatted as a fixed point number with 18 decimals (as in Ether)."
        }
      },
      "sponsorshipAndFeeBalanceOf(address)": {
        "params": {
          "_sender": "The user whose balance should be returned"
        }
      },
      "supplyRatePerBlock()": {
        "return": "The cToken supply rate per block"
      },
      "token()": {
        "return": "An ERC20 token address"
      },
      "tokensReceived(address,address,address,uint256,bytes,bytes)": {
        "params": {
          "amount": "The amount they are transferring",
          "from": "The sender"
        }
      },
      "totalBalanceOf(address)": {
        "params": {
          "_addr": "The address of the user to check."
        },
        "return": "The user's current balance."
      },
      "withdraw(uint256)": {
        "params": {
          "amount": "The amount to withdraw."
        }
      },
      "withdrawCommittedDeposit(uint256)": {
        "params": {
          "_amount": "The amount to withdraw"
        }
      },
      "withdrawCommittedDepositFrom(address,uint256)": {
        "params": {
          "_amount": "The amount to withdraw",
          "_from": "The user to withdraw from"
        }
      },
      "withdrawOpenDeposit(uint256)": {
        "params": {
          "_amount": "The amount to withdraw"
        }
      },
      "withdrawSponsorshipAndFee(uint256)": {
        "params": {
          "_amount": "The amount to withdraw"
        }
      }
    },
    "title": "MCDAwarePool"
  },
  "userdoc": {
    "methods": {
      "addAdmin(address)": {
        "notice": "Adds an administrator. Can only be called by administrators. Fires the AdminAdded event."
      },
      "balance()": {
        "notice": "Returns the underlying balance of this contract in the cToken."
      },
      "balanceOf(address)": {
        "notice": "Returns a user's committed balance.  This is the balance of their Pool tokens."
      },
      "calculateWinner(bytes32)": {
        "notice": "Calculates a winner using the passed entropy for the current committed balances."
      },
      "canLock()": {
        "notice": "Returns whether the contract can be locked"
      },
      "committedBalanceOf(address)": {
        "notice": "Returns the total of the address's balance in committed Draws.  That is, the total that contributes to their chances of winning."
      },
      "committedSupply()": {
        "notice": "Returns the total committed balance.  Used to compute an address's chances of winning."
      },
      "cooldownDuration()": {
        "notice": "Returns the cooldown duration.  The cooldown period starts after the Pool has been unlocked. The Pool cannot be locked during the cooldown period."
      },
      "cooldownEndAt()": {
        "notice": "Check cooldown end block"
      },
      "currentCommittedDrawId()": {
        "notice": "Returns the id of the current committed Draw."
      },
      "currentOpenDrawId()": {
        "notice": "Returns the id of the current open Draw."
      },
      "daiToken()": {
        "notice": "Returns the address of the Dai token"
      },
      "depositPool(uint256)": {
        "notice": "Deposits into the pool under the current open Draw.  The deposit is transferred into the cToken. Once the open draw is committed, the deposit will be added to the user's total committed balance and increase their chances of winning proportional to the total committed balance of all users."
      },
      "depositSponsorship(uint256)": {
        "notice": "Allows a user to deposit a sponsorship amount.  The deposit is transferred into the cToken. Sponsorships allow a user to contribute to the pool without becoming eligible to win.  They can withdraw their sponsorship at any time. The deposit will immediately be added to Compound and the interest will contribute to the next draw."
      },
      "estimatedInterestRate(uint256)": {
        "notice": "Calculates the total estimated interest earned for the given number of blocks"
      },
      "getDraw(uint256)": {
        "notice": "Gets information for a given draw."
      },
      "init(address,address,uint256,address,uint256,uint256)": {
        "notice": "Initializes the contract."
      },
      "initMCDAwarePool(uint256,uint256)": {
        "notice": "Used to initialize the BasePool contract after an upgrade.  Registers the MCDAwarePool with the ERC1820 registry so that it can receive tokens, and inits the block lock."
      },
      "isAdmin(address)": {
        "notice": "Checks whether a given address is an administrator."
      },
      "isLocked()": {
        "notice": "Check if the contract is locked."
      },
      "lockDuration()": {
        "notice": "Duration of the lock"
      },
      "lockEndAt()": {
        "notice": "Returns the block number at which the lock expires"
      },
      "lockTokens()": {
        "notice": "Locks the movement of tokens (essentially the committed deposits and winnings)"
      },
      "moveCommitted(address,address,uint256)": {
        "notice": "Allows the associated PoolToken to move committed tokens from one user to another."
      },
      "openBalanceOf(address)": {
        "notice": "Returns the total of the address's balance in the open Draw.  That is, the total that will *eventually* contribute to their chances of winning."
      },
      "openNextDraw(bytes32)": {
        "notice": "Commits the current open draw, if any, and opens the next draw using the passed hash.  Really this function is only called twice: the first after Pool contract creation and the second immediately after. Can only be called by an admin. May fire the Committed event, and always fires the Open event."
      },
      "openSupply()": {
        "notice": "Returns the total open balance.  This balance is the number of tickets purchased for the open draw."
      },
      "pauseDeposits()": {
        "notice": "Pauses all deposits into the contract.  This was added so that we can slowly deprecate Pools.  Users can continue to collect rewards and withdraw, but eventually the Pool will grow smaller.   * emits DepositsPaused"
      },
      "removeAdmin(address)": {
        "notice": "Removes an administrator Can only be called by an admin. Admins cannot remove themselves.  This ensures there is always one admin."
      },
      "reward(bytes32,bytes32)": {
        "notice": "Rewards the winner for the current committed Draw using the passed secret. The gross winnings are calculated by subtracting the accounted balance from the current underlying cToken balance. A winner is calculated using the revealed secret. If there is a winner (i.e. any eligible users) then winner's balance is updated with their net winnings. The draw beneficiary's balance is updated with the fee. The accounted balance is updated to include the fee and, if there was a winner, the net winnings. Fires the Rewarded event."
      },
      "rewardAndOpenNextDraw(bytes32,bytes32,bytes32)": {
        "notice": "Rewards the current committed draw using the passed secret, commits the current open draw, and opens the next draw using the passed secret hash. Can only be called by an admin. Fires the Rewarded event, the Committed event, and the Open event."
      },
      "rollover()": {
        "notice": "A function that skips the reward for the committed draw id."
      },
      "rolloverAndOpenNextDraw(bytes32)": {
        "notice": "Ignores the current draw, and opens the next draw."
      },
      "saiToken()": {
        "notice": "Returns the address of the Sai token"
      },
      "setNextFeeBeneficiary(address)": {
        "notice": "Sets the fee beneficiary for subsequent Draws. Can only be called by admins."
      },
      "setNextFeeFraction(uint256)": {
        "notice": "Sets the beneficiary fee fraction for subsequent Draws. Fires the NextFeeFractionChanged event. Can only be called by an admin."
      },
      "sponsorshipAndFeeBalanceOf(address)": {
        "notice": "Returns the total balance of the user's sponsorship and fees"
      },
      "supplyRatePerBlock()": {
        "notice": "Convenience function to return the supplyRatePerBlock value from the money market contract."
      },
      "token()": {
        "notice": "Returns the token underlying the cToken."
      },
      "tokensReceived(address,address,address,uint256,bytes,bytes)": {
        "notice": "Called by an ERC777 token when tokens are sent, transferred, or minted.  If the sender is the original Sai Pool and this pool is bound to the Dai token then it will accept the transfer, migrate the tokens, and deposit on behalf of the sender.  It will reject all other tokens.   * If there is a committed draw this function will mint the user tickets immediately, otherwise it will place them in the open prize.  This is to encourage migration."
      },
      "totalBalanceOf(address)": {
        "notice": "Returns a user's total balance.  This includes their sponsorships, fees, open deposits, and committed deposits."
      },
      "transferBalanceToSponsorship()": {
        "notice": "Deposits the token balance for this contract as a sponsorship. If people erroneously transfer tokens to this contract, this function will allow us to recoup those tokens as sponsorship."
      },
      "unlockTokens()": {
        "notice": "Unlocks the movement of tokens (essentially the committed deposits)"
      },
      "unpauseDeposits()": {
        "notice": "Unpauses all deposits into the contract   * emits DepositsUnpaused"
      },
      "withdraw()": {
        "notice": "Withdraw the sender's entire balance back to them."
      },
      "withdraw(uint256)": {
        "notice": "Withdraws the given amount from the user's deposits.  It first withdraws from their sponsorship, then their open deposits, then their committed deposits."
      },
      "withdrawCommittedDeposit(uint256)": {
        "notice": "Withdraws from the user's committed deposits"
      },
      "withdrawCommittedDepositFrom(address,uint256)": {
        "notice": "Allows the associated PoolToken to withdraw for a user; useful when redeeming through the token."
      },
      "withdrawOpenDeposit(uint256)": {
        "notice": "Withdraws from the user's open deposits"
      },
      "withdrawSponsorshipAndFee(uint256)": {
        "notice": "Withdraws only from the sender's sponsorship and fee balances"
      }
    },
    "notice": "This contract is a Pool that is aware of the new Multi-Collateral Dai.  It uses the ERC777Recipient interface to detect if it's being transferred tickets from the old single collateral Dai (Sai) Pool.  If it is, it migrates the Sai to Dai and immediately deposits the new Dai as committed tickets for that user.  We are knowingly bypassing the committed period for users to encourage them to migrate to the MCD Pool."
  }
}