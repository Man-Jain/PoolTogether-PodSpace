{
  "contractName": "RecipientWhitelistPoolTokenDecimals",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "RecipientWhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "WhitelistEnabled",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "defaultOperators",
          "type": "address[]"
        },
        {
          "internalType": "contract BasePool",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "defaultOperators",
          "type": "address[]"
        },
        {
          "internalType": "contract BasePool",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "init",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorRedeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract BasePool",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "poolMint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "poolRedeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "recipientWhitelistEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "recipientWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "setRecipientWhitelistEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_whitelisted",
          "type": "bool"
        }
      ],
      "name": "setRecipientWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"RecipientWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"WhitelistEnabled\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultOperators\",\"type\":\"address[]\"},{\"internalType\":\"contract BasePool\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultOperators\",\"type\":\"address[]\"},{\"internalType\":\"contract BasePool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorRedeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract BasePool\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"poolMint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"poolRedeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"recipientWhitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recipientWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setRecipientWhitelistEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelisted\",\"type\":\"bool\"}],\"name\":\"setRecipientWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Brendan Asselstine\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.    * Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.    * Note that accounts cannot have allowance issued by their operators.\"},\"authorizeOperator(address)\":{\"details\":\"See {IERC777-authorizeOperator}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256,bytes)\":{\"details\":\"See {IERC777-burn}.  Not currently implemented.    * Also emits a {Transfer} event for ERC20 compatibility.\"},\"decimals()\":{\"details\":\"See {ERC20Detailed-decimals}.    * Returns the number of decimal places this token should have.  This deviates from the ERC777 spec because deposits into the Pool may use alternative decimal places (such as USDC) [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"defaultOperators()\":{\"details\":\"See {IERC777-defaultOperators}.\"},\"granularity()\":{\"details\":\"See {IERC777-granularity}.    * This implementation always returns `1`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"init(string,string,address[],address)\":{\"params\":{\"defaultOperators\":\"The default operators who are allowed to move tokens\",\"name\":\"The name of the token\",\"pool\":\"The pool to bind to\",\"symbol\":\"The token symbol\"}},\"init(string,string,address[],address,uint8)\":{\"params\":{\"decimals\":\"The number of decimals the Pool's token uses.\",\"defaultOperators\":\"The default operators who are allowed to move tokens\",\"name\":\"The name of the token\",\"pool\":\"The pool to bind to\",\"symbol\":\"The token symbol\"}},\"isOperatorFor(address,address)\":{\"details\":\"See {IERC777-isOperatorFor}.\"},\"name()\":{\"details\":\"See {IERC777-name}.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorBurn}.    * Currently not supported\"},\"operatorRedeem(address,uint256,bytes,bytes)\":{\"details\":\"Allows an operator to redeem tokens for the underlying asset on behalf of a user.    * Emits {Redeemed} and {Transfer} events.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorSend}.    * Emits {Sent} and {Transfer} events.\"},\"pool()\":{\"return\":\"The address of the pool contract\"},\"poolMint(uint256)\":{\"params\":{\"amount\":\"The amount that was minted\"}},\"poolRedeem(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to redeem\",\"from\":\"The address from which to redeem tokens\"}},\"recipientWhitelistEnabled()\":{\"return\":\"True if whitelist enabled, false otherwise.\"},\"recipientWhitelisted(address)\":{\"return\":\"True if the recipient has been whitelisted, false otherwise.\"},\"redeem(uint256,bytes)\":{\"details\":\"Allows a user to withdraw their tokens as the underlying asset.    * Also emits a {Transfer} event for ERC20 compatibility.\"},\"revokeOperator(address)\":{\"details\":\"See {IERC777-revokeOperator}.\"},\"send(address,uint256,bytes)\":{\"details\":\"See {IERC777-send}.    * Also emits a {Transfer} event for ERC20 compatibility.\"},\"setRecipientWhitelistEnabled(bool)\":{\"params\":{\"_enabled\":\"True if whitelisting should be enabled, false otherwise\"}},\"setRecipientWhitelisted(address,bool)\":{\"params\":{\"_recipient\":\"The recipient to whitelist\",\"_whitelisted\":\"True if the recipient should be whitelisted, false otherwise\"}},\"symbol()\":{\"details\":\"See {IERC777-symbol}.\"},\"totalSupply()\":{\"details\":\"See {IERC777-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.    * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract.    * Also emits a {Sent} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.  * Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators).  * Emits {Sent}, {Transfer} and {Approval} events.\"}},\"title\":\"RecipientWhitelistPoolToken\"},\"userdoc\":{\"methods\":{\"init(string,string,address[],address)\":{\"notice\":\"Initializes the PoolToken.\"},\"init(string,string,address[],address,uint8)\":{\"notice\":\"Initializes the PoolToken.\"},\"pool()\":{\"notice\":\"Returns the address of the Pool contract\"},\"poolMint(uint256)\":{\"notice\":\"Called by the associated Pool to emit `Mint` events.\"},\"poolRedeem(address,uint256)\":{\"notice\":\"Calls the ERC777 transfer hook, and emits Redeemed and Transfer.  Can only be called by the Pool contract.\"},\"recipientWhitelistEnabled()\":{\"notice\":\"Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens. Otherwise if the whitelist is not enabled anyone is able to receive tokens.\"},\"recipientWhitelisted(address)\":{\"notice\":\"Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not.\"},\"setRecipientWhitelistEnabled(bool)\":{\"notice\":\"Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin.\"},\"setRecipientWhitelisted(address,bool)\":{\"notice\":\"Sets whether the recipient should be whitelisted.  Only callable by the Pool admin.\"}},\"notice\":\"Allows the pool admins to only allow token transfers to particular addresses.\"}},\"settings\":{\"compilationTarget\":{\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/RecipientWhitelistPoolTokenDecimals.sol\":\"RecipientWhitelistPoolTokenDecimals\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/BasePool.sol\":{\"keccak256\":\"0x9020308e3a615f59bb2d01b91150a2b3e463268a53d1fd7e687cf024d4f7a9d0\",\"urls\":[\"bzz-raw://cc85dcade9f882befa8062997718a06719ae8a6f1342227ccaa7c74c93b06463\",\"dweb:/ipfs/QmVvWMgFueyqgFoxwsf7f3bDoMKSKfbePVAuNkrsm6PJXo\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/Blocklock.sol\":{\"keccak256\":\"0x158e97130210f3580c43fce4ce288ea17e6d5f9d58a325b40402d889db00942e\",\"urls\":[\"bzz-raw://c1eddcab7465c39306d2ab91b2cc087bc7853dc7f667f0962934424ca0005196\",\"dweb:/ipfs/QmZFFnDcssFD1Xds1RmRvbWSbNjoioGZiP6sHKUV8SqCk9\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/DrawManager.sol\":{\"keccak256\":\"0xb90436524adbc8d8540ceb1a46b02b784b36dc96da64590b2b17e8e162327a11\",\"urls\":[\"bzz-raw://feaa738fc2f23700a0fb08b8c3841e24af443e3e282bed4ec99f2bbf9fc8aa85\",\"dweb:/ipfs/QmNswHbzyR3MRtTPAJ2DVaVnRLstNQNf7n3C7xrs89LKu6\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/PoolToken.sol\":{\"keccak256\":\"0xfe844eff920f3adf328286ff1bf531b6e586b575f82810123e72eca9235c1693\",\"urls\":[\"bzz-raw://f5d80d253f279c451870d9ed670179d9169a91ecf36dcfa00f95b7383df84ee0\",\"dweb:/ipfs/Qmd87yqYVzDYvXVQRogamyr8HtDVnCZeDFmqzhDyyfPpjk\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/PoolTokenDecimals.sol\":{\"keccak256\":\"0xf2eb61157ca26adbd71fce4f77719d82b8e4e62cee80ca0485e890279d0171e0\",\"urls\":[\"bzz-raw://1a4740d695253b5d83a052350a04df4c6b135345a33165bac6ac4f8d52a215ba\",\"dweb:/ipfs/Qma7UjedzyvWNpGsBaECx3xCXGcadzo5t8YAZXXWd832mL\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/RecipientWhitelistPoolTokenDecimals.sol\":{\"keccak256\":\"0x719012a99343c29424ff47b31d04a1211225058169bcdb02aaaf03a651b7dcc9\",\"urls\":[\"bzz-raw://f86bb97ba28146ae0dc24af01e17e169666d006b2b1ea297ef1f6b5bd8ee2f5c\",\"dweb:/ipfs/QmRxevCdsm1FpwL5ZguXHmio9QQfbizqD7d9YF8obJfRD7\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/UniformRandomNumber.sol\":{\"keccak256\":\"0x3da93664cd691eeab755215900bf807b9eda48675f6a3352c48f00c76d64c0fe\",\"urls\":[\"bzz-raw://395e8565cbd4bcf2b52f2ca54f57bd698b0aafa9a3cb2c2529fd365aa5377001\",\"dweb:/ipfs/QmeYh6NZTNjwvmCWx2HhPpK7aKruckjffcqdXkYRbb1uBX\"]},\"/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/compound/ICErc20.sol\":{\"keccak256\":\"0xd3179b29bdebb875acd0f6785089865665a77a7ebef7af49148ef570b5aa3299\",\"urls\":[\"bzz-raw://76445d294ee21c23039e42464c4e6cb4e7ad4670ffdd1fb9e7831abfa22bd0c3\",\"dweb:/ipfs/QmXGHtodEpTBMMd2yzPaKme758rVbjub4oYwg2tXSYp5Jp\"]},\"@deltacamp/kleros/contracts/data-structures/SortitionSumTreeFactory.sol\":{\"keccak256\":\"0x42614530f33b32e10cba4b1de0c3ecf6ff2e58599d8ff7ff1556052df02546d1\",\"urls\":[\"bzz-raw://505e577de7d8df1dc385e88109e64786c2224c5567896f4155b99534f9fc57b5\",\"dweb:/ipfs/QmQLLX6ZNxsjDEMzsBxASw9j1WTRetDzmZDJVdDmDao81Y\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x03c69b91f23efafb5d460b32520ac5066a084347733de3078cf2ba9b33397945\",\"urls\":[\"bzz-raw://2bed1580fb9b2ea946b2709cfccdc43aa2ed0089f61fb94201f385b297d027c2\",\"dweb:/ipfs/QmR2ogAcEAAiM5A4gHFTiQemYuZpVriei5Ud26j4YSQcfc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x01d1e2116e2d3a45d066969cf500da0648cb4903b885589021eaeb89f325d70f\",\"urls\":[\"bzz-raw://6783602f84db63a7fd140df918cd12b91d56a57b1f90b1f5f25798c3d7602987\",\"dweb:/ipfs/QmbDjeBQQguEsQWsfSd6WeKD5hGDhBdUFUX9KHMy3w5evz\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x6b097bc7c7762b5ad4a7447755e3654ada71d1c10f40c0ad5a4f820892f67edf\",\"urls\":[\"bzz-raw://299e4189bf254f1df707ad2366ed41c91440eb58b6e937e46b7b349ba1124afb\",\"dweb:/ipfs/QmcQHnb9mZ3ibkzpsUfyCYobavoS5gwPhPBasomxNnsycj\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0xabd5c2413dd920a9737db506fd8691e147f010fe30e3cef33a6a2c89288f15f3\",\"urls\":[\"bzz-raw://6a3165a338de13310cf58d9e2be4afc2c7ddf44beb3a2115e5cc43286553cf65\",\"dweb:/ipfs/QmNPNSWc5yX5D3gkZnzd95JX2r2L87iSWVu8CbundMj94n\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]},\"fixidity/contracts/FixidityLib.sol\":{\"keccak256\":\"0x4c7bbef8a69774e26fd25e3b22e323ec2cf7a5597de19ad525949db97b8e5ec3\",\"urls\":[\"bzz-raw://76ff3484d58b722e62b6c8b705ed8f67e92fd0ed1f3d41033f20f84efa8da2c0\",\"dweb:/ipfs/QmTtJ75geNDPcxEG66dWsvh5u3PF9xz2D7LAjqArTJaqwG\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506131b0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063959b8c3f1161010f578063d7d5b928116100a2578063e77c646d11610071578063e77c646d14610b39578063fad8b32a14610bae578063fc673c4f14610bd4578063fe9d930314610ca7576101e5565b8063d7d5b9281461084e578063d95b637114610921578063dd62ed3e1461094f578063e3d7b3081461097d576101e5565b8063a457c2d7116100de578063a457c2d7146107a9578063a884b930146107d5578063a9059cbb146107f4578063c8cb23f814610820576101e5565b8063959b8c3f146106db57806395d89b41146107015780639bd9bbc614610709578063a35947091461078c576101e5565b8063313ce56711610187578063625cbfae11610156578063625cbfae1461041957806362ad1b831461042157806370a08231146104ff57806388a8a91914610525576101e5565b8063313ce567146103a157806339509351146103bf5780634bf67fa6146103eb578063556f0dc714610411576101e5565b806314274ad9116101c357806314274ad9146102ff57806316f0115b1461032d57806318160ddd1461035157806323b872dd1461036b576101e5565b806306e48538146101ea57806306fdde0314610242578063095ea7b3146102bf575b600080fd5b6101f2610cde565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561022e578181015183820152602001610216565b505050509050019250505060405180910390f35b61024a610d41565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028457818101518382015260200161026c565b50505050905090810190601f1680156102b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102eb600480360360408110156102d557600080fd5b506001600160a01b038135169060200135610dce565b604080519115158252519081900360200190f35b61032b6004803603604081101561031557600080fd5b506001600160a01b038135169060200135610de6565b005b610335610ef7565b604080516001600160a01b039092168252519081900360200190f35b610359610f06565b60408051918252519081900360200190f35b6102eb6004803603606081101561038157600080fd5b506001600160a01b03813581169160208101359091169060400135610f7c565b6103a9611126565b6040805160ff9092168252519081900360200190f35b6102eb600480360360408110156103d557600080fd5b506001600160a01b038135169060200135611136565b6102eb6004803603602081101561040157600080fd5b50356001600160a01b031661117b565b610359611199565b6102eb61119e565b61032b600480360360a081101561043757600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561047157600080fd5b82018360208201111561048357600080fd5b803590602001918460018302840111600160201b831117156104a457600080fd5b919390929091602081019035600160201b8111156104c157600080fd5b8201836020820111156104d357600080fd5b803590602001918460018302840111600160201b831117156104f457600080fd5b5090925090506111ae565b6103596004803603602081101561051557600080fd5b50356001600160a01b0316611282565b61032b6004803603608081101561053b57600080fd5b810190602081018135600160201b81111561055557600080fd5b82018360208201111561056757600080fd5b803590602001918460018302840111600160201b8311171561058857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156105da57600080fd5b8201836020820111156105ec57600080fd5b803590602001918460018302840111600160201b8311171561060d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561065f57600080fd5b82018360208201111561067157600080fd5b803590602001918460208302840111600160201b8311171561069257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506113059050565b61032b600480360360208110156106f157600080fd5b50356001600160a01b03166113b9565b61024a6114c6565b61032b6004803603606081101561071f57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561074e57600080fd5b82018360208201111561076057600080fd5b803590602001918460018302840111600160201b8311171561078157600080fd5b509092509050611527565b61032b600480360360208110156107a257600080fd5b503561157e565b6102eb600480360360408110156107bf57600080fd5b506001600160a01b03813516906020013561160b565b61032b600480360360208110156107eb57600080fd5b50351515611673565b6102eb6004803603604081101561080a57600080fd5b506001600160a01b03813516906020013561179d565b61032b6004803603604081101561083657600080fd5b506001600160a01b0381351690602001351515611885565b61032b6004803603608081101561086457600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561089357600080fd5b8201836020820111156108a557600080fd5b803590602001918460018302840111600160201b831117156108c657600080fd5b919390929091602081019035600160201b8111156108e357600080fd5b8201836020820111156108f557600080fd5b803590602001918460018302840111600160201b8311171561091657600080fd5b5090925090506119ba565b6102eb6004803603604081101561093757600080fd5b506001600160a01b0381358116916020013516611a8c565b6103596004803603604081101561096557600080fd5b506001600160a01b0381358116916020013516611b2e565b61032b600480360360a081101561099357600080fd5b810190602081018135600160201b8111156109ad57600080fd5b8201836020820111156109bf57600080fd5b803590602001918460018302840111600160201b831117156109e057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610a3257600080fd5b820183602082011115610a4457600080fd5b803590602001918460018302840111600160201b83111715610a6557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610ab757600080fd5b820183602082011115610ac957600080fd5b803590602001918460208302840111600160201b83111715610aea57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b03169250506020013560ff16611b59565b61032b60048036036040811015610b4f57600080fd5b81359190810190604081016020820135600160201b811115610b7057600080fd5b820183602082011115610b8257600080fd5b803590602001918460018302840111600160201b83111715610ba357600080fd5b509092509050611c0c565b61032b60048036036020811015610bc457600080fd5b50356001600160a01b0316611c61565b61032b60048036036080811015610bea57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610c1957600080fd5b820183602082011115610c2b57600080fd5b803590602001918460018302840111600160201b83111715610c4c57600080fd5b919390929091602081019035600160201b811115610c6957600080fd5b820183602082011115610c7b57600080fd5b803590602001918460018302840111600160201b83111715610c9c57600080fd5b509092509050611d70565b61032b60048036036040811015610cbd57600080fd5b81359190810190604081016020820135600160201b811115610c6957600080fd5b60606035805480602002602001604051908101604052809291908181526020018280548015610d3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d18575b505050505090505b90565b60338054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d365780601f10610da257610100808354040283529160200191610d36565b820191906000526020600020905b815481529060010190602001808311610db057509395945050505050565b600033610ddc818585611db4565b5060019392505050565b603a546001600160a01b03163314610e3b576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bdbdb9b1e4b5c1bdbdb606a1b604482015290519081900360640190fd5b610e6882836000846040518060200160405280600081525060405180602001604052806000815250611e67565b60408051828152606060208201819052600090820181905260a082840181905282015290516001600160a01b0384169182917f1f58e3485c3f6fc2bddf52e2bd0d82ad5c19e1ac9ab403b1aa9f0a1794d2bfb69181900360e00190a36040805182815290516000916001600160a01b0385169160008051602061315c8339815191529181900360200190a35050565b603a546001600160a01b031690565b603a5460408051633a3c267d60e21b815290516000926001600160a01b03169163e8f099f4916004808301926020929190829003018186803b158015610f4b57600080fd5b505afa158015610f5f573d6000803e3d6000fd5b505050506040513d6020811015610f7557600080fd5b5051905090565b60006001600160a01b038316610fcd576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c546f6b656e2f746f2d7a65726f60781b604482015290519081900360640190fd5b6001600160a01b03841661101e576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b600033905061104f818686866040518060200160405280600081525060405180602001604052806000815250611e67565b61107b818686866040518060200160405280600081525060405180602001604052806000815250611ef6565b6040805180820182526016815275506f6f6c546f6b656e2f6578636565642d616c6c6f7760501b6020808301919091526001600160a01b038089166000908152603983528481209186168152915291909120546110ed91879184916110e89190889063ffffffff6120e316565b611db4565b61111b818686866040518060200160405280600081525060405180602001604052806000815250600061217a565b506001949350505050565b603a54600160a01b900460ff1690565b3360008181526039602090815260408083206001600160a01b038716845290915281205490916111729185906110e8908663ffffffff61243016565b50600192915050565b6001600160a01b03166000908152603b602052604090205460ff1690565b600190565b603a54600160a81b900460ff1690565b6111b83388611a8c565b611202576040805162461bcd60e51b81526020600482015260166024820152752837b7b62a37b5b2b717b737ba16b7b832b930ba37b960511b604482015290519081900360640190fd5b6112793388888888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061248a92505050565b50505050505050565b603a54604080516379f0877160e01b81526001600160a01b038481166004830152915160009392909216916379f0877191602480820192602092909190829003018186803b1580156112d357600080fd5b505afa1580156112e7573d6000803e3d6000fd5b505050506040513d60208110156112fd57600080fd5b505192915050565b600054610100900460ff168061131e575061131e612556565b8061132c575060005460ff16155b6113675760405162461bcd60e51b815260040180806020018281038252602e81526020018061312e602e913960400191505060405180910390fd5b600054610100900460ff16158015611392576000805460ff1961ff0019909116610100171660011790555b6113a085858585601261255c565b80156113b2576000805461ff00191690555b5050505050565b336001600160a01b038216141561140d576040805162461bcd60e51b81526020600482015260136024820152722837b7b62a37b5b2b717b0baba3416b9b2b63360691b604482015290519081900360640190fd5b6001600160a01b03811660009081526036602052604090205460ff161561145e573360009081526038602090815260408083206001600160a01b03851684529091529020805460ff1916905561148d565b3360009081526037602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b60348054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d365780601f10610da257610100808354040283529160200191610d36565b6115783333868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506040805160208101909152908152925061248a915050565b50505050565b603a546001600160a01b031633146115d3576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bdbdb9b1e4b5c1bdbdb606a1b604482015290519081900360640190fd5b603a54604080516020808201835260008083528351918201909352918252611608926001600160a01b031691829185916125e4565b50565b6040805180820182526012815271506f6f6c546f6b656e2f6e6567617469766560701b602080830191909152336000818152603983528481206001600160a01b038816825290925292812054909261117292909186916110e89190879063ffffffff6120e316565b61167b610ef7565b6001600160a01b03166324d7806c336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156116d057600080fd5b505afa1580156116e4573d6000803e3d6000fd5b505050506040513d60208110156116fa57600080fd5b5051611747576040805162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba2a37b5b2b717b4b996b0b236b4b760491b604482015290519081900360640190fd5b603a8054821515600160a81b810260ff60a81b1990921691909117909155604080519182525133917f643561a6454325dc43853b954eb9350a955ea80047c134c779c055bcbf459137919081900360200190a250565b60006001600160a01b0383166117fa576040805162461bcd60e51b815260206004820152601760248201527f506f6f6c546f6b656e2f7472616e736665722d7a65726f000000000000000000604482015290519081900360640190fd5b600033905061182b818286866040518060200160405280600081525060405180602001604052806000815250611e67565b611857818286866040518060200160405280600081525060405180602001604052806000815250611ef6565b610ddc818286866040518060200160405280600081525060405180602001604052806000815250600061217a565b61188d610ef7565b6001600160a01b03166324d7806c336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156118e257600080fd5b505afa1580156118f6573d6000803e3d6000fd5b505050506040513d602081101561190c57600080fd5b5051611959576040805162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba2a37b5b2b717b4b996b0b236b4b760491b604482015290519081900360640190fd5b6001600160a01b0382166000818152603b6020908152604091829020805460ff19168515159081179091558251908152915133927f0a40230cc5a9cbd3edc99d49ffd13beb7dc906030a2dde3b53a53b62fc8979cd92908290030190a35050565b6119c43387611a8c565b611a0e576040805162461bcd60e51b81526020600482015260166024820152752837b7b62a37b5b2b717b737ba16b7b832b930ba37b960511b604482015290519081900360640190fd5b611a8433878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b01819004810282018101909252898152925089915088908190840183828082843760009201919091525061273692505050565b505050505050565b6000816001600160a01b0316836001600160a01b03161480611af757506001600160a01b03831660009081526036602052604090205460ff168015611af757506001600160a01b0380831660009081526038602090815260408083209387168352929052205460ff16155b80611b2757506001600160a01b0380831660009081526037602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b03918216600090815260396020908152604080832093909416825291909152205490565b600054610100900460ff1680611b725750611b72612556565b80611b80575060005460ff16155b611bbb5760405162461bcd60e51b815260040180806020018281038252602e81526020018061312e602e913960400191505060405180910390fd5b600054610100900460ff16158015611be6576000805460ff1961ff0019909116610100171660011790555b611bf3868686868661255c565b8015611a84576000805461ff0019169055505050505050565b611c5c33338585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250612736915050565b505050565b6001600160a01b038116331415611cb7576040805162461bcd60e51b81526020600482015260156024820152742837b7b62a37b5b2b717b932bb37b5b296b9b2b63360591b604482015290519081900360640190fd5b6001600160a01b03811660009081526036602052604090205460ff1615611d0b573360009081526038602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611d37565b3360009081526037602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b6040805162461bcd60e51b8152602060048201526014602482015273141bdbdb151bdad95b8bdb9bcb5cdd5c1c1bdc9d60621b604482015290519081900360640190fd5b6001600160a01b038216611e05576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6001600160a01b03808416600081815260396020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b603a54600160a81b900460ff1615611ee8576001600160a01b0384161580611ea757506001600160a01b0384166000908152603b602052604090205460ff165b611ee8576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bdb9bdd0b5b1a5cdd609a1b604482015290519081900360640190fd5b611a84868686868686612969565b603a5460408051639e63a8c560e01b81526001600160a01b03888116600483015287811660248301526044820187905291519190921691639e63a8c59160648083019260209291908290030181600087803b158015611f5457600080fd5b505af1158015611f68573d6000803e3d6000fd5b505050506040513d6020811015611f7e57600080fd5b5050604080518481526060602082810182815286519284019290925285516001600160a01b03808a16958b821695918d16947f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987948b948b948b9490939290840191608085019187019080838360005b83811015612005578181015183820152602001611fed565b50505050905090810190601f1680156120325780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561206557818101518382015260200161204d565b50505050905090810190601f1680156120925780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a4836001600160a01b0316856001600160a01b031660008051602061315c833981519152856040518082815260200191505060405180910390a3505050505050565b600081848411156121725760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561213757818101518382015260200161211f565b50505050905090810190601f1680156121645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6040805163555ddc6560e11b81526001600160a01b03871660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b1580156121fe57600080fd5b505afa158015612212573d6000803e3d6000fd5b505050506040513d602081101561222857600080fd5b505190506001600160a01b038116156123bc57806001600160a01b03166223de298989898989896040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156122ed5781810151838201526020016122d5565b50505050905090810190601f16801561231a5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561234d578181015183820152602001612335565b50505050905090810190601f16801561237a5780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b15801561239f57600080fd5b505af11580156123b3573d6000803e3d6000fd5b50505050612426565b8115612426576123d4866001600160a01b0316612c72565b15612426576040805162461bcd60e51b815260206004820152601860248201527f506f6f6c546f6b656e2f6e6f2d72656369702d696e7465720000000000000000604482015290519081900360640190fd5b5050505050505050565b600082820183811015611b27576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0385166124db576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6001600160a01b03841661252a576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c546f6b656e2f746f2d7a65726f60781b604482015290519081900360640190fd5b612538868686868686611e67565b612546868686868686611ef6565b611a84868686868686600061217a565b303b1590565b61256885858585612cae565b60008160ff16116125c0576040805162461bcd60e51b815260206004820152601760248201527f506f6f6c546f6b656e2f646563696d616c732d7a65726f000000000000000000604482015290519081900360640190fd5b603a805460ff909216600160a01b0260ff60a01b1990921691909117905550505050565b836001600160a01b0316856001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d858585604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561266357818101518382015260200161264b565b50505050905090810190601f1680156126905780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156126c35781810151838201526020016126ab565b50505050905090810190601f1680156126f05780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a36040805184815290516001600160a01b0386169160009160008051602061315c8339815191529181900360200190a35050505050565b6001600160a01b038416612787576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b61279685856000868686611e67565b603a546040805163a423cd2960e01b81526001600160a01b038781166004830152602482018790529151919092169163a423cd299160448083019260209291908290030181600087803b1580156127ec57600080fd5b505af1158015612800573d6000803e3d6000fd5b505050506040513d602081101561281657600080fd5b5050604080518481526060602082810182815286519284019290925285516001600160a01b03808a1695908b16947f1f58e3485c3f6fc2bddf52e2bd0d82ad5c19e1ac9ab403b1aa9f0a1794d2bfb6948a948a948a9484019160808501919087019080838360005b8381101561289657818101518382015260200161287e565b50505050905090810190601f1680156128c35780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156128f65781810151838201526020016128de565b50505050905090810190601f1680156129235780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a36040805184815290516000916001600160a01b0387169160008051602061315c8339815191529181900360200190a35050505050565b603a60009054906101000a90046001600160a01b03166001600160a01b031663a4e2d6346040518163ffffffff1660e01b815260040160206040518083038186803b1580156129b757600080fd5b505afa1580156129cb573d6000803e3d6000fd5b505050506040513d60208110156129e157600080fd5b505115612a2b576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bda5ccb5b1bd8dad959606a1b604482015290519081900360640190fd5b6040805163555ddc6560e11b81526001600160a01b03871660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b158015612aaf57600080fd5b505afa158015612ac3573d6000803e3d6000fd5b505050506040513d6020811015612ad957600080fd5b505190506001600160a01b0381161561127957806001600160a01b03166375ab97828888888888886040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015612b9f578181015183820152602001612b87565b50505050905090810190601f168015612bcc5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612bff578181015183820152602001612be7565b50505050905090810190601f168015612c2c5780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b158015612c5157600080fd5b505af1158015612c65573d6000803e3d6000fd5b5050505050505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590612ca65750808214155b949350505050565b600054610100900460ff1680612cc75750612cc7612556565b80612cd5575060005460ff16155b612d105760405162461bcd60e51b815260040180806020018281038252602e81526020018061312e602e913960400191505060405180910390fd5b600054610100900460ff16158015612d3b576000805460ff1961ff0019909116610100171660011790555b8451612d7f576040805162461bcd60e51b815260206004820152600e60248201526d506f6f6c546f6b656e2f6e616d6560901b604482015290519081900360640190fd5b8351612dc5576040805162461bcd60e51b815260206004820152601060248201526f141bdbdb151bdad95b8bdcde5b589bdb60821b604482015290519081900360640190fd5b6001600160a01b038216612e16576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f706f6f6c2d7a65726f60681b604482015290519081900360640190fd5b8451612e29906033906020880190613010565b508351612e3d906034906020870190613010565b50603a80546001600160a01b0319166001600160a01b0384161790558251612e6c90603590602086019061308e565b5060005b603554811015612ec95760016036600060358481548110612e8d57fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101612e70565b50604080516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad24916329965a1d91606480830192600092919082900301818387803b158015612f4957600080fd5b505af1158015612f5d573d6000803e3d6000fd5b5050604080516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad2493506329965a1d9250606480830192600092919082900301818387803b158015612fe057600080fd5b505af1158015612ff4573d6000803e3d6000fd5b5050505080156113b2576000805461ff00191690555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061305157805160ff191683800117855561307e565b8280016001018555821561307e579182015b8281111561307e578251825591602001919060010190613063565b5061308a9291506130ef565b5090565b8280548282559060005260206000209081019282156130e3579160200282015b828111156130e357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906130ae565b5061308a929150613109565b610d3e91905b8082111561308a57600081556001016130f5565b610d3e91905b8082111561308a5780546001600160a01b031916815560010161310f56fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa265627a7a72315820c5dc2bb8146e692feb24ccab84e95f10843e5c44f7c3fe03dbd6bb1c2658415f64736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c8063959b8c3f1161010f578063d7d5b928116100a2578063e77c646d11610071578063e77c646d14610b39578063fad8b32a14610bae578063fc673c4f14610bd4578063fe9d930314610ca7576101e5565b8063d7d5b9281461084e578063d95b637114610921578063dd62ed3e1461094f578063e3d7b3081461097d576101e5565b8063a457c2d7116100de578063a457c2d7146107a9578063a884b930146107d5578063a9059cbb146107f4578063c8cb23f814610820576101e5565b8063959b8c3f146106db57806395d89b41146107015780639bd9bbc614610709578063a35947091461078c576101e5565b8063313ce56711610187578063625cbfae11610156578063625cbfae1461041957806362ad1b831461042157806370a08231146104ff57806388a8a91914610525576101e5565b8063313ce567146103a157806339509351146103bf5780634bf67fa6146103eb578063556f0dc714610411576101e5565b806314274ad9116101c357806314274ad9146102ff57806316f0115b1461032d57806318160ddd1461035157806323b872dd1461036b576101e5565b806306e48538146101ea57806306fdde0314610242578063095ea7b3146102bf575b600080fd5b6101f2610cde565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561022e578181015183820152602001610216565b505050509050019250505060405180910390f35b61024a610d41565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028457818101518382015260200161026c565b50505050905090810190601f1680156102b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102eb600480360360408110156102d557600080fd5b506001600160a01b038135169060200135610dce565b604080519115158252519081900360200190f35b61032b6004803603604081101561031557600080fd5b506001600160a01b038135169060200135610de6565b005b610335610ef7565b604080516001600160a01b039092168252519081900360200190f35b610359610f06565b60408051918252519081900360200190f35b6102eb6004803603606081101561038157600080fd5b506001600160a01b03813581169160208101359091169060400135610f7c565b6103a9611126565b6040805160ff9092168252519081900360200190f35b6102eb600480360360408110156103d557600080fd5b506001600160a01b038135169060200135611136565b6102eb6004803603602081101561040157600080fd5b50356001600160a01b031661117b565b610359611199565b6102eb61119e565b61032b600480360360a081101561043757600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561047157600080fd5b82018360208201111561048357600080fd5b803590602001918460018302840111600160201b831117156104a457600080fd5b919390929091602081019035600160201b8111156104c157600080fd5b8201836020820111156104d357600080fd5b803590602001918460018302840111600160201b831117156104f457600080fd5b5090925090506111ae565b6103596004803603602081101561051557600080fd5b50356001600160a01b0316611282565b61032b6004803603608081101561053b57600080fd5b810190602081018135600160201b81111561055557600080fd5b82018360208201111561056757600080fd5b803590602001918460018302840111600160201b8311171561058857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156105da57600080fd5b8201836020820111156105ec57600080fd5b803590602001918460018302840111600160201b8311171561060d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561065f57600080fd5b82018360208201111561067157600080fd5b803590602001918460208302840111600160201b8311171561069257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506113059050565b61032b600480360360208110156106f157600080fd5b50356001600160a01b03166113b9565b61024a6114c6565b61032b6004803603606081101561071f57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561074e57600080fd5b82018360208201111561076057600080fd5b803590602001918460018302840111600160201b8311171561078157600080fd5b509092509050611527565b61032b600480360360208110156107a257600080fd5b503561157e565b6102eb600480360360408110156107bf57600080fd5b506001600160a01b03813516906020013561160b565b61032b600480360360208110156107eb57600080fd5b50351515611673565b6102eb6004803603604081101561080a57600080fd5b506001600160a01b03813516906020013561179d565b61032b6004803603604081101561083657600080fd5b506001600160a01b0381351690602001351515611885565b61032b6004803603608081101561086457600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561089357600080fd5b8201836020820111156108a557600080fd5b803590602001918460018302840111600160201b831117156108c657600080fd5b919390929091602081019035600160201b8111156108e357600080fd5b8201836020820111156108f557600080fd5b803590602001918460018302840111600160201b8311171561091657600080fd5b5090925090506119ba565b6102eb6004803603604081101561093757600080fd5b506001600160a01b0381358116916020013516611a8c565b6103596004803603604081101561096557600080fd5b506001600160a01b0381358116916020013516611b2e565b61032b600480360360a081101561099357600080fd5b810190602081018135600160201b8111156109ad57600080fd5b8201836020820111156109bf57600080fd5b803590602001918460018302840111600160201b831117156109e057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610a3257600080fd5b820183602082011115610a4457600080fd5b803590602001918460018302840111600160201b83111715610a6557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610ab757600080fd5b820183602082011115610ac957600080fd5b803590602001918460208302840111600160201b83111715610aea57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b03169250506020013560ff16611b59565b61032b60048036036040811015610b4f57600080fd5b81359190810190604081016020820135600160201b811115610b7057600080fd5b820183602082011115610b8257600080fd5b803590602001918460018302840111600160201b83111715610ba357600080fd5b509092509050611c0c565b61032b60048036036020811015610bc457600080fd5b50356001600160a01b0316611c61565b61032b60048036036080811015610bea57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610c1957600080fd5b820183602082011115610c2b57600080fd5b803590602001918460018302840111600160201b83111715610c4c57600080fd5b919390929091602081019035600160201b811115610c6957600080fd5b820183602082011115610c7b57600080fd5b803590602001918460018302840111600160201b83111715610c9c57600080fd5b509092509050611d70565b61032b60048036036040811015610cbd57600080fd5b81359190810190604081016020820135600160201b811115610c6957600080fd5b60606035805480602002602001604051908101604052809291908181526020018280548015610d3657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d18575b505050505090505b90565b60338054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d365780601f10610da257610100808354040283529160200191610d36565b820191906000526020600020905b815481529060010190602001808311610db057509395945050505050565b600033610ddc818585611db4565b5060019392505050565b603a546001600160a01b03163314610e3b576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bdbdb9b1e4b5c1bdbdb606a1b604482015290519081900360640190fd5b610e6882836000846040518060200160405280600081525060405180602001604052806000815250611e67565b60408051828152606060208201819052600090820181905260a082840181905282015290516001600160a01b0384169182917f1f58e3485c3f6fc2bddf52e2bd0d82ad5c19e1ac9ab403b1aa9f0a1794d2bfb69181900360e00190a36040805182815290516000916001600160a01b0385169160008051602061315c8339815191529181900360200190a35050565b603a546001600160a01b031690565b603a5460408051633a3c267d60e21b815290516000926001600160a01b03169163e8f099f4916004808301926020929190829003018186803b158015610f4b57600080fd5b505afa158015610f5f573d6000803e3d6000fd5b505050506040513d6020811015610f7557600080fd5b5051905090565b60006001600160a01b038316610fcd576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c546f6b656e2f746f2d7a65726f60781b604482015290519081900360640190fd5b6001600160a01b03841661101e576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b600033905061104f818686866040518060200160405280600081525060405180602001604052806000815250611e67565b61107b818686866040518060200160405280600081525060405180602001604052806000815250611ef6565b6040805180820182526016815275506f6f6c546f6b656e2f6578636565642d616c6c6f7760501b6020808301919091526001600160a01b038089166000908152603983528481209186168152915291909120546110ed91879184916110e89190889063ffffffff6120e316565b611db4565b61111b818686866040518060200160405280600081525060405180602001604052806000815250600061217a565b506001949350505050565b603a54600160a01b900460ff1690565b3360008181526039602090815260408083206001600160a01b038716845290915281205490916111729185906110e8908663ffffffff61243016565b50600192915050565b6001600160a01b03166000908152603b602052604090205460ff1690565b600190565b603a54600160a81b900460ff1690565b6111b83388611a8c565b611202576040805162461bcd60e51b81526020600482015260166024820152752837b7b62a37b5b2b717b737ba16b7b832b930ba37b960511b604482015290519081900360640190fd5b6112793388888888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061248a92505050565b50505050505050565b603a54604080516379f0877160e01b81526001600160a01b038481166004830152915160009392909216916379f0877191602480820192602092909190829003018186803b1580156112d357600080fd5b505afa1580156112e7573d6000803e3d6000fd5b505050506040513d60208110156112fd57600080fd5b505192915050565b600054610100900460ff168061131e575061131e612556565b8061132c575060005460ff16155b6113675760405162461bcd60e51b815260040180806020018281038252602e81526020018061312e602e913960400191505060405180910390fd5b600054610100900460ff16158015611392576000805460ff1961ff0019909116610100171660011790555b6113a085858585601261255c565b80156113b2576000805461ff00191690555b5050505050565b336001600160a01b038216141561140d576040805162461bcd60e51b81526020600482015260136024820152722837b7b62a37b5b2b717b0baba3416b9b2b63360691b604482015290519081900360640190fd5b6001600160a01b03811660009081526036602052604090205460ff161561145e573360009081526038602090815260408083206001600160a01b03851684529091529020805460ff1916905561148d565b3360009081526037602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b60348054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d365780601f10610da257610100808354040283529160200191610d36565b6115783333868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506040805160208101909152908152925061248a915050565b50505050565b603a546001600160a01b031633146115d3576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bdbdb9b1e4b5c1bdbdb606a1b604482015290519081900360640190fd5b603a54604080516020808201835260008083528351918201909352918252611608926001600160a01b031691829185916125e4565b50565b6040805180820182526012815271506f6f6c546f6b656e2f6e6567617469766560701b602080830191909152336000818152603983528481206001600160a01b038816825290925292812054909261117292909186916110e89190879063ffffffff6120e316565b61167b610ef7565b6001600160a01b03166324d7806c336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156116d057600080fd5b505afa1580156116e4573d6000803e3d6000fd5b505050506040513d60208110156116fa57600080fd5b5051611747576040805162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba2a37b5b2b717b4b996b0b236b4b760491b604482015290519081900360640190fd5b603a8054821515600160a81b810260ff60a81b1990921691909117909155604080519182525133917f643561a6454325dc43853b954eb9350a955ea80047c134c779c055bcbf459137919081900360200190a250565b60006001600160a01b0383166117fa576040805162461bcd60e51b815260206004820152601760248201527f506f6f6c546f6b656e2f7472616e736665722d7a65726f000000000000000000604482015290519081900360640190fd5b600033905061182b818286866040518060200160405280600081525060405180602001604052806000815250611e67565b611857818286866040518060200160405280600081525060405180602001604052806000815250611ef6565b610ddc818286866040518060200160405280600081525060405180602001604052806000815250600061217a565b61188d610ef7565b6001600160a01b03166324d7806c336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156118e257600080fd5b505afa1580156118f6573d6000803e3d6000fd5b505050506040513d602081101561190c57600080fd5b5051611959576040805162461bcd60e51b81526020600482015260176024820152762bb434ba32b634b9ba2a37b5b2b717b4b996b0b236b4b760491b604482015290519081900360640190fd5b6001600160a01b0382166000818152603b6020908152604091829020805460ff19168515159081179091558251908152915133927f0a40230cc5a9cbd3edc99d49ffd13beb7dc906030a2dde3b53a53b62fc8979cd92908290030190a35050565b6119c43387611a8c565b611a0e576040805162461bcd60e51b81526020600482015260166024820152752837b7b62a37b5b2b717b737ba16b7b832b930ba37b960511b604482015290519081900360640190fd5b611a8433878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b01819004810282018101909252898152925089915088908190840183828082843760009201919091525061273692505050565b505050505050565b6000816001600160a01b0316836001600160a01b03161480611af757506001600160a01b03831660009081526036602052604090205460ff168015611af757506001600160a01b0380831660009081526038602090815260408083209387168352929052205460ff16155b80611b2757506001600160a01b0380831660009081526037602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b03918216600090815260396020908152604080832093909416825291909152205490565b600054610100900460ff1680611b725750611b72612556565b80611b80575060005460ff16155b611bbb5760405162461bcd60e51b815260040180806020018281038252602e81526020018061312e602e913960400191505060405180910390fd5b600054610100900460ff16158015611be6576000805460ff1961ff0019909116610100171660011790555b611bf3868686868661255c565b8015611a84576000805461ff0019169055505050505050565b611c5c33338585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250612736915050565b505050565b6001600160a01b038116331415611cb7576040805162461bcd60e51b81526020600482015260156024820152742837b7b62a37b5b2b717b932bb37b5b296b9b2b63360591b604482015290519081900360640190fd5b6001600160a01b03811660009081526036602052604090205460ff1615611d0b573360009081526038602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611d37565b3360009081526037602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b6040805162461bcd60e51b8152602060048201526014602482015273141bdbdb151bdad95b8bdb9bcb5cdd5c1c1bdc9d60621b604482015290519081900360640190fd5b6001600160a01b038216611e05576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6001600160a01b03808416600081815260396020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b603a54600160a81b900460ff1615611ee8576001600160a01b0384161580611ea757506001600160a01b0384166000908152603b602052604090205460ff165b611ee8576040805162461bcd60e51b815260206004820152600d60248201526c141bdbdb0bdb9bdd0b5b1a5cdd609a1b604482015290519081900360640190fd5b611a84868686868686612969565b603a5460408051639e63a8c560e01b81526001600160a01b03888116600483015287811660248301526044820187905291519190921691639e63a8c59160648083019260209291908290030181600087803b158015611f5457600080fd5b505af1158015611f68573d6000803e3d6000fd5b505050506040513d6020811015611f7e57600080fd5b5050604080518481526060602082810182815286519284019290925285516001600160a01b03808a16958b821695918d16947f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987948b948b948b9490939290840191608085019187019080838360005b83811015612005578181015183820152602001611fed565b50505050905090810190601f1680156120325780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561206557818101518382015260200161204d565b50505050905090810190601f1680156120925780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a4836001600160a01b0316856001600160a01b031660008051602061315c833981519152856040518082815260200191505060405180910390a3505050505050565b600081848411156121725760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561213757818101518382015260200161211f565b50505050905090810190601f1680156121645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6040805163555ddc6560e11b81526001600160a01b03871660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b1580156121fe57600080fd5b505afa158015612212573d6000803e3d6000fd5b505050506040513d602081101561222857600080fd5b505190506001600160a01b038116156123bc57806001600160a01b03166223de298989898989896040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156122ed5781810151838201526020016122d5565b50505050905090810190601f16801561231a5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561234d578181015183820152602001612335565b50505050905090810190601f16801561237a5780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b15801561239f57600080fd5b505af11580156123b3573d6000803e3d6000fd5b50505050612426565b8115612426576123d4866001600160a01b0316612c72565b15612426576040805162461bcd60e51b815260206004820152601860248201527f506f6f6c546f6b656e2f6e6f2d72656369702d696e7465720000000000000000604482015290519081900360640190fd5b5050505050505050565b600082820183811015611b27576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0385166124db576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b6001600160a01b03841661252a576040805162461bcd60e51b8152602060048201526011602482015270506f6f6c546f6b656e2f746f2d7a65726f60781b604482015290519081900360640190fd5b612538868686868686611e67565b612546868686868686611ef6565b611a84868686868686600061217a565b303b1590565b61256885858585612cae565b60008160ff16116125c0576040805162461bcd60e51b815260206004820152601760248201527f506f6f6c546f6b656e2f646563696d616c732d7a65726f000000000000000000604482015290519081900360640190fd5b603a805460ff909216600160a01b0260ff60a01b1990921691909117905550505050565b836001600160a01b0316856001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d858585604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561266357818101518382015260200161264b565b50505050905090810190601f1680156126905780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156126c35781810151838201526020016126ab565b50505050905090810190601f1680156126f05780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a36040805184815290516001600160a01b0386169160009160008051602061315c8339815191529181900360200190a35050505050565b6001600160a01b038416612787576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f66726f6d2d7a65726f60681b604482015290519081900360640190fd5b61279685856000868686611e67565b603a546040805163a423cd2960e01b81526001600160a01b038781166004830152602482018790529151919092169163a423cd299160448083019260209291908290030181600087803b1580156127ec57600080fd5b505af1158015612800573d6000803e3d6000fd5b505050506040513d602081101561281657600080fd5b5050604080518481526060602082810182815286519284019290925285516001600160a01b03808a1695908b16947f1f58e3485c3f6fc2bddf52e2bd0d82ad5c19e1ac9ab403b1aa9f0a1794d2bfb6948a948a948a9484019160808501919087019080838360005b8381101561289657818101518382015260200161287e565b50505050905090810190601f1680156128c35780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156128f65781810151838201526020016128de565b50505050905090810190601f1680156129235780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a36040805184815290516000916001600160a01b0387169160008051602061315c8339815191529181900360200190a35050505050565b603a60009054906101000a90046001600160a01b03166001600160a01b031663a4e2d6346040518163ffffffff1660e01b815260040160206040518083038186803b1580156129b757600080fd5b505afa1580156129cb573d6000803e3d6000fd5b505050506040513d60208110156129e157600080fd5b505115612a2b576040805162461bcd60e51b8152602060048201526013602482015272141bdbdb151bdad95b8bda5ccb5b1bd8dad959606a1b604482015290519081900360640190fd5b6040805163555ddc6560e11b81526001600160a01b03871660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201529051600091731820a4b7618bde71dce8cdc73aab6c95905fad249163aabbb8ca91604480820192602092909190829003018186803b158015612aaf57600080fd5b505afa158015612ac3573d6000803e3d6000fd5b505050506040513d6020811015612ad957600080fd5b505190506001600160a01b0381161561127957806001600160a01b03166375ab97828888888888886040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015612b9f578181015183820152602001612b87565b50505050905090810190601f168015612bcc5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015612bff578181015183820152602001612be7565b50505050905090810190601f168015612c2c5780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b158015612c5157600080fd5b505af1158015612c65573d6000803e3d6000fd5b5050505050505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590612ca65750808214155b949350505050565b600054610100900460ff1680612cc75750612cc7612556565b80612cd5575060005460ff16155b612d105760405162461bcd60e51b815260040180806020018281038252602e81526020018061312e602e913960400191505060405180910390fd5b600054610100900460ff16158015612d3b576000805460ff1961ff0019909116610100171660011790555b8451612d7f576040805162461bcd60e51b815260206004820152600e60248201526d506f6f6c546f6b656e2f6e616d6560901b604482015290519081900360640190fd5b8351612dc5576040805162461bcd60e51b815260206004820152601060248201526f141bdbdb151bdad95b8bdcde5b589bdb60821b604482015290519081900360640190fd5b6001600160a01b038216612e16576040805162461bcd60e51b8152602060048201526013602482015272506f6f6c546f6b656e2f706f6f6c2d7a65726f60681b604482015290519081900360640190fd5b8451612e29906033906020880190613010565b508351612e3d906034906020870190613010565b50603a80546001600160a01b0319166001600160a01b0384161790558251612e6c90603590602086019061308e565b5060005b603554811015612ec95760016036600060358481548110612e8d57fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101612e70565b50604080516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad24916329965a1d91606480830192600092919082900301818387803b158015612f4957600080fd5b505af1158015612f5d573d6000803e3d6000fd5b5050604080516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a602483015260448201529051731820a4b7618bde71dce8cdc73aab6c95905fad2493506329965a1d9250606480830192600092919082900301818387803b158015612fe057600080fd5b505af1158015612ff4573d6000803e3d6000fd5b5050505080156113b2576000805461ff00191690555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061305157805160ff191683800117855561307e565b8280016001018555821561307e579182015b8281111561307e578251825591602001919060010190613063565b5061308a9291506130ef565b5090565b8280548282559060005260206000209081019282156130e3579160200282015b828111156130e357825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906130ae565b5061308a929150613109565b610d3e91905b8082111561308a57600081556001016130f5565b610d3e91905b8082111561308a5780546001600160a01b031916815560010161310f56fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa265627a7a72315820c5dc2bb8146e692feb24ccab84e95f10843e5c44f7c3fe03dbd6bb1c2658415f64736f6c634300050c0032",
  "sourceMap": "875:3543:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;875:3543:9;;;;;;;",
  "deployedSourceMap": "875:3543:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;875:3543:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9515:109:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9515:109:6;;;;;;;;;;;;;;;;;5922:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5922:77:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11180:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;11180:172:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5639:235;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5639:235:6;;;;;;;;:::i;:::-;;5324:72;;;:::i;:::-;;;;-1:-1:-1;;;;;5324:72:6;;;;;;;;;;;;;;6619:96;;;:::i;:::-;;;;;;;;;;;;;;;;12960:588;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12960:588:6;;;;;;;;;;;;;;;;;:::i;3450:77:7:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11732:197:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;11732:197:6;;;;;;;;:::i;2384:126:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2384:126:9;-1:-1:-1;;;;;2384:126:9;;:::i;6490:74:6:-;;;:::i;2059:108:9:-;;;:::i;9728:323:6:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;9728:323:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;9728:323:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9728:323:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9728:323:6;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;9728:323:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9728:323:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;9728:323:6;;-1:-1:-1;9728:323:6;-1:-1:-1;9728:323:6;:::i;6767:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6767:117:6;-1:-1:-1;;;;;6767:117:6;;:::i;2027:214:7:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2027:214:7;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2027:214:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2027:214:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2027:214:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2027:214:7;;;;;;;;-1:-1:-1;2027:214:7;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;2027:214:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2027:214:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2027:214:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2027:214:7;;;;;;;;-1:-1:-1;2027:214:7;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;2027:214:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2027:214:7;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2027:214:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2027:214:7;;-1:-1:-1;;;2027:214:7;;-1:-1:-1;;;;;2027:214:7;;-1:-1:-1;2027:214:7;;-1:-1:-1;2027:214:7:i;8689:356:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8689:356:6;-1:-1:-1;;;;;8689:356:6;;:::i;6049:81::-;;;:::i;6999:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;6999:150:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6999:150:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6999:150:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;6999:150:6;;-1:-1:-1;6999:150:6;-1:-1:-1;6999:150:6;:::i;13668:122::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13668:122:6;;:::i;12399:229::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12399:229:6;;;;;;;;:::i;2698:168:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2698:168:9;;;;:::i;7369:395:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7369:395:6;;;;;;;;:::i;3115:216:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3115:216:9;;;;;;;;;;:::i;10429:262:6:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;10429:262:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10429:262:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10429:262:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10429:262:6;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10429:262:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10429:262:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;10429:262:6;;-1:-1:-1;10429:262:6;-1:-1:-1;10429:262:6;:::i;8338:290::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8338:290:6;;;;;;;;;;:::i;10920:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10920:130:6;;;;;;;;;;:::i;2558:240:7:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2558:240:7;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2558:240:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2558:240:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2558:240:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2558:240:7;;;;;;;;-1:-1:-1;2558:240:7;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;2558:240:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2558:240:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2558:240:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2558:240:7;;;;;;;;-1:-1:-1;2558:240:7;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;2558:240:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2558:240:7;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2558:240:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2558:240:7;;-1:-1:-1;;;2558:240:7;;-1:-1:-1;;;;;2558:240:7;;-1:-1:-1;;2558:240:7;;;;;;:::i;7923:124:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7923:124:6;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;7923:124:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7923:124:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;7923:124:6;;-1:-1:-1;7923:124:6;-1:-1:-1;7923:124:6;:::i;9103:352::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9103:352:6;-1:-1:-1;;;;;9103:352:6;;:::i;10143:124::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;10143:124:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10143:124:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10143:124:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10143:124:6;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10143:124:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10143:124:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;10143:124:6;;-1:-1:-1;10143:124:6;-1:-1:-1;10143:124:6;:::i;8190:91::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8190:91:6;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;9515:109:6;9564:16;9597:22;9590:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9590:29:6;;;;;;;;;;;;;;;;;;;;;;;9515:109;;:::o;5922:77::-;5989:5;5982:12;;;;;;;;-1:-1:-1;;5982:12:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5959:13;;5982:12;;5989:5;;5982:12;;5989:5;5982:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5982:12:6;;5922:77;-1:-1:-1;;;;;5922:77:6:o;11180:172::-;11247:4;11278:10;11296:32;11278:10;11313:7;11322:5;11296:8;:32::i;:::-;-1:-1:-1;11343:4:6;;11180:172;-1:-1:-1;;;11180:172:6:o;5639:235::-;19226:5;;-1:-1:-1;;;;;19226:5:6;19204:10;:28;19196:60;;;;;-1:-1:-1;;;19196:60:6;;;;;;;;;;;;-1:-1:-1;;;19196:60:6;;;;;;;;;;;;;;;5715:57;5733:4;5739;5753:1;5757:6;5715:57;;;;;;;;;;;;;;;;;;;;;;;;:17;:57::i;:::-;5786:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5786:36:6;;;;;;;;;;;;;;5835:34;;;;;;;;5858:1;;-1:-1:-1;;;;;5835:34:6;;;-1:-1:-1;;;;;;;;;;;5835:34:6;;;;;;;;5639:235;;:::o;5324:72::-;5386:5;;-1:-1:-1;;;;;5386:5:6;5324:72;:::o;6619:96::-;6687:5;;:23;;;-1:-1:-1;;;6687:23:6;;;;6663:7;;-1:-1:-1;;;;;6687:5:6;;:21;;:23;;;;;;;;;;;;;;:5;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;6687:23:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6687:23:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6687:23:6;;-1:-1:-1;6619:96:6;:::o;12960:588::-;13051:4;-1:-1:-1;;;;;13073:23:6;;13065:53;;;;;-1:-1:-1;;;13065:53:6;;;;;;;;;;;;-1:-1:-1;;;13065:53:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;13134:20:6;;13126:52;;;;;-1:-1:-1;;;13126:52:6;;;;;;;;;;;;-1:-1:-1;;;13126:52:6;;;;;;;;;;;;;;;13187:15;13205:10;13187:28;;13224:61;13242:7;13251:6;13259:9;13270:6;13224:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;13294:49;13300:7;13309:6;13317:9;13328:6;13294:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;13377:66;;;;;;;;;;;-1:-1:-1;;;13377:66:6;;;;;;;;-1:-1:-1;;;;;13377:19:6;;;-1:-1:-1;13377:19:6;;;:11;:19;;;;;:28;;;;;;;;;;;;13351:93;;13360:6;;13368:7;;13377:66;;:28;13410:6;;13377:66;:32;:66;:::i;:::-;13351:8;:93::i;:::-;13453:70;13473:7;13482:6;13490:9;13501:6;13453:70;;;;;;;;;;;;;;;;;;;;;;;;13517:5;13453:19;:70::i;:::-;-1:-1:-1;13539:4:6;;12960:588;-1:-1:-1;;;;12960:588:6:o;3450:77:7:-;3513:9;;-1:-1:-1;;;3513:9:7;;;;;3450:77::o;11732:197:6:-;11835:10;11812:4;11856:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;11856:32:6;;;;;;;;;;11812:4;;11826:79;;11847:7;;11856:48;;11893:10;11856:48;:36;:48;:::i;11826:79::-;-1:-1:-1;11920:4:6;11732:197;;;;:::o;2384:126:9:-;-1:-1:-1;;;;;2474:31:9;2455:4;2474:31;;;:19;:31;;;;;;;;;2384:126::o;6490:74:6:-;6558:1;6490:74;:::o;2059:108:9:-;2136:26;;-1:-1:-1;;;2136:26:9;;;;;2059:108::o;9728:323:6:-;9914:33;9928:10;9940:6;9914:13;:33::i;:::-;9906:68;;;;;-1:-1:-1;;;9906:68:6;;;;;;;;;;;;-1:-1:-1;;;9906:68:6;;;;;;;;;;;;;;;9982:64;9988:10;10000:6;10008:9;10019:6;10027:4;;9982:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;9982:64:6;;;;137:4:-1;9982:64:6;;;;;;;;;;;;;;;;;;-1:-1:-1;10033:12:6;;-1:-1:-1;10033:12:6;;;;9982:64;;10033:12;;;;9982:64;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;9982:5:6;;-1:-1:-1;;;9982:64:6:i;:::-;9728:323;;;;;;;:::o;6767:117::-;6848:5;;:31;;;-1:-1:-1;;;6848:31:6;;-1:-1:-1;;;;;6848:31:6;;;;;;;;;6824:7;;6848:5;;;;;:24;;:31;;;;;;;;;;;;;;;:5;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;6848:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6848:31:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6848:31:6;;6767:117;-1:-1:-1;;6767:117:6:o;2027:214:7:-;1024:12:39;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:39;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:39;;;;;1225:18;1213:4;1225:18;;;1170:80;2181:55:7;2195:4;2201:6;2209:16;2227:4;2233:2;2181:13;:55::i;:::-;1268:14:39;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:39;;;1264:55;2027:214:7;;;;;:::o;8689:356:6:-;8759:10;-1:-1:-1;;;;;8759:22:6;;;;8751:54;;;;;-1:-1:-1;;;8751:54:6;;;;;;;;;;;;-1:-1:-1;;;8751:54:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;8818:27:6;;;;;;:17;:27;;;;;;;;8814:173;;;8891:10;8866:36;;;;:24;:36;;;;;;;;-1:-1:-1;;;;;8866:46:6;;;;;;;;;8859:53;;-1:-1:-1;;8859:53:6;;;8814:173;;;8950:10;8939:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;8939:32:6;;;;;;;;;:39;;-1:-1:-1;;8939:39:6;8974:4;8939:39;;;8814:173;9000:40;;9029:10;;-1:-1:-1;;;;;9000:40:6;;;;;;;;8689:356;:::o;6049:81::-;6118:7;6111:14;;;;;;;;-1:-1:-1;;6111:14:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6088:13;;6111:14;;6118:7;;6111:14;;6118:7;6111:14;;;;;;;;;;;;;;;;;;;;;;;;6999:150;7086:58;7092:10;7104;7116:9;7127:6;7135:4;;7086:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;7086:58:6;;;;;;;;;;;;;-1:-1:-1;7086:5:6;;-1:-1:-1;;7086:58:6:i;:::-;6999:150;;;;:::o;13668:122::-;19226:5;;-1:-1:-1;;;;;19226:5:6;19204:10;:28;19196:60;;;;;-1:-1:-1;;;19196:60:6;;;;;;;;;;;;-1:-1:-1;;;19196:60:6;;;;;;;;;;;;;;;13746:5;;13726:59;;;;;;;;;13746:5;13726:59;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13746:5:6;;;;13770:6;;13726:11;:59::i;:::-;13668:122;:::o;12399:229::-;12528:75;;;;;;;;;;;-1:-1:-1;;;12528:75:6;;;;;;;;12507:10;12484:4;12528:23;;;:11;:23;;;;;-1:-1:-1;;;;;12528:32:6;;;;;;;;;;;12484:4;;12498:106;;12507:10;;12519:7;;12528:75;;:32;12565:15;;12528:75;:36;:75;:::i;2698:168:9:-;4350:6;:4;:6::i;:::-;-1:-1:-1;;;;;4350:14:9;;4365:10;4350:26;;;;;;;;;;;;;-1:-1:-1;;;;;4350:26:9;-1:-1:-1;;;;;4350:26:9;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4350:26:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4350:26:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4350:26:9;4342:62;;;;;-1:-1:-1;;;4342:62:9;;;;;;;;;;;;-1:-1:-1;;;4342:62:9;;;;;;;;;;;;;;;2774:26;:37;;;;;-1:-1:-1;;;2774:37:9;;-1:-1:-1;;;;2774:37:9;;;;;;;;;;2823:38;;;;;;;2840:10;;2823:38;;;;;;;;;;2698:168;:::o;7369:395:6:-;7440:4;-1:-1:-1;;;;;7462:23:6;;7454:59;;;;;-1:-1:-1;;;7454:59:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;7522:12;7537:10;7522:25;;7556:56;7574:4;7580;7586:9;7597:6;7556:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;7621:44;7627:4;7633;7639:9;7650:6;7621:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;7674:65;7694:4;7700;7706:9;7717:6;7674:65;;;;;;;;;;;;;;;;;;;;;;;;7733:5;7674:19;:65::i;3115:216:9:-;4350:6;:4;:6::i;:::-;-1:-1:-1;;;;;4350:14:9;;4365:10;4350:26;;;;;;;;;;;;;-1:-1:-1;;;;;4350:26:9;-1:-1:-1;;;;;4350:26:9;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4350:26:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4350:26:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4350:26:9;4342:62;;;;;-1:-1:-1;;;4342:62:9;;;;;;;;;;;;-1:-1:-1;;;4342:62:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3210:31:9;;;;;;:19;:31;;;;;;;;;:46;;-1:-1:-1;;3210:46:9;;;;;;;;;;3268:58;;;;;;;3289:10;;3268:58;;;;;;;;;3115:216;;:::o;10429:262:6:-;10561:34;10575:10;10587:7;10561:13;:34::i;:::-;10553:69;;;;;-1:-1:-1;;;10553:69:6;;;;;;;;;;;;-1:-1:-1;;;10553:69:6;;;;;;;;;;;;;;;10630:56;10638:10;10650:7;10659:6;10667:4;;10630:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;10630:56:6;;;;137:4:-1;10630:56:6;;;;;;;;;;;;;;;;;;-1:-1:-1;10673:12:6;;-1:-1:-1;10673:12:6;;;;10630:56;;10673:12;;;;10630:56;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;10630:7:6;;-1:-1:-1;;;10630:56:6:i;:::-;10429:262;;;;;;:::o;8338:290::-;8437:4;8470:11;-1:-1:-1;;;;;8458:23:6;:8;-1:-1:-1;;;;;8458:23:6;;:118;;;-1:-1:-1;;;;;;8496:27:6;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;8528:37:6;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;8527:48;8496:79;8458:165;;;-1:-1:-1;;;;;;8590:23:6;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;8458:165;8451:172;8338:290;-1:-1:-1;;;8338:290:6:o;10920:130::-;-1:-1:-1;;;;;11017:19:6;;;10993:7;11017:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;10920:130::o;2558:240:7:-;1024:12:39;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:39;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:39;;;;;1225:18;1213:4;1225:18;;;1170:80;2732:61:7;2746:4;2752:6;2760:16;2778:4;2784:8;2732:13;:61::i;:::-;1268:14:39;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:39;;;2558:240:7;;;;;;:::o;7923:124:6:-;7993:49;8001:10;8013;8025:6;8033:4;;7993:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;7993:49:6;;;;;;;;;;;;;-1:-1:-1;7993:7:6;;-1:-1:-1;;7993:49:6:i;:::-;7923:124;;;:::o;9103:352::-;-1:-1:-1;;;;;9170:22:6;;9182:10;9170:22;;9162:56;;;;;-1:-1:-1;;;9162:56:6;;;;;;;;;;;;-1:-1:-1;;;9162:56:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;9231:27:6;;;;;;:17;:27;;;;;;;;9227:173;;;9297:10;9272:36;;;;:24;:36;;;;;;;;-1:-1:-1;;;;;9272:46:6;;;;;;;;;:53;;-1:-1:-1;;9272:53:6;9321:4;9272:53;;;9227:173;;;9370:10;9359:22;;;;:10;:22;;;;;;;;-1:-1:-1;;;;;9359:32:6;;;;;;;;;9352:39;;-1:-1:-1;;9352:39:6;;;9227:173;9413:37;;9439:10;;-1:-1:-1;;;;;9413:37:6;;;;;;;;9103:352;:::o;10143:124::-;10232:30;;;-1:-1:-1;;;10232:30:6;;;;;;;;;;;;-1:-1:-1;;;10232:30:6;;;;;;;;;;;;;;16650:230;-1:-1:-1;;;;;16740:21:6;;16732:53;;;;;-1:-1:-1;;;16732:53:6;;;;;;;;;;;;-1:-1:-1;;;16732:53:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;16794:19:6;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;16843:32;;;;;;;;;;;;;;;;;16650:230;;;:::o;3836:409:9:-;4042:26;;-1:-1:-1;;;4042:26:9;;;;4038:120;;;-1:-1:-1;;;;;4088:16:9;;;;:43;;-1:-1:-1;;;;;;4108:23:9;;;;;;:19;:23;;;;;;;;4088:43;4080:69;;;;;-1:-1:-1;;;4080:69:9;;;;;;;;;;;;-1:-1:-1;;;4080:69:9;;;;;;;;;;;;;;;4165:75;4189:8;4199:4;4205:2;4209:6;4217:8;4227:12;4165:23;:75::i;16065:340:6:-;16254:5;;:37;;;-1:-1:-1;;;16254:37:6;;-1:-1:-1;;;;;16254:37:6;;;;;;;;;;;;;;;;;;;;;;:5;;;;;:19;;:37;;;;;;;;;;;;;;:5;;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;16254:37:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16254:37:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;16305:56:6;;;;;;;16254:37;16305:56;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16305:56:6;;;;;;;;;;;;;;16330:6;;16338:8;;16348:12;;16305:56;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16305:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16305:56:6;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16305:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16389:2;-1:-1:-1;;;;;16374:26:6;16383:4;-1:-1:-1;;;;;16374:26:6;-1:-1:-1;;;;;;;;;;;16393:6:6;16374:26;;;;;;;;;;;;;;;;;;16065:340;;;;;;:::o;1732:187:30:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:30;;;1732:187::o;18498:599:6:-;18755:77;;;-1:-1:-1;;;18755:77:6;;-1:-1:-1;;;;;18755:77:6;;;;;;3050:66;18755:77;;;;;;18733:19;;2560:42;;18755:40;;:77;;;;;;;;;;;;;;;2560:42;18755:77;;;5:2:-1;;;;30:1;27;20:12;5:2;18755:77:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18755:77:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18755:77:6;;-1:-1:-1;;;;;;18844:25:6;;;18840:253;;18900:11;-1:-1:-1;;;;;18883:44:6;;18928:8;18938:4;18944:2;18948:6;18956:8;18966:12;18883:96;;;;;;;;;;;;;-1:-1:-1;;;;;18883:96:6;-1:-1:-1;;;;;18883:96:6;;;;;;-1:-1:-1;;;;;18883:96:6;-1:-1:-1;;;;;18883:96:6;;;;;;-1:-1:-1;;;;;18883:96:6;-1:-1:-1;;;;;18883:96:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18883:96:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18883:96:6;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;18883:96:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18883:96:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18883:96:6;;;;18840:253;;;18998:19;18994:99;;;19040:15;:2;-1:-1:-1;;;;;19040:13:6;;:15::i;:::-;19039:16;19031:53;;;;;-1:-1:-1;;;19031:53:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;18498:599;;;;;;;;:::o;834:176:30:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:30;;;;;;;;;;;;;;;;;;;;;;;;;;;14569:529:6;-1:-1:-1;;;;;14766:18:6;;14758:50;;;;;-1:-1:-1;;;14758:50:6;;;;;;;;;;;;-1:-1:-1;;;14758:50:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;14824:16:6;;14816:46;;;;;-1:-1:-1;;;14816:46:6;;;;;;;;;;;;-1:-1:-1;;;14816:46:6;;;;;;;;;;;;;;;14871:69;14889:8;14899:4;14905:2;14909:6;14917:8;14927:12;14871:17;:69::i;:::-;14949:57;14955:8;14965:4;14971:2;14975:6;14983:8;14993:12;14949:5;:57::i;:::-;15015:78;15035:8;15045:4;15051:2;15055:6;15063:8;15073:12;15087:5;15015:19;:78::i;1409:467:39:-;1842:7;1830:20;1864:7;1409:467;:::o;2802:311:7:-;2975:48;2986:4;2992:6;3000:16;3018:4;2975:10;:48::i;:::-;3050:1;3039:8;:12;;;3031:48;;;;;-1:-1:-1;;;3031:48:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;3088:9;:20;;;;;;-1:-1:-1;;;3088:20:7;-1:-1:-1;;;;3088:20:7;;;;;;;;;-1:-1:-1;;;;2802:311:7:o;13858:294:6:-;14057:7;-1:-1:-1;;;;;14040:57:6;14047:8;-1:-1:-1;;;;;14040:57:6;;14066:6;14074:8;14084:12;14040:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14040:57:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14040:57:6;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14040:57:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14110:37;;;;;;;;-1:-1:-1;;;;;14110:37:6;;;14127:1;;-1:-1:-1;;;;;;;;;;;14110:37:6;;;;;;;;13858:294;;;;;:::o;15488:476::-;-1:-1:-1;;;;;15665:18:6;;15657:50;;;;;-1:-1:-1;;;15657:50:6;;;;;;;;;;;;-1:-1:-1;;;15657:50:6;;;;;;;;;;;;;;;15716:73;15734:8;15744:4;15758:1;15762:6;15770:4;15776:12;15716:17;:73::i;:::-;15798:5;;:48;;;-1:-1:-1;;;15798:48:6;;-1:-1:-1;;;;;15798:48:6;;;;;;;;;;;;;;;:5;;;;;:34;;:48;;;;;;;;;;;;;;:5;;:48;;;5:2:-1;;;;30:1;27;20:12;5:2;15798:48:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15798:48:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;15860:52:6;;;;;;;15798:48;15860:52;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15860:52:6;;;;;;;;;;15885:6;;15893:4;;15899:12;;15860:52;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15860:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15860:52:6;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15860:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15925:34;;;;;;;;15948:1;;-1:-1:-1;;;;;15925:34:6;;;-1:-1:-1;;;;;;;;;;;15925:34:6;;;;;;;;15488:476;;;;;:::o;17341:465::-;19370:5;;;;;;;;;-1:-1:-1;;;;;19370:5:6;-1:-1:-1;;;;;19370:14:6;;:16;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19370:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19370:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19370:16:6;19369:17;19361:49;;;;;-1:-1:-1;;;19361:49:6;;;;;;;;;;;;-1:-1:-1;;;19361:49:6;;;;;;;;;;;;;;;17575:76;;;-1:-1:-1;;;17575:76:6;;-1:-1:-1;;;;;17575:76:6;;;;;;2873:66;17575:76;;;;;;17553:19;;2560:42;;17575:40;;:76;;;;;;;;;;;;;;;2560:42;17575:76;;;5:2:-1;;;;30:1;27;20:12;5:2;17575:76:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17575:76:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17575:76:6;;-1:-1:-1;;;;;;17663:25:6;;;17659:143;;17716:11;-1:-1:-1;;;;;17702:39:6;;17742:8;17752:4;17758:2;17762:6;17770:8;17780:12;17702:91;;;;;;;;;;;;;-1:-1:-1;;;;;17702:91:6;-1:-1:-1;;;;;17702:91:6;;;;;;-1:-1:-1;;;;;17702:91:6;-1:-1:-1;;;;;17702:91:6;;;;;;-1:-1:-1;;;;;17702:91:6;-1:-1:-1;;;;;17702:91:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17702:91:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17702:91:6;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;17702:91:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17702:91:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17702:91:6;;;;19416:1;17341:465;;;;;;:::o;557:797:37:-;617:4;1265:20;;1110:66;1304:15;;;;;:42;;;1335:11;1323:8;:23;;1304:42;1296:51;557:797;-1:-1:-1;;;;557:797:37:o;4378:830:6:-;1024:12:39;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:39;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:39;;;;;1225:18;1213:4;1225:18;;;1170:80;4540:18:6;;4532:50;;;;;-1:-1:-1;;;4532:50:6;;;;;;;;;;;;-1:-1:-1;;;4532:50:6;;;;;;;;;;;;;;;4598:20;;4590:54;;;;;-1:-1:-1;;;4590:54:6;;;;;;;;;;;;-1:-1:-1;;;4590:54:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;4660:27:6;;4652:59;;;;;-1:-1:-1;;;4652:59:6;;;;;;;;;;;;-1:-1:-1;;;4652:59:6;;;;;;;;;;;;;;;4720:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;4740:16:6;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;4764:5:6;:12;;-1:-1:-1;;;;;;4764:12:6;-1:-1:-1;;;;;4764:12:6;;;;;4785:41;;;;:22;;:41;;;;;:::i;:::-;-1:-1:-1;4839:9:6;4834:132;4858:22;:29;4854:33;;4834:132;;;4953:4;4906:17;:44;4924:22;4947:1;4924:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4924:25:6;4906:44;;;;;;;;;;;;:51;;-1:-1:-1;;4906:51:6;;;;;;;;;;-1:-1:-1;4889:3:6;4834:132;;;-1:-1:-1;5003:93:6;;;-1:-1:-1;;;5003:93:6;;5052:4;5003:93;;;;;;3207:66;5003:93;;;;;;;;;;2560:42;;5003:40;;:93;;;;;5059:21;;5003:93;;;;;;;5059:21;2560:42;5003:93;;;5:2:-1;;;;30:1;27;20:12;5:2;5003:93:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5104:99:6;;;-1:-1:-1;;;5104:99:6;;5153:4;5104:99;;;;;;3369:66;5104:99;;;;;;;;;;2560:42;;-1:-1:-1;5104:40:6;;-1:-1:-1;5104:99:6;;;;;5160:27;;5104:99;;;;;;;5160:27;2560:42;5104:99;;;5:2:-1;;;;30:1;27;20:12;5:2;5104:99:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5104:99:6;;;;1268:14:39;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:39;;;4378:830:6;;;;;:::o;875:3543:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;875:3543:9;;;-1:-1:-1;875:3543:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;875:3543:9;-1:-1:-1;;;;;875:3543:9;;;;;;;;;;;-1:-1:-1;875:3543:9;;;;;;;-1:-1:-1;875:3543:9;;;-1:-1:-1;875:3543:9;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;875:3543:9;;;;;;",
  "source": "/**\nCopyright 2020 PoolTogether Inc.\n\nThis file is part of PoolTogether.\n\nPoolTogether is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation under version 3 of the License.\n\nPoolTogether is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with PoolTogether.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\npragma solidity 0.5.12;\n\nimport \"./PoolTokenDecimals.sol\";\n\n/**\n * @title RecipientWhitelistPoolToken\n * @author Brendan Asselstine\n * @notice Allows the pool admins to only allow token transfers to particular addresses.\n */\ncontract RecipientWhitelistPoolTokenDecimals is PoolTokenDecimals {\n  /**\n   * @notice Whether the whitelist is enabled\n   */\n  bool internal _recipientWhitelistEnabled;\n\n  /**\n   * @notice Whether a recipient has been whitelisted\n   */\n  mapping(address => bool) internal _recipientWhitelist;\n\n  /**\n   * @notice Emitted when the whitelist is enabled or disabled\n   * @param admin The admin who affected the change.\n   * @param enabled Whether the whitelist was enabled.\n   */\n  event WhitelistEnabled(address indexed admin, bool enabled);\n\n  /**\n   * @notice Emitted when a recipient whitelist status changes.\n   * @param admin The admin who affected the change\n   * @param recipient The recipient whose whitelisting status was changed\n   * @param whitelisted Whether the recipient was whitelisted\n   */\n  event RecipientWhitelisted(address indexed admin, address indexed recipient, bool whitelisted);\n\n  /**\n   * @notice Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens.\n   * Otherwise if the whitelist is not enabled anyone is able to receive tokens.\n   * @return True if whitelist enabled, false otherwise.\n   */\n  function recipientWhitelistEnabled() public view returns (bool) {\n    return _recipientWhitelistEnabled;\n  }\n\n  /**\n   * @notice Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not.\n   * @return True if the recipient has been whitelisted, false otherwise.\n   */\n  function recipientWhitelisted(address _recipient) public view returns (bool) {\n    return _recipientWhitelist[_recipient];\n  }\n\n  /**\n   * @notice Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin.\n   * @param _enabled True if whitelisting should be enabled, false otherwise\n   */\n  function setRecipientWhitelistEnabled(bool _enabled) public onlyAdmin {\n    _recipientWhitelistEnabled = _enabled;\n\n    emit WhitelistEnabled(msg.sender, _enabled);\n  }\n\n  /**\n   * @notice Sets whether the recipient should be whitelisted.  Only callable by the Pool admin.\n   * @param _recipient The recipient to whitelist\n   * @param _whitelisted True if the recipient should be whitelisted, false otherwise\n   */\n  function setRecipientWhitelisted(address _recipient, bool _whitelisted) public onlyAdmin {\n    _recipientWhitelist[_recipient] = _whitelisted;\n\n    emit RecipientWhitelisted(msg.sender, _recipient, _whitelisted);\n  }\n\n  /**\n    * @dev Call from.tokensToSend() if the interface is registered\n    * @param operator address operator requesting the transfer\n    * @param from address token holder address\n    * @param to address recipient address.  Can only be whitelisted addresses, if any\n    * @param amount uint256 amount of tokens to transfer\n    * @param userData bytes extra information provided by the token holder (if any)\n    * @param operatorData bytes extra information provided by the operator (if any)\n    */\n  function _callTokensToSend(\n      address operator,\n      address from,\n      address to,\n      uint256 amount,\n      bytes memory userData,\n      bytes memory operatorData\n  )\n      internal\n  {\n      if (_recipientWhitelistEnabled) {\n        require(to == address(0) || _recipientWhitelist[to], \"Pool/not-list\");\n      }\n      super._callTokensToSend(operator, from, to, amount, userData, operatorData);\n  }\n\n  /**\n   * @notice Requires the caller to be the Pool admin\n   */\n  modifier onlyAdmin() {\n    require(pool().isAdmin(msg.sender), \"WhitelistToken/is-admin\");\n    _;\n  }\n}\n",
  "sourcePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/RecipientWhitelistPoolTokenDecimals.sol",
  "ast": {
    "absolutePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/RecipientWhitelistPoolTokenDecimals.sol",
    "exportedSymbols": {
      "RecipientWhitelistPoolTokenDecimals": [
        5244
      ]
    },
    "id": 5245,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5102,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "650:23:9"
      },
      {
        "absolutePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/PoolTokenDecimals.sol",
        "file": "./PoolTokenDecimals.sol",
        "id": 5103,
        "nodeType": "ImportDirective",
        "scope": 5245,
        "sourceUnit": 4957,
        "src": "675:33:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5104,
              "name": "PoolTokenDecimals",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4956,
              "src": "923:17:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PoolTokenDecimals_$4956",
                "typeString": "contract PoolTokenDecimals"
              }
            },
            "id": 5105,
            "nodeType": "InheritanceSpecifier",
            "src": "923:17:9"
          }
        ],
        "contractDependencies": [
          4857,
          4956,
          8169,
          9307,
          9522
        ],
        "contractKind": "contract",
        "documentation": "@title RecipientWhitelistPoolToken\n@author Brendan Asselstine\n@notice Allows the pool admins to only allow token transfers to particular addresses.",
        "fullyImplemented": true,
        "id": 5244,
        "linearizedBaseContracts": [
          5244,
          4956,
          4857,
          9307,
          8169,
          9522
        ],
        "name": "RecipientWhitelistPoolTokenDecimals",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5107,
            "name": "_recipientWhitelistEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 5244,
            "src": "1003:40:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5106,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1003:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5111,
            "name": "_recipientWhitelist",
            "nodeType": "VariableDeclaration",
            "scope": 5244,
            "src": "1114:53:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5110,
              "keyType": {
                "id": 5108,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5109,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1133:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when the whitelist is enabled or disabled\n@param admin The admin who affected the change.\n@param enabled Whether the whitelist was enabled.",
            "id": 5117,
            "name": "WhitelistEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5113,
                  "indexed": true,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 5117,
                  "src": "1378:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5115,
                  "indexed": false,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 5117,
                  "src": "1401:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1377:37:9"
            },
            "src": "1355:60:9"
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when a recipient whitelist status changes.\n@param admin The admin who affected the change\n@param recipient The recipient whose whitelisting status was changed\n@param whitelisted Whether the recipient was whitelisted",
            "id": 5125,
            "name": "RecipientWhitelisted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5119,
                  "indexed": true,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 5125,
                  "src": "1710:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5121,
                  "indexed": true,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5125,
                  "src": "1733:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5123,
                  "indexed": false,
                  "name": "whitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 5125,
                  "src": "1760:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5122,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1709:68:9"
            },
            "src": "1683:95:9"
          },
          {
            "body": {
              "id": 5132,
              "nodeType": "Block",
              "src": "2123:44:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5130,
                    "name": "_recipientWhitelistEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5107,
                    "src": "2136:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5129,
                  "id": 5131,
                  "nodeType": "Return",
                  "src": "2129:33:9"
                }
              ]
            },
            "documentation": "@notice Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens.\nOtherwise if the whitelist is not enabled anyone is able to receive tokens.\n@return True if whitelist enabled, false otherwise.",
            "id": 5133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientWhitelistEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2093:2:9"
            },
            "returnParameters": {
              "id": 5129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5133,
                  "src": "2117:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2116:6:9"
            },
            "scope": 5244,
            "src": "2059:108:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5144,
              "nodeType": "Block",
              "src": "2461:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5140,
                      "name": "_recipientWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5111,
                      "src": "2474:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 5142,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5141,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5135,
                      "src": "2494:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2474:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5139,
                  "id": 5143,
                  "nodeType": "Return",
                  "src": "2467:38:9"
                }
              ]
            },
            "documentation": "@notice Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not.\n@return True if the recipient has been whitelisted, false otherwise.",
            "id": 5145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5135,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2414:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2413:20:9"
            },
            "returnParameters": {
              "id": 5139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5138,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2455:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5137,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2455:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2454:6:9"
            },
            "scope": 5244,
            "src": "2384:126:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5162,
              "nodeType": "Block",
              "src": "2768:98:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5152,
                      "name": "_recipientWhitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5107,
                      "src": "2774:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5153,
                      "name": "_enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5147,
                      "src": "2803:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2774:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5155,
                  "nodeType": "ExpressionStatement",
                  "src": "2774:37:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11106,
                          "src": "2840:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2840:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5159,
                        "name": "_enabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5147,
                        "src": "2852:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5156,
                      "name": "WhitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5117,
                      "src": "2823:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 5160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2823:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5161,
                  "nodeType": "EmitStatement",
                  "src": "2818:43:9"
                }
              ]
            },
            "documentation": "@notice Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin.\n@param _enabled True if whitelisting should be enabled, false otherwise",
            "id": 5163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5150,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5149,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5243,
                  "src": "2758:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2758:9:9"
              }
            ],
            "name": "setRecipientWhitelistEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5147,
                  "name": "_enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 5163,
                  "src": "2736:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2736:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2735:15:9"
            },
            "returnParameters": {
              "id": 5151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2768:0:9"
            },
            "scope": 5244,
            "src": "2698:168:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5185,
              "nodeType": "Block",
              "src": "3204:127:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5172,
                        "name": "_recipientWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5111,
                        "src": "3210:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5174,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5173,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5165,
                        "src": "3230:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3210:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5175,
                      "name": "_whitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5167,
                      "src": "3244:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3210:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5177,
                  "nodeType": "ExpressionStatement",
                  "src": "3210:46:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11106,
                          "src": "3289:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3289:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5181,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5165,
                        "src": "3301:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5182,
                        "name": "_whitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5167,
                        "src": "3313:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5178,
                      "name": "RecipientWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5125,
                      "src": "3268:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 5183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3268:58:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5184,
                  "nodeType": "EmitStatement",
                  "src": "3263:63:9"
                }
              ]
            },
            "documentation": "@notice Sets whether the recipient should be whitelisted.  Only callable by the Pool admin.\n@param _recipient The recipient to whitelist\n@param _whitelisted True if the recipient should be whitelisted, false otherwise",
            "id": 5186,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5170,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5169,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5243,
                  "src": "3194:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3194:9:9"
              }
            ],
            "name": "setRecipientWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5165,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5186,
                  "src": "3148:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3148:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5167,
                  "name": "_whitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 5186,
                  "src": "3168:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5166,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3168:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3147:39:9"
            },
            "returnParameters": {
              "id": 5171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3204:0:9"
            },
            "scope": 5244,
            "src": "3115:216:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5228,
              "nodeType": "Block",
              "src": "4030:215:9",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 5201,
                    "name": "_recipientWhitelistEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5107,
                    "src": "4042:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5216,
                  "nodeType": "IfStatement",
                  "src": "4038:120:9",
                  "trueBody": {
                    "id": 5215,
                    "nodeType": "Block",
                    "src": "4070:88:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 5211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 5207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 5203,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5192,
                                  "src": "4088:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 5205,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4102:1:9",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 5204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4094:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 5206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4094:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "4088:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 5208,
                                  "name": "_recipientWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5111,
                                  "src": "4108:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 5210,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 5209,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5192,
                                  "src": "4128:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4108:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4088:43:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "506f6f6c2f6e6f742d6c697374",
                              "id": 5212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4133:15:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_84780aa577d2865deba9303e9981418d68b0241c988be789d4cb97dda944758c",
                                "typeString": "literal_string \"Pool/not-list\""
                              },
                              "value": "Pool/not-list"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_84780aa577d2865deba9303e9981418d68b0241c988be789d4cb97dda944758c",
                                "typeString": "literal_string \"Pool/not-list\""
                              }
                            ],
                            "id": 5202,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11109,
                              11110
                            ],
                            "referencedDeclaration": 11110,
                            "src": "4080:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4080:69:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5214,
                        "nodeType": "ExpressionStatement",
                        "src": "4080:69:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5220,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5188,
                        "src": "4189:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5221,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5190,
                        "src": "4199:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5222,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5192,
                        "src": "4205:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5223,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5194,
                        "src": "4209:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5224,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5196,
                        "src": "4217:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5225,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5198,
                        "src": "4227:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5217,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11185,
                        "src": "4165:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RecipientWhitelistPoolTokenDecimals_$5244",
                          "typeString": "contract super RecipientWhitelistPoolTokenDecimals"
                        }
                      },
                      "id": 5219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_callTokensToSend",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4774,
                      "src": "4165:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 5226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4165:75:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5227,
                  "nodeType": "ExpressionStatement",
                  "src": "4165:75:9"
                }
              ]
            },
            "documentation": "@dev Call from.tokensToSend() if the interface is registered\n@param operator address operator requesting the transfer\n@param from address token holder address\n@param to address recipient address.  Can only be whitelisted addresses, if any\n@param amount uint256 amount of tokens to transfer\n@param userData bytes extra information provided by the token holder (if any)\n@param operatorData bytes extra information provided by the operator (if any)",
            "id": 5229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5188,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3870:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3870:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5190,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3894:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5192,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3914:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3914:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5194,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3932:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3932:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5196,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3954:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5195,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3954:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5198,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3983:25:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5197,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3862:150:9"
            },
            "returnParameters": {
              "id": 5200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4030:0:9"
            },
            "scope": 5244,
            "src": "3836:409:9",
            "stateMutability": "nonpayable",
            "superFunction": 4774,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5242,
              "nodeType": "Block",
              "src": "4336:80:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5235,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11106,
                              "src": "4365:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4365:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5232,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3912,
                              "src": "4350:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_BasePool_$2100_$",
                                "typeString": "function () view returns (contract BasePool)"
                              }
                            },
                            "id": 5233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4350:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePool_$2100",
                              "typeString": "contract BasePool"
                            }
                          },
                          "id": 5234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1776,
                          "src": "4350:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 5237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4350:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c697374546f6b656e2f69732d61646d696e",
                        "id": 5238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4378:25:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31d4f879a610b132c71dc9ccbc690ae477bba8886b7e9bfa597ab1bd2494fb12",
                          "typeString": "literal_string \"WhitelistToken/is-admin\""
                        },
                        "value": "WhitelistToken/is-admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31d4f879a610b132c71dc9ccbc690ae477bba8886b7e9bfa597ab1bd2494fb12",
                          "typeString": "literal_string \"WhitelistToken/is-admin\""
                        }
                      ],
                      "id": 5231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "4342:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:62:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5240,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:62:9"
                },
                {
                  "id": 5241,
                  "nodeType": "PlaceholderStatement",
                  "src": "4410:1:9"
                }
              ]
            },
            "documentation": "@notice Requires the caller to be the Pool admin",
            "id": 5243,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4333:2:9"
            },
            "src": "4315:101:9",
            "visibility": "internal"
          }
        ],
        "scope": 5245,
        "src": "875:3543:9"
      }
    ],
    "src": "650:3769:9"
  },
  "legacyAST": {
    "absolutePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/RecipientWhitelistPoolTokenDecimals.sol",
    "exportedSymbols": {
      "RecipientWhitelistPoolTokenDecimals": [
        5244
      ]
    },
    "id": 5245,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5102,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "650:23:9"
      },
      {
        "absolutePath": "/home/manjain/Documents/LetsPool/src/pooltogether-contracts/contracts/PoolTokenDecimals.sol",
        "file": "./PoolTokenDecimals.sol",
        "id": 5103,
        "nodeType": "ImportDirective",
        "scope": 5245,
        "sourceUnit": 4957,
        "src": "675:33:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5104,
              "name": "PoolTokenDecimals",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4956,
              "src": "923:17:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PoolTokenDecimals_$4956",
                "typeString": "contract PoolTokenDecimals"
              }
            },
            "id": 5105,
            "nodeType": "InheritanceSpecifier",
            "src": "923:17:9"
          }
        ],
        "contractDependencies": [
          4857,
          4956,
          8169,
          9307,
          9522
        ],
        "contractKind": "contract",
        "documentation": "@title RecipientWhitelistPoolToken\n@author Brendan Asselstine\n@notice Allows the pool admins to only allow token transfers to particular addresses.",
        "fullyImplemented": true,
        "id": 5244,
        "linearizedBaseContracts": [
          5244,
          4956,
          4857,
          9307,
          8169,
          9522
        ],
        "name": "RecipientWhitelistPoolTokenDecimals",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5107,
            "name": "_recipientWhitelistEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 5244,
            "src": "1003:40:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5106,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1003:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5111,
            "name": "_recipientWhitelist",
            "nodeType": "VariableDeclaration",
            "scope": 5244,
            "src": "1114:53:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5110,
              "keyType": {
                "id": 5108,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5109,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1133:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when the whitelist is enabled or disabled\n@param admin The admin who affected the change.\n@param enabled Whether the whitelist was enabled.",
            "id": 5117,
            "name": "WhitelistEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5113,
                  "indexed": true,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 5117,
                  "src": "1378:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5115,
                  "indexed": false,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 5117,
                  "src": "1401:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1377:37:9"
            },
            "src": "1355:60:9"
          },
          {
            "anonymous": false,
            "documentation": "@notice Emitted when a recipient whitelist status changes.\n@param admin The admin who affected the change\n@param recipient The recipient whose whitelisting status was changed\n@param whitelisted Whether the recipient was whitelisted",
            "id": 5125,
            "name": "RecipientWhitelisted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5119,
                  "indexed": true,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 5125,
                  "src": "1710:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5121,
                  "indexed": true,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5125,
                  "src": "1733:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5123,
                  "indexed": false,
                  "name": "whitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 5125,
                  "src": "1760:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5122,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1709:68:9"
            },
            "src": "1683:95:9"
          },
          {
            "body": {
              "id": 5132,
              "nodeType": "Block",
              "src": "2123:44:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5130,
                    "name": "_recipientWhitelistEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5107,
                    "src": "2136:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5129,
                  "id": 5131,
                  "nodeType": "Return",
                  "src": "2129:33:9"
                }
              ]
            },
            "documentation": "@notice Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens.\nOtherwise if the whitelist is not enabled anyone is able to receive tokens.\n@return True if whitelist enabled, false otherwise.",
            "id": 5133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientWhitelistEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2093:2:9"
            },
            "returnParameters": {
              "id": 5129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5133,
                  "src": "2117:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2116:6:9"
            },
            "scope": 5244,
            "src": "2059:108:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5144,
              "nodeType": "Block",
              "src": "2461:49:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5140,
                      "name": "_recipientWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5111,
                      "src": "2474:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 5142,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5141,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5135,
                      "src": "2494:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2474:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5139,
                  "id": 5143,
                  "nodeType": "Return",
                  "src": "2467:38:9"
                }
              ]
            },
            "documentation": "@notice Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not.\n@return True if the recipient has been whitelisted, false otherwise.",
            "id": 5145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5135,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2414:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2413:20:9"
            },
            "returnParameters": {
              "id": 5139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5138,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "2455:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5137,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2455:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2454:6:9"
            },
            "scope": 5244,
            "src": "2384:126:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5162,
              "nodeType": "Block",
              "src": "2768:98:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5152,
                      "name": "_recipientWhitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5107,
                      "src": "2774:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5153,
                      "name": "_enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5147,
                      "src": "2803:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2774:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5155,
                  "nodeType": "ExpressionStatement",
                  "src": "2774:37:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11106,
                          "src": "2840:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2840:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5159,
                        "name": "_enabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5147,
                        "src": "2852:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5156,
                      "name": "WhitelistEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5117,
                      "src": "2823:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 5160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2823:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5161,
                  "nodeType": "EmitStatement",
                  "src": "2818:43:9"
                }
              ]
            },
            "documentation": "@notice Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin.\n@param _enabled True if whitelisting should be enabled, false otherwise",
            "id": 5163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5150,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5149,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5243,
                  "src": "2758:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2758:9:9"
              }
            ],
            "name": "setRecipientWhitelistEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5147,
                  "name": "_enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 5163,
                  "src": "2736:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2736:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2735:15:9"
            },
            "returnParameters": {
              "id": 5151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2768:0:9"
            },
            "scope": 5244,
            "src": "2698:168:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5185,
              "nodeType": "Block",
              "src": "3204:127:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5172,
                        "name": "_recipientWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5111,
                        "src": "3210:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5174,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5173,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5165,
                        "src": "3230:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3210:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5175,
                      "name": "_whitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5167,
                      "src": "3244:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3210:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5177,
                  "nodeType": "ExpressionStatement",
                  "src": "3210:46:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11106,
                          "src": "3289:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3289:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5181,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5165,
                        "src": "3301:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5182,
                        "name": "_whitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5167,
                        "src": "3313:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5178,
                      "name": "RecipientWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5125,
                      "src": "3268:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 5183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3268:58:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5184,
                  "nodeType": "EmitStatement",
                  "src": "3263:63:9"
                }
              ]
            },
            "documentation": "@notice Sets whether the recipient should be whitelisted.  Only callable by the Pool admin.\n@param _recipient The recipient to whitelist\n@param _whitelisted True if the recipient should be whitelisted, false otherwise",
            "id": 5186,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5170,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5169,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5243,
                  "src": "3194:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3194:9:9"
              }
            ],
            "name": "setRecipientWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5165,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5186,
                  "src": "3148:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3148:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5167,
                  "name": "_whitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 5186,
                  "src": "3168:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5166,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3168:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3147:39:9"
            },
            "returnParameters": {
              "id": 5171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3204:0:9"
            },
            "scope": 5244,
            "src": "3115:216:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5228,
              "nodeType": "Block",
              "src": "4030:215:9",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 5201,
                    "name": "_recipientWhitelistEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5107,
                    "src": "4042:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5216,
                  "nodeType": "IfStatement",
                  "src": "4038:120:9",
                  "trueBody": {
                    "id": 5215,
                    "nodeType": "Block",
                    "src": "4070:88:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 5211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 5207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 5203,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5192,
                                  "src": "4088:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 5205,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4102:1:9",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 5204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4094:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 5206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4094:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "src": "4088:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 5208,
                                  "name": "_recipientWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5111,
                                  "src": "4108:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 5210,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 5209,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5192,
                                  "src": "4128:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4108:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4088:43:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "506f6f6c2f6e6f742d6c697374",
                              "id": 5212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4133:15:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_84780aa577d2865deba9303e9981418d68b0241c988be789d4cb97dda944758c",
                                "typeString": "literal_string \"Pool/not-list\""
                              },
                              "value": "Pool/not-list"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_84780aa577d2865deba9303e9981418d68b0241c988be789d4cb97dda944758c",
                                "typeString": "literal_string \"Pool/not-list\""
                              }
                            ],
                            "id": 5202,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11109,
                              11110
                            ],
                            "referencedDeclaration": 11110,
                            "src": "4080:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4080:69:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5214,
                        "nodeType": "ExpressionStatement",
                        "src": "4080:69:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5220,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5188,
                        "src": "4189:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5221,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5190,
                        "src": "4199:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5222,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5192,
                        "src": "4205:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5223,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5194,
                        "src": "4209:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5224,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5196,
                        "src": "4217:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5225,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5198,
                        "src": "4227:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5217,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11185,
                        "src": "4165:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RecipientWhitelistPoolTokenDecimals_$5244",
                          "typeString": "contract super RecipientWhitelistPoolTokenDecimals"
                        }
                      },
                      "id": 5219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_callTokensToSend",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4774,
                      "src": "4165:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 5226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4165:75:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5227,
                  "nodeType": "ExpressionStatement",
                  "src": "4165:75:9"
                }
              ]
            },
            "documentation": "@dev Call from.tokensToSend() if the interface is registered\n@param operator address operator requesting the transfer\n@param from address token holder address\n@param to address recipient address.  Can only be whitelisted addresses, if any\n@param amount uint256 amount of tokens to transfer\n@param userData bytes extra information provided by the token holder (if any)\n@param operatorData bytes extra information provided by the operator (if any)",
            "id": 5229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5188,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3870:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3870:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5190,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3894:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5192,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3914:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3914:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5194,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3932:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3932:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5196,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3954:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5195,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3954:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5198,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 5229,
                  "src": "3983:25:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5197,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3862:150:9"
            },
            "returnParameters": {
              "id": 5200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4030:0:9"
            },
            "scope": 5244,
            "src": "3836:409:9",
            "stateMutability": "nonpayable",
            "superFunction": 4774,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5242,
              "nodeType": "Block",
              "src": "4336:80:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5235,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11106,
                              "src": "4365:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4365:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5232,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3912,
                              "src": "4350:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_BasePool_$2100_$",
                                "typeString": "function () view returns (contract BasePool)"
                              }
                            },
                            "id": 5233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4350:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePool_$2100",
                              "typeString": "contract BasePool"
                            }
                          },
                          "id": 5234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1776,
                          "src": "4350:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 5237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4350:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c697374546f6b656e2f69732d61646d696e",
                        "id": 5238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4378:25:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31d4f879a610b132c71dc9ccbc690ae477bba8886b7e9bfa597ab1bd2494fb12",
                          "typeString": "literal_string \"WhitelistToken/is-admin\""
                        },
                        "value": "WhitelistToken/is-admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31d4f879a610b132c71dc9ccbc690ae477bba8886b7e9bfa597ab1bd2494fb12",
                          "typeString": "literal_string \"WhitelistToken/is-admin\""
                        }
                      ],
                      "id": 5231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11109,
                        11110
                      ],
                      "referencedDeclaration": 11110,
                      "src": "4342:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:62:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5240,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:62:9"
                },
                {
                  "id": 5241,
                  "nodeType": "PlaceholderStatement",
                  "src": "4410:1:9"
                }
              ]
            },
            "documentation": "@notice Requires the caller to be the Pool admin",
            "id": 5243,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4333:2:9"
            },
            "src": "4315:101:9",
            "visibility": "internal"
          }
        ],
        "scope": 5245,
        "src": "875:3543:9"
      }
    ],
    "src": "650:3769:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-21T20:34:55.082Z",
  "devdoc": {
    "author": "Brendan Asselstine",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}.    * Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.    * Note that accounts cannot have allowance issued by their operators."
      },
      "authorizeOperator(address)": {
        "details": "See {IERC777-authorizeOperator}."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256,bytes)": {
        "details": "See {IERC777-burn}.  Not currently implemented.    * Also emits a {Transfer} event for ERC20 compatibility."
      },
      "decimals()": {
        "details": "See {ERC20Detailed-decimals}.    * Returns the number of decimal places this token should have.  This deviates from the ERC777 spec because deposits into the Pool may use alternative decimal places (such as USDC) [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "defaultOperators()": {
        "details": "See {IERC777-defaultOperators}."
      },
      "granularity()": {
        "details": "See {IERC777-granularity}.    * This implementation always returns `1`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
      },
      "init(string,string,address[],address)": {
        "params": {
          "defaultOperators": "The default operators who are allowed to move tokens",
          "name": "The name of the token",
          "pool": "The pool to bind to",
          "symbol": "The token symbol"
        }
      },
      "init(string,string,address[],address,uint8)": {
        "params": {
          "decimals": "The number of decimals the Pool's token uses.",
          "defaultOperators": "The default operators who are allowed to move tokens",
          "name": "The name of the token",
          "pool": "The pool to bind to",
          "symbol": "The token symbol"
        }
      },
      "isOperatorFor(address,address)": {
        "details": "See {IERC777-isOperatorFor}."
      },
      "name()": {
        "details": "See {IERC777-name}."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorBurn}.    * Currently not supported"
      },
      "operatorRedeem(address,uint256,bytes,bytes)": {
        "details": "Allows an operator to redeem tokens for the underlying asset on behalf of a user.    * Emits {Redeemed} and {Transfer} events."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorSend}.    * Emits {Sent} and {Transfer} events."
      },
      "pool()": {
        "return": "The address of the pool contract"
      },
      "poolMint(uint256)": {
        "params": {
          "amount": "The amount that was minted"
        }
      },
      "poolRedeem(address,uint256)": {
        "params": {
          "amount": "The amount of tokens to redeem",
          "from": "The address from which to redeem tokens"
        }
      },
      "recipientWhitelistEnabled()": {
        "return": "True if whitelist enabled, false otherwise."
      },
      "recipientWhitelisted(address)": {
        "return": "True if the recipient has been whitelisted, false otherwise."
      },
      "redeem(uint256,bytes)": {
        "details": "Allows a user to withdraw their tokens as the underlying asset.    * Also emits a {Transfer} event for ERC20 compatibility."
      },
      "revokeOperator(address)": {
        "details": "See {IERC777-revokeOperator}."
      },
      "send(address,uint256,bytes)": {
        "details": "See {IERC777-send}.    * Also emits a {Transfer} event for ERC20 compatibility."
      },
      "setRecipientWhitelistEnabled(bool)": {
        "params": {
          "_enabled": "True if whitelisting should be enabled, false otherwise"
        }
      },
      "setRecipientWhitelisted(address,bool)": {
        "params": {
          "_recipient": "The recipient to whitelist",
          "_whitelisted": "True if the recipient should be whitelisted, false otherwise"
        }
      },
      "symbol()": {
        "details": "See {IERC777-symbol}."
      },
      "totalSupply()": {
        "details": "See {IERC777-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.    * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract.    * Also emits a {Sent} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.  * Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators).  * Emits {Sent}, {Transfer} and {Approval} events."
      }
    },
    "title": "RecipientWhitelistPoolToken"
  },
  "userdoc": {
    "methods": {
      "init(string,string,address[],address)": {
        "notice": "Initializes the PoolToken."
      },
      "init(string,string,address[],address,uint8)": {
        "notice": "Initializes the PoolToken."
      },
      "pool()": {
        "notice": "Returns the address of the Pool contract"
      },
      "poolMint(uint256)": {
        "notice": "Called by the associated Pool to emit `Mint` events."
      },
      "poolRedeem(address,uint256)": {
        "notice": "Calls the ERC777 transfer hook, and emits Redeemed and Transfer.  Can only be called by the Pool contract."
      },
      "recipientWhitelistEnabled()": {
        "notice": "Returns whether the whitelist is enabled.  If enabled, recipients must be whitelisted in order to receive tokens. Otherwise if the whitelist is not enabled anyone is able to receive tokens."
      },
      "recipientWhitelisted(address)": {
        "notice": "Checks whether a recipient has been whitelisted.  This is irrespective of whether whitelisting is enabled or not."
      },
      "setRecipientWhitelistEnabled(bool)": {
        "notice": "Sets whether recipient whitelisting is enabled.  Only callable by the Pool admin."
      },
      "setRecipientWhitelisted(address,bool)": {
        "notice": "Sets whether the recipient should be whitelisted.  Only callable by the Pool admin."
      }
    },
    "notice": "Allows the pool admins to only allow token transfers to particular addresses."
  }
}