{"version":3,"sources":["../node_modules/bnc-onboard/dist/esm/providerEngine-81ff17e9.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/util/create-payload.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/subproviders/subprovider.js","../node_modules/bnc-onboard/node_modules/eth-json-rpc-errors/src/classes.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/index.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/subproviders/rpc.js","../node_modules/bnc-onboard/node_modules/eth-json-rpc-errors/src/utils.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/subproviders/hooked-wallet.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/subproviders/subscriptions.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/subproviders/json-rpc-engine-middleware.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/subproviders/filters.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/util/stoplight.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/util/rpc-cache-utils.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/util/random-id.js","../node_modules/bnc-onboard/node_modules/eth-json-rpc-errors/index.js","../node_modules/bnc-onboard/node_modules/eth-json-rpc-errors/src/errors.js","../node_modules/bnc-onboard/node_modules/web3-provider-engine/util/estimate-gas.js"],"names":["createProvider","config","getAccounts","signTransaction","rpcUrl","processMessage","processPersonalMessage","signMessage","signPersonalMessage","idMgmt","HookedWalletSubprovider","rpcSubProvider","RpcSource","includes","concat","provider","Web3ProviderEngine","addProvider","SubscriptionSubprovider","FilterSubprovider","start","getRandomId","require","extend","module","exports","data","id","jsonrpc","params","createPayload","SubProvider","prototype","setEngine","engine","self","this","on","block","currentBlock","stop","handleRequest","payload","next","end","Error","emitPayload","cb","sendAsync","safeStringify","EthereumRpcError","code","message","Number","isInteger","undefined","serialized","stack","serialize","stringifyReplacer","EthereumProviderError","isValidEthProviderCode","_","value","EventEmitter","inherits","ethUtil","EthBlockTracker","map","eachSeries","Stoplight","opts","call","setMaxListeners","directProvider","_handleAsync","bind","blockTrackerProvider","_blockTracker","blockTracker","pollingInterval","setSkipCacheFlag","_ready","_providers","toBufferBlock","jsonBlock","number","toBuffer","hash","parentHash","nonce","mixHash","sha3Uncles","logsBloom","transactionsRoot","stateRoot","receiptsRoot","receiptRoot","miner","difficulty","totalDifficulty","size","extraData","gasLimit","gasUsed","timestamp","transactions","go","blockNumber","_getBlockByNumberWithRetry","err","emit","console","log","bufferBlock","_setCurrentBlock","_running","removeAllListeners","isRunning","source","index","splice","push","removeProvider","indexOf","send","await","Array","isArray","retriesRemaining","attemptRequest","_getBlockByNumber","afterRequest","setTimeout","req","method","skipCache","res","result","finished","currentProvider","error","_error","_result","fn","callback","resultObj","after","unshift","length","e","xhr","process","browser","Subprovider","ethErrors","serializeError","targetUrl","newPayload","uri","headers","body","JSON","stringify","rejectUnauthorized","timeout","statusCode","rpc","methodNotFound","msg","parse","errorValues","FALLBACK_ERROR_CODE","internal","FALLBACK_MESSAGE","FALLBACK_ERROR","getMessageFromCode","fallbackMessage","codeString","toString","isJsonRpcServerError","isValidCode","assignOriginalError","Object","assign","fallbackError","hasOwnProperty","originalError","JSON_RPC_SERVER_ERROR_MESSAGE","waterfall","parallel","sigUtil","Semaphore","estimateGas","hexRegex","nonceLock","processTransaction","processTypedMessage","approveTransaction","autoApprove","approveMessage","approvePersonalMessage","approveDecryptMessage","approveEncryptionPublicKey","approveTypedMessage","mustProvideInConstructor","decryptMessage","encryptionPublicKey","signTypedMessage","recoverPersonalSignature","publishTransaction","getGasPrice","toLowerCase","string","resemblesAddress","fixed","addHexPrefix","isValidAddress","resemblesData","isValidHex","slice","match","methodName","txParams","msgParams","extraParams","address","_parityRequests","_parityRequestCount","accounts","validateTransaction","processSignTransaction","from","validateMessage","first","warn","warning","validatePersonalMessage","validateDecryptMessage","processDecryptMessage","validateEncryptionPublicKey","processEncryptionPublicKey","signature","sig","second","validateTypedMessage","parityPostTransaction","parityPostSign","requestId","parityCheckRequest","account","didApprove","checkApproval","finalizeAndSubmitTx","finalizeTx","type","count","reqId","txHash","senderHex","validateSender","senderIsValid","senderAddress","take","fillInTxExtras","leave","signedTx","raw","tx","rawTx","tasks","gasPrice","gas","to","cloneTxParams","taskResults","ProviderSubprovider","createSubscriptionManager","SubscriptionsSubprovider","events","middleware","JsonRpcEngineMiddlewareSubprovider","constructorFn","_constructorFn","provEngNext","provEngEnd","handler","createFilterMiddleware","isLocked","once","canCache","cacheTypeForPayload","paramsWithoutBlockTag","blockTagParamIndex","cacheIdentifierForPayload","includeBlockRef","blockTagForPayload","Math","floor","MAX_SAFE_INTEGER","random","ERROR_CODES","getEthJsonRpcError","validateOpts","getEthProviderError","invalidRequest","invalidParams","server","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","userRejectedRequest","unauthorized","unsupportedMethod","custom"],"mappings":"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","file":"static/js/2.a35bf5da.chunk.js","sourcesContent":["import Web3ProviderEngine from 'web3-provider-engine';\nimport RpcSource from 'web3-provider-engine/subproviders/rpc';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SubscriptionSubprovider from 'web3-provider-engine/subproviders/subscriptions';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\n\nfunction createProvider(config) {\n  var getAccounts = config.getAccounts,\n      signTransaction = config.signTransaction,\n      rpcUrl = config.rpcUrl,\n      processMessage = config.processMessage,\n      processPersonalMessage = config.processPersonalMessage,\n      signMessage = config.signMessage,\n      signPersonalMessage = config.signPersonalMessage;\n  var idMgmt = getAccounts && new HookedWalletSubprovider({\n    getAccounts: getAccounts,\n    signTransaction: signTransaction,\n    processMessage: processMessage,\n    processPersonalMessage: processPersonalMessage,\n    signMessage: signMessage,\n    signPersonalMessage: signPersonalMessage\n  });\n  var rpcSubProvider = new RpcSource({\n    rpcUrl: rpcUrl.includes('http') ? rpcUrl : \"https://\".concat(rpcUrl)\n  });\n  var provider = new Web3ProviderEngine();\n  provider.addProvider(new SubscriptionSubprovider());\n  provider.addProvider(new FilterSubprovider());\n  idMgmt && provider.addProvider(idMgmt);\n  provider.addProvider(rpcSubProvider);\n  provider.start();\n  return provider;\n}\n\nexport default createProvider;","const getRandomId = require('./random-id.js')\nconst extend = require('xtend')\n\nmodule.exports = createPayload\n\n\nfunction createPayload(data){\n  return extend({\n    // defaults\n    id: getRandomId(),\n    jsonrpc: '2.0',\n    params: [],\n    // user-specified\n  }, data)\n}\n","const createPayload = require('../util/create-payload.js')\n\nmodule.exports = SubProvider\n\n// this is the base class for a subprovider -- mostly helpers\n\n\nfunction SubProvider() {\n\n}\n\nSubProvider.prototype.setEngine = function(engine) {\n  const self = this\n  if (self.engine) return\n  self.engine = engine\n  engine.on('block', function(block) {\n    self.currentBlock = block\n  })\n\n  engine.on('start', function () {\n    self.start()\n  })\n\n  engine.on('stop', function () {\n    self.stop()\n  })\n}\n\nSubProvider.prototype.handleRequest = function(payload, next, end) {\n  throw new Error('Subproviders should override `handleRequest`.')\n}\n\nSubProvider.prototype.emitPayload = function(payload, cb){\n  const self = this\n  self.engine.sendAsync(createPayload(payload), cb)\n}\n\n// dummies for overriding\n\nSubProvider.prototype.stop = function () {}\n\nSubProvider.prototype.start = function () {}\n","\nconst safeStringify = require('fast-safe-stringify')\n\n/**\n * @class JsonRpcError\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP 1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor (code, message, data) {\n\n    if (!Number.isInteger(code)) throw new Error(\n      '\"code\" must be an integer.'\n    )\n    if (!message || typeof message !== 'string') throw new Error(\n      '\"message\" must be a nonempty string.'\n    )\n\n    super(message)\n    this.code = code\n    if (data !== undefined) this.data = data\n  }\n\n  /**\n   * Returns a plain object with all public class properties.\n   * \n   * @returns {object} The serialized error. \n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message,\n    }\n    if (this.data !== undefined) serialized.data = this.data\n    if (this.stack) serialized.stack = this.stack\n    return serialized\n  }\n\n  /**\n   * Return a string representation of the serialized error, omitting\n   * any circular references.\n   * \n   * @returns {string} The serialized error as a string.\n   */\n  toString() {\n    return safeStringify(\n      this.serialize(),\n      stringifyReplacer,\n      2\n    )\n  }\n}\n\n/**\n * @class EthereumRpcError\n * Error subclass implementing Ethereum Provider errors per EIP 1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code, in the [ 1000 <= 4999 ] range.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor(code, message, data) {\n\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      )\n    }\n\n    super(code, message, data)\n  }\n}\n\n// Internal\n\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1000 && code <= 4999\n}\n\nfunction stringifyReplacer(_, value) {\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\n\n// Exports\n\nmodule.exports =  {\n  EthereumRpcError,\n  EthereumProviderError\n}\n","const EventEmitter = require('events').EventEmitter\nconst inherits = require('util').inherits\nconst ethUtil = require('ethereumjs-util')\nconst EthBlockTracker = require('eth-block-tracker')\nconst map = require('async/map')\nconst eachSeries = require('async/eachSeries')\nconst Stoplight = require('./util/stoplight.js')\nconst cacheUtils = require('./util/rpc-cache-utils.js')\nconst createPayload = require('./util/create-payload.js')\nconst noop = function(){}\n\nmodule.exports = Web3ProviderEngine\n\n\ninherits(Web3ProviderEngine, EventEmitter)\n\nfunction Web3ProviderEngine(opts) {\n  const self = this\n  EventEmitter.call(self)\n  self.setMaxListeners(30)\n  // parse options\n  opts = opts || {}\n\n  // block polling\n  const directProvider = { sendAsync: self._handleAsync.bind(self) }\n  const blockTrackerProvider = opts.blockTrackerProvider || directProvider\n  self._blockTracker = opts.blockTracker || new EthBlockTracker({\n    provider: blockTrackerProvider,\n    pollingInterval: opts.pollingInterval || 4000,\n    setSkipCacheFlag: true,\n  })\n\n  // set initialization blocker\n  self._ready = new Stoplight()\n\n  // local state\n  self.currentBlock = null\n  self._providers = []\n}\n\n// public\n\nWeb3ProviderEngine.prototype.start = function(cb = noop){\n  const self = this\n\n  // trigger start\n  self._ready.go()\n\n  // on new block, request block body and emit as events\n  self._blockTracker.on('latest', (blockNumber) => {\n    // get block body\n    self._getBlockByNumberWithRetry(blockNumber, (err, block) => {\n      if (err) {\n        this.emit('error', err)\n        return\n      }\n      if (!block) {\n        console.log(block)\n        this.emit('error', new Error(\"Could not find block\"))\n        return\n      }\n      const bufferBlock = toBufferBlock(block)\n      // set current + emit \"block\" event\n      self._setCurrentBlock(bufferBlock)\n      // emit other events\n      self.emit('rawBlock', block)\n      self.emit('latest', block)\n    })\n  })\n\n  // forward other events\n  self._blockTracker.on('sync', self.emit.bind(self, 'sync'))\n  self._blockTracker.on('error', self.emit.bind(self, 'error'))\n\n  // update state\n  self._running = true\n  // signal that we started\n  self.emit('start')\n}\n\nWeb3ProviderEngine.prototype.stop = function(){\n  const self = this\n  // stop block polling by removing event listeners\n  self._blockTracker.removeAllListeners()\n  // update state\n  self._running = false\n  // signal that we stopped\n  self.emit('stop')\n}\n\nWeb3ProviderEngine.prototype.isRunning = function(){\n  const self = this\n  return self._running\n}\n\nWeb3ProviderEngine.prototype.addProvider = function(source, index){\n  const self = this\n  if (typeof index === 'number') {\n    self._providers.splice(index, 0, source)\n  } else {\n    self._providers.push(source)\n  }\n  source.setEngine(this)\n}\n\nWeb3ProviderEngine.prototype.removeProvider = function(source){\n  const self = this\n  const index = self._providers.indexOf(source)\n  if (index < 0) throw new Error('Provider not found.')\n  self._providers.splice(index, 1)\n}\n\nWeb3ProviderEngine.prototype.send = function(payload){\n  throw new Error('Web3ProviderEngine does not support synchronous requests.')\n}\n\nWeb3ProviderEngine.prototype.sendAsync = function(payload, cb){\n  const self = this\n  self._ready.await(function(){\n\n    if (Array.isArray(payload)) {\n      // handle batch\n      map(payload, self._handleAsync.bind(self), cb)\n    } else {\n      // handle single\n      self._handleAsync(payload, cb)\n    }\n\n  })\n}\n\n// private\n\nWeb3ProviderEngine.prototype._getBlockByNumberWithRetry = function(blockNumber, cb) {\n  const self = this\n\n  let retriesRemaining = 5\n\n  attemptRequest()\n  return\n\n  function attemptRequest () {\n    self._getBlockByNumber(blockNumber, afterRequest)\n  }\n\n  function afterRequest (err, block) {\n    // anomalous error occurred\n    if (err) return cb(err)\n    // block not ready yet\n    if (!block) {\n      if (retriesRemaining > 0) {\n        // wait 1s then try again\n        retriesRemaining--\n        setTimeout(function () {\n          attemptRequest()\n        }, 1000)\n        return\n      } else {\n        // give up, return a null block\n        cb(null, null)\n        return\n      }\n    }\n    // otherwise return result\n    cb(null, block)\n    return\n  }\n}\n\n\nWeb3ProviderEngine.prototype._getBlockByNumber = function(blockNumber, cb) {\n  const req = createPayload({ method: 'eth_getBlockByNumber', params: [blockNumber, false], skipCache: true })\n  this._handleAsync(req, (err, res) => {\n    if (err) return cb(err)\n    return cb(null, res.result)\n  })\n}\n\nWeb3ProviderEngine.prototype._handleAsync = function(payload, finished) {\n  var self = this\n  var currentProvider = -1\n  var result = null\n  var error = null\n\n  var stack = []\n\n  next()\n\n  function next(after) {\n    currentProvider += 1\n    stack.unshift(after)\n\n    // Bubbled down as far as we could go, and the request wasn't\n    // handled. Return an error.\n    if (currentProvider >= self._providers.length) {\n      end(new Error('Request for method \"' + payload.method + '\" not handled by any subprovider. Please check your subprovider configuration to ensure this method is handled.'))\n    } else {\n      try {\n        var provider = self._providers[currentProvider]\n        provider.handleRequest(payload, next, end)\n      } catch (e) {\n        end(e)\n      }\n    }\n  }\n\n  function end(_error, _result) {\n    error = _error\n    result = _result\n\n    eachSeries(stack, function(fn, callback) {\n\n      if (fn) {\n        fn(error, result, callback)\n      } else {\n        callback()\n      }\n    }, function() {\n\n      var resultObj = {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      }\n\n      if (error != null) {\n        resultObj.error = {\n          message: error.stack || error.message || error,\n          code: -32000\n        }\n        // respond with both error formats\n        finished(error, resultObj)\n      } else {\n        finished(null, resultObj)\n      }\n    })\n  }\n}\n\n//\n// from remote-data\n//\n\nWeb3ProviderEngine.prototype._setCurrentBlock = function(block){\n  const self = this\n  self.currentBlock = block\n  self.emit('block', block)\n}\n\n// util\n\nfunction toBufferBlock (jsonBlock) {\n  return {\n    number:           ethUtil.toBuffer(jsonBlock.number),\n    hash:             ethUtil.toBuffer(jsonBlock.hash),\n    parentHash:       ethUtil.toBuffer(jsonBlock.parentHash),\n    nonce:            ethUtil.toBuffer(jsonBlock.nonce),\n    mixHash:          ethUtil.toBuffer(jsonBlock.mixHash),\n    sha3Uncles:       ethUtil.toBuffer(jsonBlock.sha3Uncles),\n    logsBloom:        ethUtil.toBuffer(jsonBlock.logsBloom),\n    transactionsRoot: ethUtil.toBuffer(jsonBlock.transactionsRoot),\n    stateRoot:        ethUtil.toBuffer(jsonBlock.stateRoot),\n    receiptsRoot:     ethUtil.toBuffer(jsonBlock.receiptRoot || jsonBlock.receiptsRoot),\n    miner:            ethUtil.toBuffer(jsonBlock.miner),\n    difficulty:       ethUtil.toBuffer(jsonBlock.difficulty),\n    totalDifficulty:  ethUtil.toBuffer(jsonBlock.totalDifficulty),\n    size:             ethUtil.toBuffer(jsonBlock.size),\n    extraData:        ethUtil.toBuffer(jsonBlock.extraData),\n    gasLimit:         ethUtil.toBuffer(jsonBlock.gasLimit),\n    gasUsed:          ethUtil.toBuffer(jsonBlock.gasUsed),\n    timestamp:        ethUtil.toBuffer(jsonBlock.timestamp),\n    transactions:     jsonBlock.transactions,\n  }\n}\n","const xhr = process.browser ? require('xhr') : require('request')\nconst inherits = require('util').inherits\nconst createPayload = require('../util/create-payload.js')\nconst Subprovider = require('./subprovider.js')\nconst { ethErrors, serializeError } = require('eth-json-rpc-errors')\n\n\nmodule.exports = RpcSource\n\ninherits(RpcSource, Subprovider)\n\nfunction RpcSource(opts) {\n  const self = this\n  self.rpcUrl = opts.rpcUrl\n}\n\nRpcSource.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  const targetUrl = self.rpcUrl\n\n  // overwrite id to conflict with other concurrent users\n  let newPayload = createPayload(payload)\n\n  xhr({\n    uri: targetUrl,\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newPayload),\n    rejectUnauthorized: false,\n    timeout: 20000,\n  }, function(err, res, body) {\n    if (err) return end(serializeError(err))\n\n    // check for error code\n    switch (res.statusCode) {\n      case 405:\n        return end(ethErrors.rpc.methodNotFound())\n      case 504: // Gateway timeout\n        return (function(){\n          let msg = `Gateway timeout. The request took too long to process. `\n          msg += `This can happen when querying logs over too wide a block range.`\n          const err = new Error(msg)\n          return end(serializeError(err))\n        })()\n      case 429: // Too many requests (rate limiting)\n        return (function(){\n          const err = new Error(`Too Many Requests`)\n          return end(serializeError(err))\n        })()\n      default:\n        if (res.statusCode != 200) {\n          const msg = 'Unknown Error: ' + res.body\n          const err = new Error(msg)\n          return end(serializeError(err))\n        }\n    }\n\n    // parse response\n    let data\n    try {\n      data = JSON.parse(body)\n    } catch (err) {\n      console.error(err.stack)\n      return end(serializeError(err))\n    }\n    if (data.error) return end(data.error)\n\n    end(null, data.result)\n  })\n}\n","\nconst errorValues = require('./errorValues.json')\nconst FALLBACK_ERROR_CODE = require('./errorCodes.json').rpc.internal\nconst { EthereumRpcError } = require('./classes')\n\nconst JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.'\n\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.'\n\nconst FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n}\n\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n * \n * @param {number} code - The integer error code\n * @param {string} fallbackMessage - The fallback message\n * @return {string} The corresponding message or the fallback message\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n\n  if (Number.isInteger(code)) {\n\n    const codeString = code.toString()\n    if (errorValues[codeString]) return errorValues[codeString].message\n\n    if (isJsonRpcServerError(code)) return JSON_RPC_SERVER_ERROR_MESSAGE\n\n    // TODO: allow valid codes and messages to be extended\n    // // EIP 1193 Status Codes\n    // if (code >= 4000 && code <= 4999) return Something?\n  }\n  return fallbackMessage\n}\n\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n * \n * @param {number} code - The code to check\n * @return {boolean} true if the code is valid, false otherwise.\n */\nfunction isValidCode(code) {\n\n  if (!Number.isInteger(code)) return false\n\n  const codeString = code.toString()\n  if (errorValues[codeString]) return true\n\n  if (isJsonRpcServerError(code)) return true\n\n  // TODO: allow valid codes and messages to be extended\n  // // EIP 1193 Status Codes\n  // if (code >= 4000 && code <= 4999) return true\n\n  return false\n}\n\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n * Adds a 'stack' property if it exists on the given error.\n *\n * @param {any} error - The error to serialize.\n * @param {object} fallbackError - The custom fallback error values if the\n * given error is invalid.\n * @return {object} A standardized error object.\n */\nfunction serializeError (error, fallbackError = FALLBACK_ERROR) {\n\n  if (\n    !fallbackError || \n    !Number.isInteger(fallbackError.code) ||\n    typeof fallbackError.message !== 'string'\n  ) {\n    throw new Error(\n      'fallbackError must contain integer number code and string message.'\n    )\n  }\n\n  if (error instanceof EthereumRpcError) {\n    return error.serialize()\n  }\n\n  const serialized = {}\n\n  if (error && isValidCode(error.code)) {\n\n    serialized.code = error.code\n\n    if (error.message && typeof error.message === 'string') {\n      serialized.message = error.message\n      if (error.hasOwnProperty('data')) serialized.data = error.data\n    } else {\n      serialized.message = getMessageFromCode(serialized.code)\n      serialized.data = { originalError: assignOriginalError(error) }\n    }\n\n  } else {\n    serialized.code = fallbackError.code\n    serialized.message = (\n      error && error.message\n        ? error.message\n        : fallbackError.message\n    )\n    serialized.data = { originalError: assignOriginalError(error) }\n  }\n\n  if (error && error.stack) serialized.stack = error.stack\n  return serialized\n}\n\n// Internal\n\nfunction isJsonRpcServerError (code) {\n  return code >= -32099 && code <= -32000\n}\n\nfunction assignOriginalError (error) {\n  if (error && typeof error === 'object' && !Array.isArray(error)) {\n    return Object.assign({}, error)\n  }\n  return error\n}\n\n// Exports\n\nmodule.exports = {\n  getMessageFromCode,\n  isValidCode,\n  serializeError,\n  JSON_RPC_SERVER_ERROR_MESSAGE,\n}\n","/*\n * Emulate 'eth_accounts' / 'eth_sendTransaction' using 'eth_sendRawTransaction'\n *\n * The two callbacks a user needs to implement are:\n * - getAccounts() -- array of addresses supported\n * - signTransaction(tx) -- sign a raw transaction object\n */\n\nconst waterfall = require('async/waterfall')\nconst parallel = require('async/parallel')\nconst inherits = require('util').inherits\nconst ethUtil = require('ethereumjs-util')\nconst sigUtil = require('eth-sig-util')\nconst extend = require('xtend')\nconst Semaphore = require('semaphore')\nconst Subprovider = require('./subprovider.js')\nconst estimateGas = require('../util/estimate-gas.js')\nconst hexRegex = /^[0-9A-Fa-f]+$/g\n\nmodule.exports = HookedWalletSubprovider\n\n// handles the following RPC methods:\n//   eth_coinbase\n//   eth_accounts\n//   eth_sendTransaction\n//   eth_sign\n//   eth_signTypedData\n//   eth_signTypedData_v3\n//   eth_signTypedData_v4\n//   personal_sign\n//   eth_decryptMessage\n//   encryption_public_key\n//   personal_ecRecover\n//   parity_postTransaction\n//   parity_checkRequest\n//   parity_defaultAccount\n\n//\n// Tx Signature Flow\n//\n// handleRequest: eth_sendTransaction\n//   validateTransaction (basic validity check)\n//     validateSender (checks that sender is in accounts)\n//   processTransaction (sign tx and submit to network)\n//     approveTransaction (UI approval hook)\n//     checkApproval\n//     finalizeAndSubmitTx (tx signing)\n//       nonceLock.take (bottle neck to ensure atomic nonce)\n//         fillInTxExtras (set fallback gasPrice, nonce, etc)\n//         signTransaction (perform the signature)\n//         publishTransaction (publish signed tx to network)\n//\n\n\ninherits(HookedWalletSubprovider, Subprovider)\n\nfunction HookedWalletSubprovider(opts){\n  const self = this\n  // control flow\n  self.nonceLock = Semaphore(1)\n\n  // data lookup\n  if (opts.getAccounts) self.getAccounts = opts.getAccounts\n  // high level override\n  if (opts.processTransaction) self.processTransaction = opts.processTransaction\n  if (opts.processMessage) self.processMessage = opts.processMessage\n  if (opts.processPersonalMessage) self.processPersonalMessage = opts.processPersonalMessage\n  if (opts.processTypedMessage) self.processTypedMessage = opts.processTypedMessage\n  // approval hooks\n  self.approveTransaction = opts.approveTransaction || self.autoApprove\n  self.approveMessage = opts.approveMessage || self.autoApprove\n  self.approvePersonalMessage = opts.approvePersonalMessage || self.autoApprove\n  self.approveDecryptMessage = opts.approveDecryptMessage || self.autoApprove\n  self.approveEncryptionPublicKey = opts.approveEncryptionPublicKey || self.autoApprove\n  self.approveTypedMessage = opts.approveTypedMessage || self.autoApprove\n  // actually perform the signature\n  if (opts.signTransaction) self.signTransaction = opts.signTransaction  || mustProvideInConstructor('signTransaction')\n  if (opts.signMessage) self.signMessage = opts.signMessage  || mustProvideInConstructor('signMessage')\n  if (opts.signPersonalMessage) self.signPersonalMessage = opts.signPersonalMessage  || mustProvideInConstructor('signPersonalMessage')\n  if (opts.decryptMessage) self.decryptMessage = opts.decryptMessage  || mustProvideInConstructor('decryptMessage')\n  if (opts.encryptionPublicKey) self.encryptionPublicKey = opts.encryptionPublicKey  || mustProvideInConstructor('encryptionPublicKey')\n  if (opts.signTypedMessage) self.signTypedMessage = opts.signTypedMessage  || mustProvideInConstructor('signTypedMessage')\n  if (opts.recoverPersonalSignature) self.recoverPersonalSignature = opts.recoverPersonalSignature\n  // publish to network\n  if (opts.publishTransaction) self.publishTransaction = opts.publishTransaction\n  // gas options\n  self.estimateGas = opts.estimateGas || self.estimateGas\n  self.getGasPrice = opts.getGasPrice || self.getGasPrice\n}\n\nHookedWalletSubprovider.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  self._parityRequests = {}\n  self._parityRequestCount = 0\n\n  // switch statement is not block scoped\n  // sp we cant repeat var declarations\n  let txParams, msgParams, extraParams\n  let message, address\n\n  switch(payload.method) {\n\n    case 'eth_coinbase':\n      // process normally\n      self.getAccounts(function(err, accounts){\n        if (err) return end(err)\n        let result = accounts[0] || null\n        end(null, result)\n      })\n      return\n\n    case 'eth_accounts':\n      // process normally\n      self.getAccounts(function(err, accounts){\n        if (err) return end(err)\n        end(null, accounts)\n      })\n      return\n\n    case 'eth_sendTransaction':\n      txParams = payload.params[0]\n      waterfall([\n        (cb) => self.validateTransaction(txParams, cb),\n        (cb) => self.processTransaction(txParams, cb),\n      ], end)\n      return\n\n    case 'eth_signTransaction':\n      txParams = payload.params[0]\n      waterfall([\n        (cb) => self.validateTransaction(txParams, cb),\n        (cb) => self.processSignTransaction(txParams, cb),\n      ], end)\n      return\n\n    case 'eth_sign':\n      // process normally\n      address = payload.params[0]\n      message = payload.params[1]\n      // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n      // good place for metadata\n      extraParams = payload.params[2] || {}\n      msgParams = extend(extraParams, {\n        from: address,\n        data: message,\n      })\n      waterfall([\n        (cb) => self.validateMessage(msgParams, cb),\n        (cb) => self.processMessage(msgParams, cb),\n      ], end)\n      return\n\n    case 'personal_sign':\n      return (function(){\n        // process normally\n        const first = payload.params[0]\n        const second = payload.params[1]\n\n        // We initially incorrectly ordered these parameters.\n        // To gracefully respect users who adopted this API early,\n        // we are currently gracefully recovering from the wrong param order\n        // when it is clearly identifiable.\n        //\n        // That means when the first param is definitely an address,\n        // and the second param is definitely not, but is hex.\n        if (resemblesData(second) && resemblesAddress(first)) {\n          let warning = `The eth_personalSign method requires params ordered `\n          warning += `[message, address]. This was previously handled incorrectly, `\n          warning += `and has been corrected automatically. `\n          warning += `Please switch this param order for smooth behavior in the future.`\n          console.warn(warning)\n\n          address = payload.params[0]\n          message = payload.params[1]\n        } else {\n          message = payload.params[0]\n          address = payload.params[1]\n        }\n\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        // good place for metadata\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          from: address,\n          data: message,\n        })\n        waterfall([\n          (cb) => self.validatePersonalMessage(msgParams, cb),\n          (cb) => self.processPersonalMessage(msgParams, cb),\n        ], end)\n      })()\n\n    case 'eth_decryptMessage':\n      return (function(){\n        // process normally\n        const first = payload.params[0]\n        const second = payload.params[1]\n\n        // We initially incorrectly ordered these parameters.\n        // To gracefully respect users who adopted this API early,\n        // we are currently gracefully recovering from the wrong param order\n        // when it is clearly identifiable.\n        //\n        // That means when the first param is definitely an address,\n        // and the second param is definitely not, but is hex.\n        if (resemblesData(second) && resemblesAddress(first)) {\n          let warning = `The eth_decryptMessage method requires params ordered `\n          warning += `[message, address]. This was previously handled incorrectly, `\n          warning += `and has been corrected automatically. `\n          warning += `Please switch this param order for smooth behavior in the future.`\n          console.warn(warning)\n\n          address = payload.params[0]\n          message = payload.params[1]\n        } else {\n          message = payload.params[0]\n          address = payload.params[1]\n        }\n\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        // good place for metadata\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          from: address,\n          data: message,\n        })\n        waterfall([\n          (cb) => self.validateDecryptMessage(msgParams, cb),\n          (cb) => self.processDecryptMessage(msgParams, cb),\n        ], end)\n      })()\n      \n    case 'encryption_public_key':\n      return (function(){\n        const address = payload.params[0]\n        \n        waterfall([\n          (cb) => self.validateEncryptionPublicKey(address, cb),\n          (cb) => self.processEncryptionPublicKey(address, cb),\n        ], end)\n      })()\n      \n    case 'personal_ecRecover':\n      return (function(){    \n        message = payload.params[0]\n        let signature = payload.params[1]\n        // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n        // good place for metadata\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          sig: signature,\n          data: message,\n        })\n        self.recoverPersonalSignature(msgParams, end)\n      })()\n\n    case 'eth_signTypedData':\n    case 'eth_signTypedData_v3':\n    case 'eth_signTypedData_v4':\n      return (function(){ \n        // process normally\n      \n        const first = payload.params[0]\n        const second = payload.params[1]\n\n        if (resemblesAddress(first)) {\n          address = first\n          message = second\n        } else {\n          message = first\n          address = second\n        }\n\n        extraParams = payload.params[2] || {}\n        msgParams = extend(extraParams, {\n          from: address,\n          data: message,\n        })\n        waterfall([\n          (cb) => self.validateTypedMessage(msgParams, cb),\n          (cb) => self.processTypedMessage(msgParams, cb),\n        ], end)\n      })()\n\n    case 'parity_postTransaction':\n      txParams = payload.params[0]\n      self.parityPostTransaction(txParams, end)\n      return\n\n    case 'parity_postSign':\n      address = payload.params[0]\n      message = payload.params[1]\n      self.parityPostSign(address, message, end)\n      return\n\n    case 'parity_checkRequest':\n      return (function(){\n        const requestId = payload.params[0]\n        self.parityCheckRequest(requestId, end)\n      })()\n\n    case 'parity_defaultAccount':\n      self.getAccounts(function(err, accounts){\n        if (err) return end(err)\n        const account = accounts[0] || null\n        end(null, account)\n      })\n      return\n\n    default:\n      next()\n      return\n\n  }\n}\n\n//\n// data lookup\n//\n\nHookedWalletSubprovider.prototype.getAccounts = function(cb) {\n  cb(null, [])\n}\n\n\n//\n// \"process\" high level flow\n//\n\nHookedWalletSubprovider.prototype.processTransaction = function(txParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveTransaction(txParams, cb),\n    (didApprove, cb) => self.checkApproval('transaction', didApprove, cb),\n    (cb) => self.finalizeAndSubmitTx(txParams, cb),\n  ], cb)\n}\n\n\nHookedWalletSubprovider.prototype.processSignTransaction = function(txParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveTransaction(txParams, cb),\n    (didApprove, cb) => self.checkApproval('transaction', didApprove, cb),\n    (cb) => self.finalizeTx(txParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('message', didApprove, cb),\n    (cb) => self.signMessage(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processPersonalMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approvePersonalMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('message', didApprove, cb),\n    (cb) => self.signPersonalMessage(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processDecryptMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveDecryptMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('decryptMessage', didApprove, cb),\n    (cb) => self.decryptMessage(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processEncryptionPublicKey = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveEncryptionPublicKey(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('encryptionPublicKey', didApprove, cb),\n    (cb) => self.encryptionPublicKey(msgParams, cb),\n  ], cb)\n}\n\nHookedWalletSubprovider.prototype.processTypedMessage = function(msgParams, cb) {\n  const self = this\n  waterfall([\n    (cb) => self.approveTypedMessage(msgParams, cb),\n    (didApprove, cb) => self.checkApproval('message', didApprove, cb),\n    (cb) => self.signTypedMessage(msgParams, cb),\n  ], cb)\n}\n\n//\n// approval\n//\n\nHookedWalletSubprovider.prototype.autoApprove = function(txParams, cb) {\n  cb(null, true)\n}\n\nHookedWalletSubprovider.prototype.checkApproval = function(type, didApprove, cb) {\n  cb( didApprove ? null : new Error('User denied '+type+' signature.') )\n}\n\n//\n// parity\n//\n\nHookedWalletSubprovider.prototype.parityPostTransaction = function(txParams, cb) {\n  const self = this\n\n  // get next id\n  const count = self._parityRequestCount\n  const reqId = `0x${count.toString(16)}`\n  self._parityRequestCount++\n\n  self.emitPayload({\n    method: 'eth_sendTransaction',\n    params: [txParams],\n  }, function(error, res){\n    if (error) {\n      self._parityRequests[reqId] = { error }\n      return\n    }\n    const txHash = res.result\n    self._parityRequests[reqId] = txHash\n  })\n\n  cb(null, reqId)\n}\n\n\nHookedWalletSubprovider.prototype.parityPostSign = function(address, message, cb) {\n  const self = this\n\n  // get next id\n  const count = self._parityRequestCount\n  const reqId = `0x${count.toString(16)}`\n  self._parityRequestCount++\n\n  self.emitPayload({\n    method: 'eth_sign',\n    params: [address, message],\n  }, function(error, res){\n    if (error) {\n      self._parityRequests[reqId] = { error }\n      return\n    }\n    const result = res.result\n    self._parityRequests[reqId] = result\n  })\n\n  cb(null, reqId)\n}\n\nHookedWalletSubprovider.prototype.parityCheckRequest = function(reqId, cb) {\n  const self = this\n  const result = self._parityRequests[reqId] || null\n  // tx not handled yet\n  if (!result) return cb(null, null)\n  // tx was rejected (or other error)\n  if (result.error) return cb(result.error)\n  // tx sent\n  cb(null, result)\n}\n\n//\n// signature and recovery\n//\n\nHookedWalletSubprovider.prototype.recoverPersonalSignature = function(msgParams, cb) {\n  let senderHex\n  try {\n    senderHex = sigUtil.recoverPersonalSignature(msgParams)\n  } catch (err) {\n    return cb(err)\n  }\n  cb(null, senderHex)\n}\n\n//\n// validation\n//\n\nHookedWalletSubprovider.prototype.validateTransaction = function(txParams, cb){\n  const self = this\n  // shortcut: undefined sender is invalid\n  if (txParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign transaction.`))\n  self.validateSender(txParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign transaction for this address: \"${txParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateMessage = function(msgParams, cb){\n  const self = this\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign message.`))\n  self.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validatePersonalMessage = function(msgParams, cb){\n  const self = this\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign personal message.`))\n  if (msgParams.data === undefined) return cb(new Error(`Undefined message - message required to sign personal message.`))\n  if (!isValidHex(msgParams.data)) return cb(new Error(`HookedWalletSubprovider - validateMessage - message was not encoded as hex.`))\n  self.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateDecryptMessage = function(msgParams, cb){\n  const self = this\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to decrypt message.`))\n  if (msgParams.data === undefined) return cb(new Error(`Undefined message - message required to decrypt message.`))\n  if (!isValidHex(msgParams.data)) return cb(new Error(`HookedWalletSubprovider - validateDecryptMessage - message was not encoded as hex.`))\n  self.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to decrypt message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateEncryptionPublicKey = function(address, cb){\n  const self = this\n\n  self.validateSender(address, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to obtain encryption public key for this address: \"${address}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateTypedMessage = function(msgParams, cb){\n  if (msgParams.from === undefined) return cb(new Error(`Undefined address - from address required to sign typed data.`))\n  if (msgParams.data === undefined) return cb(new Error(`Undefined data - message required to sign typed data.`))\n  this.validateSender(msgParams.from, function(err, senderIsValid){\n    if (err) return cb(err)\n    if (!senderIsValid) return cb(new Error(`Unknown address - unable to sign message for this address: \"${msgParams.from}\"`))\n    cb()\n  })\n}\n\nHookedWalletSubprovider.prototype.validateSender = function(senderAddress, cb){\n  const self = this\n  // shortcut: undefined sender is invalid\n  if (!senderAddress) return cb(null, false)\n  self.getAccounts(function(err, accounts){\n    if (err) return cb(err)\n    const senderIsValid = (accounts.map(toLowerCase).indexOf(senderAddress.toLowerCase()) !== -1)\n    cb(null, senderIsValid)\n  })\n}\n\n//\n// tx helpers\n//\n\nHookedWalletSubprovider.prototype.finalizeAndSubmitTx = function(txParams, cb) {\n  const self = this\n  // can only allow one tx to pass through this flow at a time\n  // so we can atomically consume a nonce\n  self.nonceLock.take(function(){\n    waterfall([\n      self.fillInTxExtras.bind(self, txParams),\n      self.signTransaction.bind(self),\n      self.publishTransaction.bind(self),\n    ], function(err, txHash){\n      self.nonceLock.leave()\n      if (err) return cb(err)\n      cb(null, txHash)\n    })\n  })\n}\n\nHookedWalletSubprovider.prototype.finalizeTx = function(txParams, cb) {\n  const self = this\n  // can only allow one tx to pass through this flow at a time\n  // so we can atomically consume a nonce\n  self.nonceLock.take(function(){\n    waterfall([\n      self.fillInTxExtras.bind(self, txParams),\n      self.signTransaction.bind(self),\n    ], function(err, signedTx){\n      self.nonceLock.leave()\n      if (err) return cb(err)\n      cb(null, {raw: signedTx, tx: txParams})\n    })\n  })\n}\n\nHookedWalletSubprovider.prototype.publishTransaction = function(rawTx, cb) {\n  const self = this\n  self.emitPayload({\n    method: 'eth_sendRawTransaction',\n    params: [rawTx],\n  }, function(err, res){\n    if (err) return cb(err)\n    cb(null, res.result)\n  })\n}\n\nHookedWalletSubprovider.prototype.estimateGas = function(txParams, cb) {\n  const self = this\n  estimateGas(self.engine, txParams, cb)\n}\n\nHookedWalletSubprovider.prototype.getGasPrice = function(cb) {\n  const self = this\n  self.emitPayload({ method: 'eth_gasPrice', params: [] }, function (err, res) {\n    if (err) return cb(err)\n    cb(null, res.result)\n  })\n}\n\nHookedWalletSubprovider.prototype.fillInTxExtras = function(txParams, cb){\n  const self = this\n  const address = txParams.from\n  // console.log('fillInTxExtras - address:', address)\n\n  const tasks = {}\n\n  if (txParams.gasPrice === undefined) {\n    // console.log(\"need to get gasprice\")\n    tasks.gasPrice = self.getGasPrice.bind(self)\n  }\n\n  if (txParams.nonce === undefined) {\n    // console.log(\"need to get nonce\")\n    tasks.nonce = self.emitPayload.bind(self, { method: 'eth_getTransactionCount', params: [address, 'pending'] })\n  }\n\n  if (txParams.gas === undefined) {\n    // console.log(\"need to get gas\")\n    tasks.gas = self.estimateGas.bind(self, cloneTxParams(txParams))\n  }\n\n  parallel(tasks, function(err, taskResults) {\n    if (err) return cb(err)\n\n    const result = {}\n    if (taskResults.gasPrice) result.gasPrice = taskResults.gasPrice\n    if (taskResults.nonce) result.nonce = taskResults.nonce.result\n    if (taskResults.gas) result.gas = taskResults.gas\n\n    cb(null, extend(txParams, result))\n  })\n}\n\n// util\n\n// we use this to clean any custom params from the txParams\nfunction cloneTxParams(txParams){\n  return {\n    from: txParams.from,\n    to: txParams.to,\n    value: txParams.value,\n    data: txParams.data,\n    gas: txParams.gas,\n    gasPrice: txParams.gasPrice,\n    nonce: txParams.nonce,\n  }\n}\n\nfunction toLowerCase(string){\n  return string.toLowerCase()\n}\n\nfunction resemblesAddress (string) {\n  const fixed = ethUtil.addHexPrefix(string)\n  const isValid = ethUtil.isValidAddress(fixed)\n  return isValid\n}\n\n// Returns true if resembles hex data\n// but definitely not a valid address.\nfunction resemblesData (string) {\n  const fixed = ethUtil.addHexPrefix(string)\n  const isValidAddress = ethUtil.isValidAddress(fixed)\n  return !isValidAddress && isValidHex(string)\n}\n\nfunction isValidHex(data) {\n  const isString = typeof data === 'string'\n  if (!isString) return false\n  const isHexPrefixed = data.slice(0,2) === '0x'\n  if (!isHexPrefixed) return false\n  const nonPrefixed = data.slice(2)\n  const isValid = nonPrefixed.match(hexRegex)\n  return isValid\n}\n\nfunction mustProvideInConstructor(methodName) {\n  return function(params, cb) {\n    cb(new Error('ProviderEngine - HookedWalletSubprovider - Must provide \"' + methodName + '\" fn in constructor options'))\n  }\n}\n","const ProviderSubprovider = require('./json-rpc-engine-middleware')\nconst createSubscriptionManager = require('eth-json-rpc-filters/subscriptionManager')\n\nclass SubscriptionsSubprovider extends ProviderSubprovider {\n  constructor() {\n    super(({ blockTracker, provider, engine }) => {\n      const { events, middleware } = createSubscriptionManager({ blockTracker, provider })\n      // forward subscription events on the engine\n      events.on('notification', (data) => engine.emit('data', null, data))\n      // return the subscription install/remove middleware\n      return middleware\n    })\n  }\n}\n\nmodule.exports = SubscriptionsSubprovider\n","const Subprovider = require('./subprovider.js')\n\n// wraps a json-rpc-engine middleware in a subprovider interface\n\nclass JsonRpcEngineMiddlewareSubprovider extends Subprovider {\n\n  // take a constructorFn to call once we have a reference to the engine\n  constructor (constructorFn) {\n    super()\n    if (!constructorFn) throw new Error('JsonRpcEngineMiddlewareSubprovider - no constructorFn specified')\n    this._constructorFn = constructorFn\n  }\n\n  // this is called once the subprovider has been added to the provider engine\n  setEngine (engine) {\n    if (this.middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - subprovider added to engine twice')\n    const blockTracker = engine._blockTracker\n    const middleware = this._constructorFn({ engine, provider: engine, blockTracker })\n    if (!middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - _constructorFn did not return middleware')\n    if (typeof middleware !== 'function') throw new Error('JsonRpcEngineMiddlewareSubprovider - specified middleware is not a function')\n    this.middleware = middleware\n  }\n\n  handleRequest (req, provEngNext, provEngEnd) {\n    const res = { id: req.id }\n    this.middleware(req, res, middlewareNext, middlewareEnd)\n\n    function middlewareNext (handler) {\n      provEngNext((err, result, cb) => {\n        // update response object with result or error\n        if (err) {\n          delete res.result\n          res.error = { message: err.message || err }\n        } else {\n          res.result = result\n        }\n        // call middleware's next handler (even if error)\n        if (handler) {\n          handler(cb)\n        } else {\n          cb()\n        }\n      })\n    }\n\n    function middlewareEnd (err) {\n      if (err) return provEngEnd(err)\n      provEngEnd(null, res.result)\n    }\n  }\n\n}\n\nmodule.exports = JsonRpcEngineMiddlewareSubprovider\n","const ProviderSubprovider = require('./json-rpc-engine-middleware')\nconst createFilterMiddleware = require('eth-json-rpc-filters')\n\nclass SubscriptionsSubprovider extends ProviderSubprovider {\n  constructor() {\n    super(({ blockTracker, provider, engine }) => {\n      return createFilterMiddleware({ blockTracker, provider })\n    })\n  }\n}\n\nmodule.exports = SubscriptionsSubprovider\n","const EventEmitter = require('events').EventEmitter\nconst inherits = require('util').inherits\n\nmodule.exports = Stoplight\n\n\ninherits(Stoplight, EventEmitter)\n\nfunction Stoplight(){\n  const self = this\n  EventEmitter.call(self)\n  self.isLocked = true\n}\n\nStoplight.prototype.go = function(){\n  const self = this\n  self.isLocked = false\n  self.emit('unlock')\n}\n\nStoplight.prototype.stop = function(){\n  const self = this\n  self.isLocked = true\n  self.emit('lock')\n}\n\nStoplight.prototype.await = function(fn){\n  const self = this\n  if (self.isLocked) {\n    self.once('unlock', fn)\n  } else {\n    setTimeout(fn)\n  }\n}","const stringify = require('json-stable-stringify')\n\nmodule.exports = {\n  cacheIdentifierForPayload: cacheIdentifierForPayload,\n  canCache: canCache,\n  blockTagForPayload: blockTagForPayload,\n  paramsWithoutBlockTag: paramsWithoutBlockTag,\n  blockTagParamIndex: blockTagParamIndex,\n  cacheTypeForPayload: cacheTypeForPayload,\n}\n\nfunction cacheIdentifierForPayload(payload, opts = {}){\n  if (!canCache(payload)) return null\n  const { includeBlockRef } = opts\n  const params = includeBlockRef ? payload.params : paramsWithoutBlockTag(payload)\n  return payload.method + ':' + stringify(params)\n}\n\nfunction canCache(payload){\n  return cacheTypeForPayload(payload) !== 'never'\n}\n\nfunction blockTagForPayload(payload){\n  var index = blockTagParamIndex(payload);\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return null;\n  }\n\n  return payload.params[index];\n}\n\nfunction paramsWithoutBlockTag(payload){\n  var index = blockTagParamIndex(payload);\n\n  // Block tag param not passed.\n  if (index >= payload.params.length) {\n    return payload.params;\n  }\n\n  // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n  if (payload.method === 'eth_getBlockByNumber') {\n    return payload.params.slice(1);\n  }\n\n  return payload.params.slice(0,index);\n}\n\nfunction blockTagParamIndex(payload){\n  switch(payload.method) {\n    // blockTag is third param\n    case 'eth_getStorageAt':\n      return 2\n    // blockTag is second param\n    case 'eth_getBalance':\n    case 'eth_getCode':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n      return 1\n    // blockTag is first param\n    case 'eth_getBlockByNumber':\n      return 0\n    // there is no blockTag\n    default:\n      return undefined\n  }\n}\n\nfunction cacheTypeForPayload(payload) {\n  switch (payload.method) {\n    // cache permanently\n    case 'web3_clientVersion':\n    case 'web3_sha3':\n    case 'eth_protocolVersion':\n    case 'eth_getBlockTransactionCountByHash':\n    case 'eth_getUncleCountByBlockHash':\n    case 'eth_getCode':\n    case 'eth_getBlockByHash':\n    case 'eth_getTransactionByHash':\n    case 'eth_getTransactionByBlockHashAndIndex':\n    case 'eth_getTransactionReceipt':\n    case 'eth_getUncleByBlockHashAndIndex':\n    case 'eth_getCompilers':\n    case 'eth_compileLLL':\n    case 'eth_compileSolidity':\n    case 'eth_compileSerpent':\n    case 'shh_version':\n      return 'perma'\n\n    // cache until fork\n    case 'eth_getBlockByNumber':\n    case 'eth_getBlockTransactionCountByNumber':\n    case 'eth_getUncleCountByBlockNumber':\n    case 'eth_getTransactionByBlockNumberAndIndex':\n    case 'eth_getUncleByBlockNumberAndIndex':\n      return 'fork'\n\n    // cache for block\n    case 'eth_gasPrice':\n    case 'eth_getBalance':\n    case 'eth_getStorageAt':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n    case 'eth_getFilterLogs':\n    case 'eth_getLogs':\n    case 'eth_blockNumber':\n      return 'block'\n\n    // never cache\n    case 'net_version':\n    case 'net_peerCount':\n    case 'net_listening':\n    case 'eth_syncing':\n    case 'eth_sign':\n    case 'eth_coinbase':\n    case 'eth_mining':\n    case 'eth_hashrate':\n    case 'eth_accounts':\n    case 'eth_sendTransaction':\n    case 'eth_sendRawTransaction':\n    case 'eth_newFilter':\n    case 'eth_newBlockFilter':\n    case 'eth_newPendingTransactionFilter':\n    case 'eth_uninstallFilter':\n    case 'eth_getFilterChanges':\n    case 'eth_getWork':\n    case 'eth_submitWork':\n    case 'eth_submitHashrate':\n    case 'db_putString':\n    case 'db_getString':\n    case 'db_putHex':\n    case 'db_getHex':\n    case 'shh_post':\n    case 'shh_newIdentity':\n    case 'shh_hasIdentity':\n    case 'shh_newGroup':\n    case 'shh_addToGroup':\n    case 'shh_newFilter':\n    case 'shh_uninstallFilter':\n    case 'shh_getFilterChanges':\n    case 'shh_getMessages':\n      return 'never'\n  }\n}\n","module.exports = createRandomId\n\n\nfunction createRandomId () {\n  // random id\n  return Math.floor(Number.MAX_SAFE_INTEGER * Math.random())\n}","\nconst { EthereumRpcError, EthereumProviderError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst ethErrors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  ethErrors,\n  EthereumRpcError,\n  EthereumProviderError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */\n","\nconst { EthereumRpcError, EthereumProviderError } = require('./classes')\nconst { getMessageFromCode } = require('./utils')\nconst ERROR_CODES = require('./errorCodes.json')\n\nmodule.exports = {\n  rpc: {\n    /**\n     * Get a JSON RPC 2.0 Parse (-32700) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    parse: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.parse, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidRequest: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidRequest, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidParams: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidParams, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotFound, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Internal (-32603) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    internal: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.internal, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Server error.\n     * Permits integer error codes in the [ -32099 <= -32005 ] range.\n     * Codes -32000 through -32004 are reserved by EIP 1474.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    server: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum RPC Server errors must provide single object argument.')\n      }\n      const { code } = opts\n      if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n        throw new Error(\n          '\"code\" must be an integer such that: -32099 <= code <= -32005'\n        )\n      }\n      return getEthJsonRpcError(code, opts)\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidInput: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidInput, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceNotFound, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceUnavailable: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceUnavailable, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    transactionRejected: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.transactionRejected, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotSupported: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotSupported, opts\n    ),\n  },\n\n  provider: {\n    /**\n     * Get an Ethereum Provider User Rejected Request (4001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    userRejectedRequest: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.userRejectedRequest, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unauthorized (4100) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unauthorized: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unauthorized, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unsupported Method (4200) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unsupportedMethod: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unsupportedMethod, opts\n      )\n    },\n\n    /**\n     * Get a custom Ethereum Provider error.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} opts.message - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    custom: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum Provider custom errors must provide single object argument.')\n      }\n      const { code, message, data } = opts\n      if (!message || typeof message !== 'string') throw new Error(\n        '\"message\" must be a nonempty string'\n      )\n      return new EthereumProviderError(code, message, data)\n    },\n  },\n}\n\n// Internal\n\nfunction getEthJsonRpcError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction getEthProviderError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumProviderError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction validateOpts (opts) {\n  let message, data\n  if (opts) {\n    if (typeof opts === 'string') {\n      message = opts\n    } else if (typeof opts === 'object' && !Array.isArray(opts)) {\n      message = opts.message\n      data = opts.data\n    }\n  }\n  return [ message, data ]\n}\n","const createPayload = require('./create-payload.js')\n\nmodule.exports = estimateGas\n\n/*\n\nThis is a work around for https://github.com/ethereum/go-ethereum/issues/2577\n\n*/\n\n\nfunction estimateGas(provider, txParams, cb) {\n  provider.sendAsync(createPayload({\n    method: 'eth_estimateGas',\n    params: [txParams]\n  }), function(err, res){\n    if (err) {\n      // handle simple value transfer case\n      if (err.message === 'no contract code at given address') {\n        return cb(null, '0xcf08')\n      } else {\n        return cb(err)        \n      }\n    }\n    cb(null, res.result)\n  })\n}"],"sourceRoot":""}