{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","assets/icons/metamask.svg","utils/index.js","services/index.js","hooks/index.js","components/Toolbar/Toolbar.jsx","components/ChatButton/index.js","components/ChatButton/ChatButton.jsx","components/PodDetails/PodDetails.jsx","components/MemberListRightBar/MemberListRightBar.jsx","components/PodListLeftBar/PodListLeftBar.jsx","components/PodListLeftBar/index.js","components/Home/Home.jsx","components/Home/index.js","components/Modal/Modal.jsx","components/Modal/index.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","shortenAddress","pAddress","pDigits","isAddress","substring","pValue","Web3Utils","toLowerCase","web3","boxInstance","userBoxInstance","globalSpace","userSpace","poolTogetherDrawDates","utils","ethers","daiAddress","onboard","Onboard","dappId","networkId","subscriptions","wallet","Web3","provider","darkMode","getPoolTogetherDaiDrawDate","now","Date","i","length","drawDate","parseInt","getEstimatedPrize","contractAddress","a","getDefaultProvider","abi","BasePool","contract","Contract","console","log","accountedBalance","balanceCallData","interface","functions","balance","encode","call","to","address","data","result","decode","currentOpenDrawId","getDraw","currentDraw","prize","bigNumberify","pt","calculatePrize","feeFraction","toString","cDAIContract","cDAI","supplyRatePerBlock","prizeSupplyRate","calculatePrizeSupplyRate","awardAtMs","parse","remainingTimeS","getTime","remainingBlocks","blocksFixedPoint18","parseEther","String","prizeEstimate","calculatePrizeEstimate","newPrizeEstimate","BigNumber","Math","round","getAccount","walletSelect","walletCheck","currentState","getState","getConsent","type","origin","spaces","getGlobal3BoxInstance","idWallet","IdentityWallet","seed","threeIdProvider","get3idProvider","Box","syncDone","openSpace","getUser3BoxInstance","defaultAddress","currentUser","currentProvider","getAllPods","public","get","allPodsList","addPodtoGlobal","podDetail","allPods","push","set","getUserPods","pods","userPods","filter","pod","includes","getUserPodsList","updateGlobalList","newList","addPodtoUser","podAddress","userAddress","globalPods","isPodExist","find","selectedPodIndex","findIndex","members","newPod","name","createPod","podName","poolAddress","Pod","setProvider","new","from","podInstance","initialize","depositToPod","amount","at","daiContract","ERC20","daiInstance","depositAmount","approve","deposit","redeemFromPod","withdrawPendingDeposit","getPodQuery","query","request","ActionContext","createContext","StateContext","AppProvider","props","React","useReducer","prevState","action","walletAddress","openModal","modal","modalConfig","currentPod","estimatedPrize","state","dispatch","actionContext","useMemo","signIn","signOut","toggleModal","fetchUserPodsList","loading","loadingMsg","userPodsList","setCurrentPod","selectedPod","currentPodDetails","podDetails","poolContract","Provider","value","children","Toolbar","useContext","className","onClick","src","makeBlockie","alt","require","ChatButton","SPACE_NAME","THREAD_NAME","handleLogin","box","myAddress","auth","getProfile","myProfile","onSyncDone","setState","isReady","this","create","window","ethereum","threadName","spaceName","currentUserAddr","loginFunction","openOnMount","popupChat","colorTheme","currentUser3BoxProfile","userProfileURL","Component","PodDetails","useState","setDepositAmount","withdrawAmount","setWithdrawAmount","actionDepositPod","actionWithdrawPod","icon","faCircle","href","faExternalLinkSquareAlt","faLongArrowAltUp","balanceUnderlying","totalPendingDeposits","podPlayersCount","placeholder","onChange","target","committedBalance","openBalance","sponsorshipAndFeeBalance","playersCount","MemberListRightBar","map","member","key","inviteLink","faShareAlt","PodListLeftBar","addPodAddress","faPlus","Home","location","useLocation","useEffect","pathname","referralLink","split","join","Modal","existingPodAddress","setExistingPodAddress","newPodName","setNewPodName","addExistingPod","setTimeout","faTimes","copy","faCopy","disabled","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"s59wCAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,M,4RCRzBF,EAAOC,QAAU,IAA0B,sC,8dCCpC,SAASE,EAAeC,GAAwB,IAAdC,EAAa,uDAAH,EAC/C,IAAKC,EAAUF,GACX,MAAMR,MAAM,gCAAD,OAAiCQ,EAAjC,OAEf,MAAM,GAAN,OAAUA,EAASG,UAAU,EAAGF,EAAU,GAA1C,cAAkDD,EAASG,UACvD,GAAKF,IAIN,SAASC,EAAUE,GACtB,IACI,OAAOC,YAAoBD,EAAOE,eACpC,SACE,OAAO,GAkBR,ICRHC,EACAC,EACAC,EACAC,EACAC,EDISC,EAAwB,CACjC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBClgBIC,EAAUC,SAAVD,MAUFE,EAAa,6CAKbC,EAAUC,YAAQ,CACtBC,OAAQ,uCACRC,UAAW,GACXC,cAAe,CA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","file":"static/js/main.f4e21e71.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 2829;","module.exports = __webpack_public_path__ + \"static/media/metamask.a0103549.svg\";","import * as Web3Utils from \"web3-utils\";\nexport function shortenAddress(pAddress, pDigits = 4) {\n    if (!isAddress(pAddress)) {\n        throw Error(`Invalid 'address' parameter '${pAddress}'.`);\n    }\n    return `${pAddress.substring(0, pDigits + 2)}...${pAddress.substring(\n        42 - pDigits\n    )}`;\n}\n\nexport function isAddress(pValue) {\n    try {\n        return Web3Utils.isAddress(pValue.toLowerCase());\n    } catch {\n        return false;\n    }\n}\n\nexport function showError(pValue) {\n    const appEl = document.querySelector(\".App\");\n    const alertEl = document.createElement(\"div\");\n    alertEl.classList.add(\"alert\");\n    const alertChildEl = document.createElement(\"div\");\n    alertChildEl.classList.add(\"alert-container\");\n    alertChildEl.textContent = pValue;\n    alertEl.appendChild(alertChildEl);\n    appEl.appendChild(alertEl);\n    setTimeout(() => {\n        appEl.removeChild(alertEl);\n    }, 3000);\n}\n\nexport const poolTogetherDrawDates = [\n    '15 May 2020 12:00 PDT',\n    '22 May 2020 12:00 PDT',\n    '29 May 2020 12:00 PDT',\n    '05 Jun 2020 12:00 PDT',\n    '12 Jun 2020 12:00 PDT',\n    '19 Jun 2020 12:00 PDT',\n    '26 Jun 2020 12:00 PDT',\n    '03 Jul 2020 12:00 PDT',\n    '10 Jul 2020 12:00 PDT',\n    '17 Jul 2020 12:00 PDT',\n    '24 Jul 2020 12:00 PDT',\n    '31 Jul 2020 12:00 PDT',\n    '07 Aug 2020 12:00 PDT',\n    '14 Aug 2020 12:00 PDT',\n    '21 Aug 2020 12:00 PDT',\n    '28 Aug 2020 12:00 PDT',\n    '04 Sep 2020 12:00 PDT',\n    '11 Sep 2020 12:00 PDT',\n    '18 Sep 2020 12:00 PDT',\n    '25 Sep 2020 12:00 PDT',\n    '02 Oct 2020 12:00 PDT',\n    '09 Oct 2020 12:00 PDT',\n    '16 Oct 2020 12:00 PDT',\n    '23 Oct 2020 12:00 PDT',\n    '30 Oct 2020 12:00 PDT',\n    '06 Nov 2020 12:00 PDT',\n    '13 Nov 2020 12:00 PDT',\n    '20 Nov 2020 12:00 PDT',\n    '27 Nov 2020 12:00 PDT',\n    '04 Dec 2020 12:00 PDT',\n    '11 Dec 2020 12:00 PDT',\n    '18 Dec 2020 12:00 PDT',\n    '25 Dec 2020 12:00 PDT',\n    '01 Jan 2021 12:00 PDT',\n    '08 Jan 2021 12:00 PDT',\n    '15 Jan 2021 12:00 PDT',\n    '22 Jan 2021 12:00 PDT',\n    '29 Jan 2021 12:00 PDT',\n    '05 Feb 2021 12:00 PDT',\n    '12 Feb 2021 12:00 PDT',\n    '19 Feb 2021 12:00 PDT',\n    '26 Feb 2021 12:00 PDT',\n    '05 Mar 2021 12:00 PDT',\n    '12 Mar 2021 12:00 PDT',\n    '19 Mar 2021 12:00 PDT',\n    '26 Mar 2021 12:00 PDT',\n    '02 Apr 2021 12:00 PDT',\n    '09 Apr 2021 12:00 PDT',\n    '16 Apr 2021 12:00 PDT',\n    '23 Apr 2021 12:00 PDT',\n    '30 Apr 2021 12:00 PDT',\n    '07 May 2021 12:00 PDT',\n    '14 May 2021 12:00 PDT',\n    '21 May 2021 12:00 PDT',\n    '28 May 2021 12:00 PDT',\n    '04 Jun 2021 12:00 PDT',\n    '11 Jun 2021 12:00 PDT',\n    '18 Jun 2021 12:00 PDT',\n    '25 Jun 2021 12:00 PDT',\n    '02 Jul 2021 12:00 PDT',\n    '09 Jul 2021 12:00 PDT',\n    '16 Jul 2021 12:00 PDT',\n    '23 Jul 2021 12:00 PDT',\n    '30 Jul 2021 12:00 PDT',\n    '06 Aug 2021 12:00 PDT',\n    '13 Aug 2021 12:00 PDT',\n    '20 Aug 2021 12:00 PDT',\n    '27 Aug 2021 12:00 PDT',\n    '03 Sep 2021 12:00 PDT',\n    '10 Sep 2021 12:00 PDT',\n    '17 Sep 2021 12:00 PDT',\n    '24 Sep 2021 12:00 PDT',\n    '01 Oct 2021 12:00 PDT',\n    '08 Oct 2021 12:00 PDT',\n    '15 Oct 2021 12:00 PDT',\n    '22 Oct 2021 12:00 PDT',\n    '29 Oct 2021 12:00 PDT',\n    '05 Nov 2021 12:00 PDT',\n    '12 Nov 2021 12:00 PDT',\n    '19 Nov 2021 12:00 PDT',\n    '26 Nov 2021 12:00 PDT',\n    '03 Dec 2021 12:00 PDT',\n    '10 Dec 2021 12:00 PDT',\n    '17 Dec 2021 12:00 PDT',\n    '24 Dec 2021 12:00 PDT',\n    '31 Dec 2021 12:00 PDT',\n    '07 Jan 2022 12:00 PDT',\n    '14 Jan 2022 12:00 PDT',\n    '21 Jan 2022 12:00 PDT',\n    '28 Jan 2022 12:00 PDT',\n    '04 Feb 2022 12:00 PDT',\n    '11 Feb 2022 12:00 PDT',\n    '18 Feb 2022 12:00 PDT',\n    '25 Feb 2022 12:00 PDT',\n    '04 Mar 2022 12:00 PDT',\n    '11 Mar 2022 12:00 PDT',\n    '18 Mar 2022 12:00 PDT',\n    '25 Mar 2022 12:00 PDT',\n    '01 Apr 2022 12:00 PDT',\n    '08 Apr 2022 12:00 PDT',\n    '15 Apr 2022 12:00 PDT',\n    '22 Apr 2022 12:00 PDT',\n    '29 Apr 2022 12:00 PDT',\n    '06 May 2022 12:00 PDT',\n    '13 May 2022 12:00 PDT',\n    '20 May 2022 12:00 PDT',\n    '27 May 2022 12:00 PDT',\n    '03 Jun 2022 12:00 PDT',\n    '10 Jun 2022 12:00 PDT',\n    '17 Jun 2022 12:00 PDT',\n    '24 Jun 2022 12:00 PDT',\n    '01 Jul 2022 12:00 PDT',\n    '08 Jul 2022 12:00 PDT',\n    '15 Jul 2022 12:00 PDT',\n    '22 Jul 2022 12:00 PDT',\n    '29 Jul 2022 12:00 PDT',\n    '05 Aug 2022 12:00 PDT',\n    '12 Aug 2022 12:00 PDT',\n    '19 Aug 2022 12:00 PDT',\n    '26 Aug 2022 12:00 PDT',\n    '02 Sep 2022 12:00 PDT',\n    '09 Sep 2022 12:00 PDT',\n    '16 Sep 2022 12:00 PDT',\n    '23 Sep 2022 12:00 PDT',\n    '30 Sep 2022 12:00 PDT',\n    '07 Oct 2022 12:00 PDT',\n    '14 Oct 2022 12:00 PDT',\n    '21 Oct 2022 12:00 PDT',\n    '28 Oct 2022 12:00 PDT',\n    '04 Nov 2022 12:00 PDT',\n    '11 Nov 2022 12:00 PDT',\n    '18 Nov 2022 12:00 PDT',\n    '25 Nov 2022 12:00 PDT',\n    '02 Dec 2022 12:00 PDT',\n    '09 Dec 2022 12:00 PDT',\n    '16 Dec 2022 12:00 PDT',\n    '23 Dec 2022 12:00 PDT',\n    '30 Dec 2022 12:00 PDT',\n    '06 Jan 2023 12:00 PDT',\n    '13 Jan 2023 12:00 PDT',\n    '20 Jan 2023 12:00 PDT',\n    '27 Jan 2023 12:00 PDT',\n    '03 Feb 2023 12:00 PDT',\n    '10 Feb 2023 12:00 PDT',\n    '17 Feb 2023 12:00 PDT',\n    '24 Feb 2023 12:00 PDT',\n    '03 Mar 2023 12:00 PDT',\n    '10 Mar 2023 12:00 PDT',\n    '17 Mar 2023 12:00 PDT',\n    '24 Mar 2023 12:00 PDT',\n    '31 Mar 2023 12:00 PDT',\n    '07 Apr 2023 12:00 PDT',\n    '14 Apr 2023 12:00 PDT',\n    '21 Apr 2023 12:00 PDT',\n    '28 Apr 2023 12:00 PDT',\n    '05 May 2023 12:00 PDT',\n    '12 May 2023 12:00 PDT',\n    '19 May 2023 12:00 PDT',\n    '26 May 2023 12:00 PDT',\n    '02 Jun 2023 12:00 PDT',\n    '09 Jun 2023 12:00 PDT',\n    '16 Jun 2023 12:00 PDT',\n    '23 Jun 2023 12:00 PDT',\n    '30 Jun 2023 12:00 PDT',\n    '07 Jul 2023 12:00 PDT',\n    '14 Jul 2023 12:00 PDT',\n    '21 Jul 2023 12:00 PDT',\n    '28 Jul 2023 12:00 PDT',\n    '04 Aug 2023 12:00 PDT',\n    '11 Aug 2023 12:00 PDT',\n    '18 Aug 2023 12:00 PDT',\n    '25 Aug 2023 12:00 PDT',\n    '01 Sep 2023 12:00 PDT',\n    '08 Sep 2023 12:00 PDT',\n    '15 Sep 2023 12:00 PDT',\n    '22 Sep 2023 12:00 PDT',\n    '29 Sep 2023 12:00 PDT',\n    '06 Oct 2023 12:00 PDT',\n    '13 Oct 2023 12:00 PDT',\n    '20 Oct 2023 12:00 PDT',\n    '27 Oct 2023 12:00 PDT',\n    '03 Nov 2023 12:00 PDT',\n    '10 Nov 2023 12:00 PDT',\n    '17 Nov 2023 12:00 PDT',\n    '24 Nov 2023 12:00 PDT',\n    '01 Dec 2023 12:00 PDT',\n    '08 Dec 2023 12:00 PDT',\n    '15 Dec 2023 12:00 PDT',\n    '22 Dec 2023 12:00 PDT',\n    '29 Dec 2023 12:00 PDT',\n    '05 Jan 2024 12:00 PDT',\n    '12 Jan 2024 12:00 PDT',\n    '19 Jan 2024 12:00 PDT',\n    '26 Jan 2024 12:00 PDT',\n    '02 Feb 2024 12:00 PDT',\n    '09 Feb 2024 12:00 PDT',\n    '16 Feb 2024 12:00 PDT',\n    '23 Feb 2024 12:00 PDT',\n    '01 Mar 2024 12:00 PDT',\n    '08 Mar 2024 12:00 PDT',\n    '15 Mar 2024 12:00 PDT',\n    '22 Mar 2024 12:00 PDT',\n    '29 Mar 2024 12:00 PDT',\n    '05 Apr 2024 12:00 PDT',\n    '12 Apr 2024 12:00 PDT',\n    '19 Apr 2024 12:00 PDT',\n    '26 Apr 2024 12:00 PDT',\n    '03 May 2024 12:00 PDT',\n    '10 May 2024 12:00 PDT',\n    '17 May 2024 12:00 PDT',\n    '24 May 2024 12:00 PDT',\n    '31 May 2024 12:00 PDT',\n    '07 Jun 2024 12:00 PDT',\n    '14 Jun 2024 12:00 PDT',\n    '21 Jun 2024 12:00 PDT',\n    '28 Jun 2024 12:00 PDT',\n    '05 Jul 2024 12:00 PDT',\n    '12 Jul 2024 12:00 PDT',\n    '19 Jul 2024 12:00 PDT',\n    '26 Jul 2024 12:00 PDT',\n    '02 Aug 2024 12:00 PDT',\n    '09 Aug 2024 12:00 PDT',\n    '16 Aug 2024 12:00 PDT',\n    '23 Aug 2024 12:00 PDT',\n    '30 Aug 2024 12:00 PDT',\n    '06 Sep 2024 12:00 PDT',\n    '13 Sep 2024 12:00 PDT',\n    '20 Sep 2024 12:00 PDT',\n    '27 Sep 2024 12:00 PDT',\n    '04 Oct 2024 12:00 PDT',\n    '11 Oct 2024 12:00 PDT',\n    '18 Oct 2024 12:00 PDT',\n    '25 Oct 2024 12:00 PDT',\n    '01 Nov 2024 12:00 PDT',\n    '08 Nov 2024 12:00 PDT',\n    '15 Nov 2024 12:00 PDT',\n    '22 Nov 2024 12:00 PDT',\n    '29 Nov 2024 12:00 PDT',\n    '06 Dec 2024 12:00 PDT',\n    '13 Dec 2024 12:00 PDT',\n    '20 Dec 2024 12:00 PDT',\n    '27 Dec 2024 12:00 PDT',\n    '03 Jan 2025 12:00 PDT',\n    '10 Jan 2025 12:00 PDT',\n    '17 Jan 2025 12:00 PDT',\n    '24 Jan 2025 12:00 PDT',\n    '31 Jan 2025 12:00 PDT',\n    '07 Feb 2025 12:00 PDT',\n    '14 Feb 2025 12:00 PDT',\n    '21 Feb 2025 12:00 PDT',\n    '28 Feb 2025 12:00 PDT',\n    '07 Mar 2025 12:00 PDT',\n    '14 Mar 2025 12:00 PDT',\n    '21 Mar 2025 12:00 PDT',\n    '28 Mar 2025 12:00 PDT',\n    '04 Apr 2025 12:00 PDT',\n    '11 Apr 2025 12:00 PDT',\n    '18 Apr 2025 12:00 PDT',\n    '25 Apr 2025 12:00 PDT',\n    '02 May 2025 12:00 PDT',\n    '09 May 2025 12:00 PDT',\n    '16 May 2025 12:00 PDT',\n    '23 May 2025 12:00 PDT',\n    '30 May 2025 12:00 PDT',\n    '06 Jun 2025 12:00 PDT',\n    '13 Jun 2025 12:00 PDT',\n    '20 Jun 2025 12:00 PDT',\n    '27 Jun 2025 12:00 PDT',\n    '04 Jul 2025 12:00 PDT',\n    '11 Jul 2025 12:00 PDT',\n    '18 Jul 2025 12:00 PDT',\n    '25 Jul 2025 12:00 PDT',\n    '01 Aug 2025 12:00 PDT',\n    '08 Aug 2025 12:00 PDT',\n    '15 Aug 2025 12:00 PDT',\n    '22 Aug 2025 12:00 PDT',\n    '29 Aug 2025 12:00 PDT',\n    '05 Sep 2025 12:00 PDT',\n    '12 Sep 2025 12:00 PDT',\n    '19 Sep 2025 12:00 PDT',\n    '26 Sep 2025 12:00 PDT',\n    '03 Oct 2025 12:00 PDT',\n    '10 Oct 2025 12:00 PDT',\n    '17 Oct 2025 12:00 PDT',\n    '24 Oct 2025 12:00 PDT',\n    '31 Oct 2025 12:00 PDT',\n    '07 Nov 2025 12:00 PDT',\n    '14 Nov 2025 12:00 PDT',\n    '21 Nov 2025 12:00 PDT',\n    '28 Nov 2025 12:00 PDT',\n    '05 Dec 2025 12:00 PDT',\n    '12 Dec 2025 12:00 PDT',\n    '19 Dec 2025 12:00 PDT',\n    '26 Dec 2025 12:00 PDT',\n    '02 Jan 2026 12:00 PDT',\n    '09 Jan 2026 12:00 PDT',\n    '16 Jan 2026 12:00 PDT',\n    '23 Jan 2026 12:00 PDT',\n    '30 Jan 2026 12:00 PDT',\n    '06 Feb 2026 12:00 PDT',\n    '13 Feb 2026 12:00 PDT',\n    '20 Feb 2026 12:00 PDT',\n    '27 Feb 2026 12:00 PDT',\n    '06 Mar 2026 12:00 PDT',\n    '13 Mar 2026 12:00 PDT',\n    '20 Mar 2026 12:00 PDT',\n    '27 Mar 2026 12:00 PDT',\n    '03 Apr 2026 12:00 PDT',\n    '10 Apr 2026 12:00 PDT',\n    '17 Apr 2026 12:00 PDT',\n    '24 Apr 2026 12:00 PDT',\n    '01 May 2026 12:00 PDT',\n    '08 May 2026 12:00 PDT',\n    '15 May 2026 12:00 PDT',\n    '22 May 2026 12:00 PDT',\n    '29 May 2026 12:00 PDT',\n    '05 Jun 2026 12:00 PDT',\n    '12 Jun 2026 12:00 PDT',\n    '19 Jun 2026 12:00 PDT',\n    '26 Jun 2026 12:00 PDT',\n    '03 Jul 2026 12:00 PDT',\n    '10 Jul 2026 12:00 PDT',\n    '17 Jul 2026 12:00 PDT',\n    '24 Jul 2026 12:00 PDT',\n    '31 Jul 2026 12:00 PDT',\n    '07 Aug 2026 12:00 PDT',\n    '14 Aug 2026 12:00 PDT',\n    '21 Aug 2026 12:00 PDT',\n    '28 Aug 2026 12:00 PDT',\n    '04 Sep 2026 12:00 PDT',\n    '11 Sep 2026 12:00 PDT',\n    '18 Sep 2026 12:00 PDT',\n    '25 Sep 2026 12:00 PDT',\n    '02 Oct 2026 12:00 PDT',\n    '09 Oct 2026 12:00 PDT',\n    '16 Oct 2026 12:00 PDT',\n    '23 Oct 2026 12:00 PDT',\n    '30 Oct 2026 12:00 PDT',\n    '06 Nov 2026 12:00 PDT',\n    '13 Nov 2026 12:00 PDT',\n    '20 Nov 2026 12:00 PDT',\n    '27 Nov 2026 12:00 PDT',\n    '04 Dec 2026 12:00 PDT',\n    '11 Dec 2026 12:00 PDT',\n    '18 Dec 2026 12:00 PDT',\n    '25 Dec 2026 12:00 PDT',\n    '01 Jan 2027 12:00 PDT',\n    '08 Jan 2027 12:00 PDT',\n    '15 Jan 2027 12:00 PDT',\n    '22 Jan 2027 12:00 PDT',\n    '29 Jan 2027 12:00 PDT',\n    '05 Feb 2027 12:00 PDT',\n    '12 Feb 2027 12:00 PDT',\n    '19 Feb 2027 12:00 PDT',\n    '26 Feb 2027 12:00 PDT',\n    '05 Mar 2027 12:00 PDT',\n    '12 Mar 2027 12:00 PDT',\n    '19 Mar 2027 12:00 PDT',\n    '26 Mar 2027 12:00 PDT',\n    '02 Apr 2027 12:00 PDT',\n    '09 Apr 2027 12:00 PDT',\n    '16 Apr 2027 12:00 PDT',\n    '23 Apr 2027 12:00 PDT',\n    '30 Apr 2027 12:00 PDT',\n    '07 May 2027 12:00 PDT',\n    '14 May 2027 12:00 PDT',\n    '21 May 2027 12:00 PDT',\n    '28 May 2027 12:00 PDT',\n    '04 Jun 2027 12:00 PDT',\n    '11 Jun 2027 12:00 PDT',\n    '18 Jun 2027 12:00 PDT',\n    '25 Jun 2027 12:00 PDT',\n    '02 Jul 2027 12:00 PDT',\n    '09 Jul 2027 12:00 PDT',\n    '16 Jul 2027 12:00 PDT',\n    '23 Jul 2027 12:00 PDT',\n    '30 Jul 2027 12:00 PDT',\n    '06 Aug 2027 12:00 PDT',\n    '13 Aug 2027 12:00 PDT',\n    '20 Aug 2027 12:00 PDT',\n    '27 Aug 2027 12:00 PDT',\n    '03 Sep 2027 12:00 PDT',\n    '10 Sep 2027 12:00 PDT',\n    '17 Sep 2027 12:00 PDT',\n    '24 Sep 2027 12:00 PDT',\n    '01 Oct 2027 12:00 PDT',\n    '08 Oct 2027 12:00 PDT',\n    '15 Oct 2027 12:00 PDT',\n    '22 Oct 2027 12:00 PDT',\n    '29 Oct 2027 12:00 PDT',\n    '05 Nov 2027 12:00 PDT',\n    '12 Nov 2027 12:00 PDT',\n    '19 Nov 2027 12:00 PDT',\n    '26 Nov 2027 12:00 PDT',\n    '03 Dec 2027 12:00 PDT',\n    '10 Dec 2027 12:00 PDT',\n    '17 Dec 2027 12:00 PDT',\n    '24 Dec 2027 12:00 PDT',\n    '31 Dec 2027 12:00 PDT',\n    '07 Jan 2028 12:00 PDT',\n    '14 Jan 2028 12:00 PDT',\n    '21 Jan 2028 12:00 PDT',\n    '28 Jan 2028 12:00 PDT',\n    '04 Feb 2028 12:00 PDT',\n    '11 Feb 2028 12:00 PDT',\n    '18 Feb 2028 12:00 PDT',\n    '25 Feb 2028 12:00 PDT',\n    '03 Mar 2028 12:00 PDT',\n    '10 Mar 2028 12:00 PDT',\n    '17 Mar 2028 12:00 PDT',\n    '24 Mar 2028 12:00 PDT',\n    '31 Mar 2028 12:00 PDT',\n    '07 Apr 2028 12:00 PDT',\n    '14 Apr 2028 12:00 PDT',\n    '21 Apr 2028 12:00 PDT',\n    '28 Apr 2028 12:00 PDT',\n    '05 May 2028 12:00 PDT',\n    '12 May 2028 12:00 PDT',\n    '19 May 2028 12:00 PDT',\n    '26 May 2028 12:00 PDT',\n    '02 Jun 2028 12:00 PDT',\n    '09 Jun 2028 12:00 PDT',\n    '16 Jun 2028 12:00 PDT',\n    '23 Jun 2028 12:00 PDT',\n    '30 Jun 2028 12:00 PDT',\n    '07 Jul 2028 12:00 PDT',\n    '14 Jul 2028 12:00 PDT',\n    '21 Jul 2028 12:00 PDT',\n    '28 Jul 2028 12:00 PDT',\n    '04 Aug 2028 12:00 PDT',\n    '11 Aug 2028 12:00 PDT',\n    '18 Aug 2028 12:00 PDT',\n    '25 Aug 2028 12:00 PDT',\n    '01 Sep 2028 12:00 PDT',\n    '08 Sep 2028 12:00 PDT',\n    '15 Sep 2028 12:00 PDT',\n    '22 Sep 2028 12:00 PDT',\n    '29 Sep 2028 12:00 PDT',\n    '06 Oct 2028 12:00 PDT',\n    '13 Oct 2028 12:00 PDT',\n    '20 Oct 2028 12:00 PDT',\n    '27 Oct 2028 12:00 PDT',\n    '03 Nov 2028 12:00 PDT',\n    '10 Nov 2028 12:00 PDT',\n    '17 Nov 2028 12:00 PDT',\n    '24 Nov 2028 12:00 PDT',\n    '01 Dec 2028 12:00 PDT',\n    '08 Dec 2028 12:00 PDT',\n    '15 Dec 2028 12:00 PDT',\n    '22 Dec 2028 12:00 PDT',\n    '29 Dec 2028 12:00 PDT',\n    '05 Jan 2029 12:00 PDT',\n    '12 Jan 2029 12:00 PDT',\n    '19 Jan 2029 12:00 PDT',\n    '26 Jan 2029 12:00 PDT',\n    '02 Feb 2029 12:00 PDT',\n    '09 Feb 2029 12:00 PDT',\n    '16 Feb 2029 12:00 PDT',\n    '23 Feb 2029 12:00 PDT',\n    '02 Mar 2029 12:00 PDT',\n    '09 Mar 2029 12:00 PDT',\n    '16 Mar 2029 12:00 PDT',\n    '23 Mar 2029 12:00 PDT',\n    '30 Mar 2029 12:00 PDT',\n    '06 Apr 2029 12:00 PDT',\n    '13 Apr 2029 12:00 PDT',\n    '20 Apr 2029 12:00 PDT',\n    '27 Apr 2029 12:00 PDT',\n    '04 May 2029 12:00 PDT',\n    '11 May 2029 12:00 PDT',\n    '18 May 2029 12:00 PDT',\n    '25 May 2029 12:00 PDT',\n    '01 Jun 2029 12:00 PDT',\n    '08 Jun 2029 12:00 PDT',\n    '15 Jun 2029 12:00 PDT',\n    '22 Jun 2029 12:00 PDT',\n    '29 Jun 2029 12:00 PDT',\n    '06 Jul 2029 12:00 PDT',\n    '13 Jul 2029 12:00 PDT',\n    '20 Jul 2029 12:00 PDT',\n    '27 Jul 2029 12:00 PDT',\n    '03 Aug 2029 12:00 PDT',\n    '10 Aug 2029 12:00 PDT',\n    '17 Aug 2029 12:00 PDT',\n    '24 Aug 2029 12:00 PDT',\n    '31 Aug 2029 12:00 PDT',\n    '07 Sep 2029 12:00 PDT',\n    '14 Sep 2029 12:00 PDT',\n    '21 Sep 2029 12:00 PDT',\n    '28 Sep 2029 12:00 PDT',\n    '05 Oct 2029 12:00 PDT',\n    '12 Oct 2029 12:00 PDT',\n    '19 Oct 2029 12:00 PDT',\n    '26 Oct 2029 12:00 PDT',\n    '02 Nov 2029 12:00 PDT',\n    '09 Nov 2029 12:00 PDT',\n    '16 Nov 2029 12:00 PDT',\n    '23 Nov 2029 12:00 PDT',\n    '30 Nov 2029 12:00 PDT',\n    '07 Dec 2029 12:00 PDT',\n    '14 Dec 2029 12:00 PDT',\n    '21 Dec 2029 12:00 PDT',\n    '28 Dec 2029 12:00 PDT',\n    '04 Jan 2030 12:00 PDT',\n  ];","import Onboard from \"bnc-onboard\";\nimport * as Web3 from \"web3\";\nimport * as Box from \"3box\";\nimport * as contract from \"@truffle/contract\";\nimport { request } from \"graphql-request\";\nimport * as IdentityWallet from \"identity-wallet\";\nimport * as BigNumber from \"bignumber.js\";\n\nimport Pod from \"../pods/build/contracts/Pod.json\";\nimport ERC20 from \"../pods/build/contracts/ERC20.json\";\nimport FixedPoint from \"../pods/build/contracts/FixedPoint.json\";\nimport ExchangeRateTracker from \"../pods/build/contracts/ExchangeRateTracker.json\";\nimport ScheduledBalance from \"../pods/build/contracts/ScheduledBalance.json\";\n\nimport BasePool from \"../contracts/pooltogether-contracts/build/contracts/BasePool.json\";\nimport cDAI from \"../contracts/pooltogether-contracts/build/contracts/CErc20Mock.json\";\n\nimport * as pt from \"pooltogetherjs\";\n\nimport { ethers } from \"ethers\";\n\nimport { poolTogetherDrawDates } from \"../utils\";\nconst { utils } = ethers;\n\nlet web3;\nlet boxInstance;\nlet userBoxInstance;\nlet globalSpace;\nlet userSpace;\n\nconst seed =\n  \"0x7accb0ba544b6bb4f6ad3cfddd375b76a2c1587250f0036f00d1d476bbb679b3\";\nconst daiAddress = \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\";\n\nconst userPodListName = \"userPodList\";\nconst globalPodsListName = \"globalPodList\";\n\nconst onboard = Onboard({\n  dappId: \"052b3fe9-87d5-4614-b2e9-6dd81115979a\",\n  networkId: 42,\n  subscriptions: {\n    wallet: (wallet) => {\n      web3 = new Web3(wallet.provider);\n    },\n  },\n  darkMode: true,\n});\n\nconst getPoolTogetherDaiDrawDate = () => {\n  const now = Date.now();\n  for (let i = 0; i < poolTogetherDrawDates.length; i += 1) {\n    const drawDate = new Date(poolTogetherDrawDates[i]);\n    // const diff = getDateDiff(drawDate, now);\n    var diff = parseInt((drawDate - now) / (1000 * 60 * 60 * 24), 10);\n    if (diff > 0) {\n      return poolTogetherDrawDates[i];\n    }\n  }\n  return undefined;\n};\n\nexport const getEstimatedPrize = async (contractAddress) => {\n  let provider = ethers.getDefaultProvider();\n\n  const abi = BasePool;\n\n  const contract = new ethers.Contract(contractAddress, abi[\"abi\"], provider);\n\n  console.log(\"contract\", contract);\n\n  const accountedBalance = await contract.accountedBalance();\n\n  const balanceCallData = contract.interface.functions.balance.encode([]);\n  const result = await provider.call({\n    to: contract.address,\n    data: balanceCallData,\n  });\n  const balance = contract.interface.functions.balance.decode(result);\n\n  const currentOpenDrawId = await contract.currentOpenDrawId();\n  const currentDraw = await contract.getDraw(currentOpenDrawId);\n\n  let prize = ethers.utils.bigNumberify(0);\n  if (balance) {\n    prize = pt.utils.calculatePrize(\n      balance,\n      accountedBalance,\n      currentDraw.feeFraction\n    );\n\n    console.log(\"prize\", prize.toString());\n\n    const cDAIContract = new ethers.Contract(\n      \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n      cDAI[\"abi\"],\n      provider\n    );\n\n    const supplyRatePerBlock = await cDAIContract.supplyRatePerBlock();\n    console.log(\"suppluRateperBlock\", supplyRatePerBlock);\n\n    const prizeSupplyRate = pt.utils.calculatePrizeSupplyRate(\n      supplyRatePerBlock,\n      currentDraw.feeFraction\n    );\n\n    const awardAtMs = Date.parse(getPoolTogetherDaiDrawDate());\n    const remainingTimeS = (awardAtMs - new Date().getTime()) / 1000;\n    const remainingBlocks = remainingTimeS / 15; // about 15 second block periods\n    const blocksFixedPoint18 = utils.parseEther(String(remainingBlocks));\n    const prizeEstimate = pt.utils.calculatePrizeEstimate(\n      balance,\n      prize,\n      blocksFixedPoint18,\n      prizeSupplyRate\n    );\n\n    const newPrizeEstimate = prizeEstimate / new BigNumber(10 ** 18);\n\n    console.log(\"prizeEstimate\", prizeEstimate);\n    console.log(\"prizeEstimate\", newPrizeEstimate.toString());\n\n    return Math.round(newPrizeEstimate.toString());\n  }\n};\n\nexport const getAccount = async () => {\n  await onboard.walletSelect();\n  await onboard.walletCheck();\n  const currentState = onboard.getState();\n\n  return currentState.address;\n};\n\nconst getConsent = async ({ type, origin, spaces }) => {\n  return true;\n};\n\nexport const getGlobal3BoxInstance = async () => {\n  const idWallet = new IdentityWallet(getConsent, {\n    seed,\n  });\n\n  const threeIdProvider = idWallet.get3idProvider();\n  boxInstance = await Box.openBox(null, threeIdProvider);\n  await boxInstance.syncDone;\n\n  globalSpace = await boxInstance.openSpace(\"PodChatSpace\");\n};\n\nexport const getUser3BoxInstance = async () => {\n  if (!web3) {\n    await getAccount();\n  }\n  const currentUser = await defaultAddress();\n  const provider = await Box.get3idConnectProvider(); // recomended provider\n  console.log(\"currentUser\", currentUser);\n\n  userBoxInstance = await Box.openBox(currentUser, web3.currentProvider);\n  console.log(\"userBoxInstance\", userBoxInstance);\n\n  userSpace = await userBoxInstance.openSpace(\"PodChatSpace\");\n  await userSpace.syncDone;\n  console.log(\"userspace\", userSpace);\n};\n\nexport const getAllPods = async () => {\n  if (!boxInstance) {\n    await getGlobal3BoxInstance();\n  }\n\n  const allPodsList = await globalSpace.public.get(globalPodsListName);\n  if (!allPodsList) {\n    return [];\n  }\n  return allPodsList;\n};\n\nexport const addPodtoGlobal = async (podDetail) => {\n  console.log(\"podDetail\", podDetail);\n  let allPods = await getAllPods();\n  console.log(\"allPods\", allPods);\n  allPods.push(podDetail);\n\n  await globalSpace.public.set(globalPodsListName, allPods);\n\n  console.log(\"allpods\", await getAllPods());\n  return await getAllPods();\n};\n\nexport const getUserPods = async () => {\n  if (!userBoxInstance) {\n    await getUser3BoxInstance();\n  }\n  let pods = await userSpace.public.get(userPodListName);\n  console.log(\"userPODS\", pods);\n  if (!pods) {\n    return [];\n  }\n  const allPodsList = await getAllPods();\n  console.log(\"allpods\", allPodsList);\n  const userPods = allPodsList.filter((pod) => pods.includes(pod.address));\n  console.log(\"userPods\", userPods);\n\n  return userPods;\n};\n\nexport const getUserPodsList = async () => {\n  if (!userBoxInstance) {\n    await getUser3BoxInstance();\n  }\n\n  let pods = await userSpace.public.get(userPodListName);\n  console.log(\"userPODS\", pods);\n  if (!pods) {\n    return [];\n  }\n\n  return pods;\n};\n\nexport const updateUserList = async (newList) => {\n  await userPodListName.public.set(userPodListName, newList);\n};\n\nexport const updateGlobalList = async (newList) => {\n  console.log(\"newList\", newList);\n  await globalSpace.public.set(globalPodsListName, newList);\n};\n\nexport const addPodtoUser = async (podAddress) => {\n  console.log(\"podAddress\", podAddress);\n\n  const userAddress = await defaultAddress();\n  // Add Pod to his space\n  let globalPods = await getAllPods();\n  let userPods = await getUserPodsList();\n  console.log(\"userPods\", userPods, \"globalPods\", globalPods);\n  const isPodExist = globalPods.find((pod) => pod.address === podAddress);\n  console.log(isPodExist, \"isExist\");\n  if (isPodExist) {\n    userPods.push(podAddress);\n    userSpace.public.set(userPodListName, userPods);\n\n    // Add user to pod members list\n    const selectedPodIndex = globalPods.findIndex(\n      (pod) => pod.address === podAddress\n    );\n    globalPods[selectedPodIndex].members.push(userAddress);\n\n    await updateGlobalList(globalPods);\n    console.log(\"getUserPods\", await getUserPods());\n    return await getUserPods();\n  } else {\n    const newPod = {\n      address: podAddress,\n      name: \"podName\",\n      members: [userAddress],\n    };\n\n    console.log(\"NewPod\", newPod);\n\n    await addPodtoGlobal(newPod);\n    userPods.push(podAddress);\n    userSpace.public.set(userPodListName, userPods);\n\n    console.log(\"getUserPods\", await getUserPods());\n    return await getUserPods();\n  }\n};\n\nexport const getUserPodBalance = async (podAddress) => {\n  if(!web3){\n    await getAccount()\n  }\n  const userAddress = await defaultAddress();\n  const query = `\n  {\n    podPlayer(id: \"player-${userAddress.toLowerCase()}_pod-${podAddress.toLowerCase()}\"){\n      balance\n    }\n  }\n  `;\n  console.log('query',query)\n\n  request(\n    \"https://api.thegraph.com/subgraphs/name/pooltogether/pooltogether-kovan\",\n    query\n  ).then((resp) => {\n    console.log(resp, \"resp\");\n    const balance = new BigNumber(resp.podPlayer.balance) / new BigNumber(10 ** 24);\n    \n    return balance.toString();\n  });\n};\n\n\n\nexport const createPod = async (podName) => {\n  const userAddress = await defaultAddress();\n  const poolAddress = \"0xc3a62c8af55c59642071bc171ebd05eb2479b663\";\n\n  // let fixedPoint, exchangeRateTracker, scheduledBalance\n\n  // const fixedPointC = contract(FixedPoint);\n  // fixedPointC.setProvider(web3.currentProvider);\n\n  // const exchangeRateTrackerC = contract(ExchangeRateTracker);\n  // exchangeRateTrackerC.setProvider(web3.currentProvider);\n\n  // const scheduledBalanceC = contract(ScheduledBalance);\n  // scheduledBalanceC.setProvider(web3.currentProvider);\n\n  // fixedPoint = await fixedPointC.new({from: userAddress})\n  // exchangeRateTracker = await exchangeRateTrackerC.new({from: userAddress})\n  // scheduledBalance = await scheduledBalanceC.new({from: userAddress})\n\n  // console.log(fixedPoint.address, exchangeRateTracker.address, scheduledBalance.address)\n\n  // Pod.link('FixedPoint', fixedPoint.address)\n  // Pod.link('ExchangeRateTracker', exchangeRateTracker.address)\n  // Pod.link('ScheduledBalance', scheduledBalance.address)\n\n  // Transaction 1\n  const pod = contract(Pod);\n  pod.setProvider(web3.currentProvider);\n  let podInstance = await pod.new({ from: userAddress });\n\n  // Transaction 2\n  await podInstance.initialize(poolAddress, { from: userAddress });\n\n  const newPod = {\n    address: podInstance.address,\n    name: podName,\n    members: [userAddress],\n  };\n\n  await addPodtoUser(newPod);\n};\n\nexport const defaultAddress = async () => {\n  const currentState = onboard.getState();\n  return currentState.address;\n};\n\nexport const getBalance = (address) => {\n  return web3.eth.getBalance(address);\n};\n\nexport const getDAIBalance = async () => {\n  const currentUser = await defaultAddress();\n\n  const daiContract = contract(ERC20);\n  daiContract.setProvider(web3.currentProvider);\n  const daiInstance = await daiContract.at(daiAddress);\n\n  const balance = daiInstance.balanceOf(currentUser);\n\n  return balance;\n};\n\nexport const depositToPod = async (podAddress, amount) => {\n  const currentUser = await defaultAddress();\n  const pod = contract(Pod);\n  pod.setProvider(web3.currentProvider);\n  let podInstance = await pod.at(podAddress);\n\n  const daiContract = contract(ERC20);\n  daiContract.setProvider(web3.currentProvider);\n  const daiInstance = await daiContract.at(daiAddress);\n\n  const depositAmount = new BigNumber(amount * new BigNumber(10 ** 18));\n\n  //Transaction 1\n  await daiInstance.approve(podAddress, depositAmount, { from: currentUser });\n  //Transaction 2\n  await podInstance.deposit(depositAmount, [], { from: currentUser });\n};\n\nexport const redeemFromPod = async (podAddress, amount) => {\n  const pod = contract(Pod);\n  pod.setProvider(web3.currentProvider);\n  let podInstance = await pod.at(podAddress);\n  await podInstance.withdrawPendingDeposit(amount, []);\n};\n\nexport const getPodQuery = async (podAddress) => {\n  const query = `\n  {\n    pod(id: \"${podAddress.toLowerCase()}\"){\n      id\n      address\n      podPlayers{\n        id\n        address\n        balance\n        balanceUnderlying\n        version\n      }\n      podPlayersCount\n      currentExchangeRateMantissa\n      balanceUnderlying\n      totalPendingDeposits\n      poolContract{\n        id\n        playersCount\n        openBalance\n        committedBalance\n        sponsorshipAndFeeBalance\n      }\n      version\n    }\n  }\n  `;\n\n  return request(\n    \"https://api.thegraph.com/subgraphs/name/pooltogether/pooltogether-kovan\",\n    query\n  );\n};\n","import React, { createContext, useMemo } from \"react\";\nimport {\n  getAccount,\n  getUserPods,\n  getPodQuery,\n  getEstimatedPrize,\n} from \"../services\";\n\nexport const ActionContext = createContext();\nexport const StateContext = createContext();\n\nexport const AppProvider = (props) => {\n  const [state, dispatch] = React.useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case \"SIGN_IN\":\n          return {\n            ...prevState,\n            walletAddress: action.walletAddress,\n          };\n        case \"SIGN_OUT\":\n          return {\n            ...prevState,\n            walletAddress: \"\",\n          };\n        case \"OPEN_MODAL\":\n          return {\n            ...prevState,\n            openModal: action.modal.openModal,\n            modalConfig: action.modal.modalConfig,\n          };\n        case \"SET_USER_PODS\":\n          return {\n            ...prevState,\n            userPods: action.userPods,\n          };\n        case \"SET_CURRENT_POD\":\n          return {\n            ...prevState,\n            currentPod: action.currentPod,\n          };\n        case \"SET_ESTIMATE_PRIZE\":\n          return {\n            ...prevState,\n            estimatedPrize: action.estimatedPrize,\n          };\n        default:\n      }\n    },\n    {\n      walletAddress: \"\",\n      openModal: false,\n      modalConfig: {},\n      userPods: [],\n      currentPod: {\n        address: \"\",\n        members: [],\n      },\n      estimatedPrize: \"\",\n    }\n  );\n\n  const actionContext = useMemo(\n    () => ({\n      signIn: async () => {\n        const walletAddress = await getAccount();\n        console.log(\"signin\", walletAddress);\n        dispatch({ type: \"SIGN_IN\", walletAddress });\n        return walletAddress;\n      },\n      signOut: () => {\n        dispatch({ type: \"SIGN_OUT\" });\n      },\n      toggleModal: (modal) => {\n        dispatch({ type: \"OPEN_MODAL\", modal });\n      },\n      fetchUserPodsList: async (walletAddress) => {\n        console.log(\"fetch all pods\", walletAddress);\n        if (!walletAddress) {\n          const walletAddress = await getAccount();\n          dispatch({ type: \"SIGN_IN\", walletAddress });\n        }\n        const modalOpen = {\n          openModal: true,\n          modalConfig: { loading: true, loadingMsg: \"Loading Pods...\" },\n        };\n        dispatch({ type: \"OPEN_MODAL\", modal: modalOpen });\n        const userPodsList = await getUserPods();\n        //await getEstimatedPrize()\n        console.log(\"userPodsList\", userPodsList);\n        dispatch({ type: \"SET_USER_PODS\", userPods: userPodsList });\n        const modalClose = {\n          openModal: false,\n          modalConfig: {},\n        };\n        dispatch({ type: \"OPEN_MODAL\", modal: modalClose });\n      },\n      setCurrentPod: async (selectedPod) => {\n        const modalOpen = {\n          openModal: true,\n          modalConfig: { loading: true, loadingMsg: \"Loading Pod Details...\" },\n        };\n        dispatch({ type: \"OPEN_MODAL\", modal: modalOpen });\n        const currentPodDetails = await getPodQuery(selectedPod.address);\n        console.log(\"currentPodDetails\", currentPodDetails);\n        selectedPod[\"podDetails\"] = currentPodDetails;\n        const estimatedPrize = await getEstimatedPrize(\n          selectedPod.podDetails.pod.poolContract.id\n        );\n        dispatch({ type: \"SET_ESTIMATE_PRIZE\", estimatedPrize });\n        console.log(\"selectedPod\", selectedPod);\n        dispatch({ type: \"SET_CURRENT_POD\", currentPod: selectedPod });\n        const modalClose = {\n          openModal: false,\n          modalConfig: {},\n        };\n        dispatch({ type: \"OPEN_MODAL\", modal: modalClose });\n      },\n    }),\n    []\n  );\n  return (\n    <ActionContext.Provider value={actionContext}>\n      <StateContext.Provider value={state}>\n        {props.children}\n      </StateContext.Provider>\n    </ActionContext.Provider>\n  );\n};\n","import React from \"react\";\nimport makeBlockie from \"ethereum-blockies-base64\";\nimport { StateContext, ActionContext } from \"../../hooks\";\nimport { shortenAddress } from \"../../utils\";\nimport \"./Toolbar.scss\";\n\nfunction Toolbar() {\n  const { walletAddress } = React.useContext(StateContext);\n  const { signIn } = React.useContext(ActionContext);\n\n  const getAddressTemplate = (address) => {\n    if (address) {\n      return (\n        <div className=\"address-container\">\n          <span>{shortenAddress(address)}</span>\n          <img\n            src={makeBlockie(address)}\n            alt=\"address blockie\"\n            className=\"address-blockie\"\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"address-container\">\n          <img\n            src={require(\"../../assets/icons/metamask.svg\")}\n            alt=\"metamask icon\"\n            className=\"metamask-icon\"\n          />\n          <span>Connect to Wallet</span>\n        </div>\n      );\n    }\n  };\n  return (\n    <div className=\"Toolbar\">\n      <div className=\"app-name\">Pod Together</div>\n      <div\n        className={\"wallet-container \" + (walletAddress ? \"connected\" : null)}\n        onClick={signIn}\n      >\n        {getAddressTemplate(walletAddress)}\n      </div>\n    </div>\n  );\n}\n\nexport default Toolbar;\n","import ChatButton from \"./ChatButton\";\n\nexport default ChatButton;\n","import React from \"react\";\nimport \"./ChatButton.scss\";\nimport ChatBox from \"3box-chatbox-react\";\nimport Box from \"3box\";\n\nclass ChatButton extends React.Component {\n  SPACE_NAME = \"PodChatSpace\";\n  THREAD_NAME = \"globalChat\";\n  constructor(props) {\n    super(props);\n    this.state = {\n      // box: {},\n      myProfile: {},\n      myAddress: this.props.walletAddress,\n      isReady: false,\n    };\n  }\n  async componentDidMount() {\n    let { box } = this.state;\n    box = await Box.create(window.ethereum);\n    this.setState({ box });\n  }\n  async componentDidUpdate() {\n    console.log('threadName', this.props.threadName)\n    if (this.props.walletAddress !== this.state.myAddress) {\n      // console.log(\"Entering\", this.props.walletAddress, this.state.myAddress);\n      this.handleLogin();\n    }\n  }\n  handleLogin = async () => {\n    let { box } = this.state;\n    const myAddress = this.props.walletAddress;\n    await box.auth([], { address: myAddress });\n    const myProfile = await Box.getProfile(myAddress);\n\n    box.onSyncDone(() => {\n      this.setState({ box });\n    });\n    this.setState({ box, myProfile, myAddress, isReady: true });\n  };\n  render() {\n    const { box, myAddress, myProfile } = this.state;\n    return (\n      <div className=\"chat-bar\">\n        {box && (\n          <ChatBox\n            // required\n            // spaceName='3boxtestcomments'\n            // threadName='ghostChatTest5'\n            spaceName={this.SPACE_NAME}\n            threadName={this.props.threadName}\n            // case A & B\n            box={box}\n            currentUserAddr={myAddress}\n            // case B\n            //@ts-ignore\n            loginFunction={this.handleLogin}\n            // case C\n            // ethereum={window.ethereum}\n\n            // optional\n            // mute\n            openOnMount\n            popupChat\n            colorTheme=\"#190532\"\n            // threadOpts={{}}\n            // spaceOpts={{}}\n            // useHovers={true}\n            currentUser3BoxProfile={myProfile}\n            userProfileURL={(address) =>\n              `https://userprofiles.co/user/${address}`\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ChatButton;\n","import React from \"react\";\nimport \"./PodDetails.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExternalLinkSquareAlt,\n  faCircle,\n  faLongArrowAltUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { shortenAddress } from \"../../utils\";\nimport ChatButton from \"../ChatButton\";\nimport { StateContext, ActionContext } from \"../../hooks\";\n\nimport { depositToPod, defaultAddress, redeemFromPod } from \"../../services\";\n\nfunction PodDetails(props) {\n  const [depositAmount, setDepositAmount] = React.useState(\"\");\n  const [withdrawAmount, setWithdrawAmount] = React.useState(\"\");\n\n  let address = \"0xa7B5B93BF8B322023BDa57e2C86B57f4DDb4F4a1\";\n  const { walletAddress, currentPod, estimatedPrize } = React.useContext(\n    StateContext\n  );\n\n  const actionDepositPod = async () => {\n    console.log(\"address\", currentPod.address);\n    await depositToPod(currentPod.address, depositAmount);\n  };\n\n  const actionWithdrawPod = async () => {\n    console.log(\"address\", currentPod.address);\n    await redeemFromPod(withdrawAmount);\n  };\n\n  return (\n    <div className=\"pod-details\">\n      {currentPod.address !== \"\" ? (\n        <div>\n          <div className=\"pool-together-details-container\">\n            <div className=\"pool-together-details-header\">\n              <span>Pool Together</span>\n              <span className=\"pool-together-details-header-divider\">\n                <FontAwesomeIcon icon={faCircle} />\n              </span>\n              <span>Stats</span>\n            </div>\n            <div className=\"pool-together-details-subtitle\">\n              <span className=\"pool-together-details-subtitle-title\">\n                Address:\n              </span>\n              <span className=\"pool-together-details-subtitle-value\">\n                <span>\n                  <a\n                    href={\n                      \"https://etherscan.io/address/\" +\n                      currentPod.podDetails.pod.poolContract.id\n                    }\n                  >\n                    {shortenAddress(currentPod.podDetails.pod.poolContract.id)}\n                  </a>\n                </span>\n                <span>\n                  <FontAwesomeIcon icon={faExternalLinkSquareAlt} />\n                </span>\n              </span>\n            </div>\n            <div className=\"pool-together-estimate-prize\">\n              <div className=\"pool-together-estimate-prize-title\">\n                Estimated prize:\n              </div>\n              <div className=\"pool-together-estimate-prize-value\">\n                {estimatedPrize}\n                <span className=\"pool-together-estimate-prize-icon\">\n                  <FontAwesomeIcon icon={faLongArrowAltUp} />\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"pod-details-container\">\n            <div className=\"pod-details-header\">\n              <span>{currentPod.name}</span>\n              <span className=\"pod-details-header-divider\">\n                <FontAwesomeIcon icon={faCircle} />\n              </span>\n              <span>Stats</span>\n            </div>\n            <div className=\"pod-details-subtitle\">\n              <span className=\"pool-together-details-subtitle-title\">\n                Address:\n              </span>\n              <span className=\"pool-together-details-subtitle-value\">\n                <span>\n                  <a\n                    href={\"https://etherscan.io/address/\" + currentPod.address}\n                  >\n                    {shortenAddress(currentPod.address)}\n                  </a>\n                </span>\n                <span>\n                  <FontAwesomeIcon icon={faExternalLinkSquareAlt} />\n                </span>\n              </span>\n            </div>\n            <div className=\"pod-details-stats-container\">\n              <div className=\"pod-details-stats-item\">\n                <div className=\"pod-details-stats-title\">Pod Balance</div>\n                <div className=\"pod-details-stats-value\">\n                  ${\" \"}\n                  {Math.round(\n                    (parseInt(currentPod.podDetails.pod.balanceUnderlying) -\n                      parseInt(\n                        currentPod.podDetails.pod.totalPendingDeposits\n                      )) /\n                      10 ** 18\n                  )}\n                </div>\n              </div>\n              <div className=\"pod-details-stats-item\">\n                <div className=\"pod-details-stats-title\">Your Balance</div>\n                <div className=\"pod-details-stats-value\">\n                  50 Tickets\n                </div>\n              </div>\n              <div className=\"pod-details-stats-item\">\n                <div className=\"pod-details-stats-title\">Pod Players</div>\n                <div className=\"pod-details-stats-value\">\n                  {currentPod.podDetails.pod.podPlayersCount}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"pod-actions-container\">\n            <div className=\"pod-actions-item\">\n              <div className=\"pod-actions-item-title\">Deposit</div>\n              <div className=\"pod-actions-item-input-container\">\n                <input\n                  type=\"number\"\n                  className=\"pod-actions-item-input\"\n                  placeholder=\"0 Dai\"\n                  onChange={(e) => setDepositAmount(e.target.value)}\n                />\n              </div>\n              <div className=\"pod-actions-item-button-container\">\n                <button\n                  className=\"pod-actions-item-button\"\n                  onClick={actionDepositPod}\n                >\n                  Deposit\n                </button>\n              </div>\n            </div>\n            <div className=\"pod-actions-item\">\n              <div className=\"pod-actions-item-title\">Withdraw</div>\n              <div className=\"pod-actions-item-input-container\">\n                <input\n                  type=\"number\"\n                  className=\"pod-actions-item-input\"\n                  placeholder=\"0 Dai\"\n                  onChange={(e) => setWithdrawAmount(e.target.value)}\n                />\n              </div>\n              <div className=\"pod-actions-item-button-container\">\n                <button\n                  className=\"pod-actions-item-button\"\n                  onClick={actionWithdrawPod}\n                >\n                  Withdraw\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"pools-stats-container\">\n            <div className=\"pool-together-details-header\">\n              <span>Stats</span>\n            </div>\n            <div className=\"pool-together-details-stats-container\">\n              <div className=\"pool-together-details-stats-item\">\n                <div className=\"pool-together-details-stats-title\">\n                  Total contract balance (Dai)\n                </div>\n                <div className=\"pool-together-details-stats-value\">\n                  $\n                  {Math.round(\n                    parseInt(\n                      currentPod.podDetails.pod.poolContract.committedBalance\n                    ) /\n                      10 ** 18 +\n                      parseInt(\n                        currentPod.podDetails.pod.poolContract.openBalance\n                      ) /\n                        10 ** 18 +\n                      parseInt(\n                        currentPod.podDetails.pod.poolContract\n                          .sponsorshipAndFeeBalance\n                      ) /\n                        10 ** 18\n                  )}\n                </div>\n              </div>\n              <div className=\"pool-together-details-stats-item\">\n                <div className=\"pool-together-details-stats-title\">\n                  # of current players\n                </div>\n                <div className=\"pool-together-details-stats-value\">\n                  {currentPod.podDetails.pod.poolContract.playersCount}\n                </div>\n              </div>\n            </div>\n          </div>\n          <ChatButton\n            threadName={currentPod.address}\n            walletAddress={walletAddress}\n          />\n        </div>\n      ) : (\n        <div className=\"pool-together-details-container\">\n          <div className=\"pool-together-details-header\">\n            <span>Select a Pod From the left OR Add a New Pod</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PodDetails;\n","import React from \"react\";\nimport \"./MemberListRightBar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShareAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport makeBlockie from \"ethereum-blockies-base64\";\nimport { shortenAddress } from \"../../utils\";\nimport { ActionContext, StateContext } from \"../../hooks\";\n\nfunction MemberListRightBar(props) {\n  const { toggleModal } = React.useContext(ActionContext);\n  const { currentPod } = React.useContext(StateContext);\n  const openModal = () => {\n    toggleModal({\n      openModal: true,\n      modalConfig: {\n        inviteLink: `http://localhost:3001/${currentPod.address}/join`,\n      },\n    });\n  };\n  return (\n    <>\n      {currentPod.address && (\n        <div className=\"member-list-right-bar\">\n          <div className=\"member-list-header\">Pod Member List</div>\n          <div className=\"member-list-container\">\n            {currentPod.members.length > 0 ? (\n              currentPod.members.map((member, i) => {\n                if (member) {\n                  return (\n                    <div key={i}>\n                      <div className=\"member-list-item\">\n                        <img\n                          src={makeBlockie(member)}\n                          alt=\"address blockie\"\n                          className=\"member-address-blockie\"\n                        />\n                        <span className=\"member-address\">\n                          {shortenAddress(member)}\n                        </span>\n                      </div>\n                    </div>\n                  );\n                }\n              })\n            ) : (\n              <div>\n                <h4>No Members Selected</h4>\n              </div>\n            )}\n          </div>\n          <div className=\"member-invite-link\">\n            <span className=\"member-invite-title\">Invite Members</span>\n            <button\n              className=\"member-invite-button\"\n              onClick={(e) => openModal()}\n            >\n              <span>\n                <FontAwesomeIcon icon={faShareAlt} />\n              </span>\n              <span className=\"member-invite-button-title\">Share</span>\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default MemberListRightBar;\n","import React from \"react\";\nimport \"./PodListLeftBar.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { ActionContext, StateContext } from \"../../hooks\";\n\nfunction PodListLeftBar(props) {\n  const { toggleModal, setCurrentPod } = React.useContext(ActionContext);\n  const { userPods } = React.useContext(StateContext);\n\n  const openModal = () => {\n    toggleModal({\n      openModal: true,\n      modalConfig: { addPodAddress: true },\n    });\n  };\n\n  return (\n    <div className=\"pod-list-left-bar\">\n      <div className=\"pod-list-header-container\">\n        <div className=\"pod-list-header-title\">Pod List</div>\n\n        <button className=\"add-pod-button\" onClick={(e) => openModal()}>\n          <span>\n            <FontAwesomeIcon icon={faPlus} />\n          </span>\n          <span className=\"add-pod-button-title\">Add</span>\n        </button>\n      </div>\n      <div className=\"pod-list-container\">\n        {userPods.map((pod, key) => (\n          <div\n            key={key}\n            onClick={(e) => setCurrentPod(pod)}\n            className=\"pod-list-item\"\n          >\n            {pod.name}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PodListLeftBar;\n","import PodListLeftBar from \"./PodListLeftBar\";\n\nexport default PodListLeftBar;\n","import React from \"react\";\nimport PodDetails from \"../PodDetails/PodDetails\";\nimport MemberListRightBar from \"../MemberListRightBar/MemberListRightBar\";\nimport PodListLeftBar from \"../PodListLeftBar\";\nimport \"./Home.scss\";\nimport { useLocation } from \"react-router-dom\";\nimport { StateContext, ActionContext } from \"../../hooks\";\n\nfunction Home() {\n  const { fetchUserPodsList, toggleModal } = React.useContext(ActionContext);\n  const { walletAddress } = React.useContext(StateContext);\n  let location = useLocation();\n\n  React.useEffect(() => {\n    // let userPods = [{\n    //   address: '0x395fcb67ff8fdf5b9e2aeecc02ef7a8de87a6677',\n    //   name: 'Family',\n    //   members: ['0x72016020d7F79882c0Fe06BDA0e61A3CE308c4eE', '0x2A01812d4e8306cF61B29324082205a3D7BDa2A0'],\n    // },{\n    //   address: '0x395fcb67ff8fdf5b9e2aeecc02ef7a8de87a6677',\n    //   name: 'Friends',\n    //   members: ['0x2A01812d4e8306cF61B29324082205a3D7BDa2A0', '0x72016020d7F79882c0Fe06BDA0e61A3CE308c4eE'],\n    // }]\n    // setUserPods(userPods);\n    console.log(location.pathname);\n    const referralLink = location.pathname.split(\"/\")[1];\n    const join = location.pathname.split(\"/\")[2];\n    console.log(referralLink, join);\n    if (join && join.toLowerCase() === \"join\") {\n      toggleModal({\n        openModal: true,\n        modalConfig: { addPodAddress: true, referralLink },\n      });\n    } else {\n      fetchUserPodsList(walletAddress);\n    }\n  }, []);\n\n  return (\n    <div className=\"Home\">\n      <PodListLeftBar></PodListLeftBar>\n      <PodDetails></PodDetails>\n      <MemberListRightBar></MemberListRightBar>\n    </div>\n  );\n}\n\nexport default Home;\n","import Home from \"./Home\";\n\nexport default Home;\n","import React from \"react\";\nimport \"./Modal.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport copy from \"clipboard-copy\";\nimport { faCopy } from \"@fortawesome/free-regular-svg-icons\";\nimport { StateContext, ActionContext } from \"../../hooks\";\nimport { createPod, addPodtoUser } from \"../../services\";\n\nfunction Modal() {\n  const { modalConfig, openModal, walletAddress } = React.useContext(\n    StateContext\n  );\n  const { toggleModal, fetchUserPodsList, signIn } = React.useContext(\n    ActionContext\n  );\n\n  console.log(\"Refferal\", modalConfig.referralLink);\n  const [existingPodAddress, setExistingPodAddress] = React.useState(\n    modalConfig.referralLink ? modalConfig.referralLink : \"\"\n  );\n  const [newPodName, setNewPodName] = React.useState(\"\");\n\n  const copyToClipboard = () => {\n    copy(modalConfig.inviteLink);\n  };\n\n  const addExistingPod = async () => {\n    if (existingPodAddress) {\n      let wallet = null;\n      if (!walletAddress) {\n        wallet = await signIn();\n      }\n      setTimeout(async () => {\n        toggleModal({\n          openModal: true,\n          modalConfig: { loading: true, loadingMsg: \"Joining Pod...\" },\n        });\n        // const wallet = walletAddress;\n        console.log(\"wallet\", wallet);\n        await addPodtoUser(existingPodAddress);\n\n        fetchUserPodsList(wallet);\n      }, 20);\n    }\n  };\n  console.log(\"Wallet address\", walletAddress);\n\n  React.useEffect(() => {\n    setExistingPodAddress(modalConfig.referralLink);\n  }, [modalConfig.referralLink]);\n\n  return (\n    <div>\n      {modalConfig.inviteLink ? (\n        <div>\n          <div\n            className={`modal-overlay ${!openModal ? \"closed\" : null}`}\n            id=\"modal-overlay\"\n            onClick={(e) => toggleModal({ openModal: false, modalConfig: {} })}\n          ></div>\n\n          <div className={`modal ${!openModal ? \"closed\" : null}`} id=\"modal\">\n            <button\n              className=\"close-button\"\n              id=\"close-button\"\n              onClick={(e) =>\n                toggleModal({ openModal: false, modalConfig: {} })\n              }\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n            <div className=\"modal-guts\">\n              <div className=\"modal-show-invite-link\">\n                <div className=\"modal-title\">Your Pod Invite Link</div>\n                <div className=\"form-elements\">\n                  <div\n                    className=\"invite-link-container\"\n                    onClick={copyToClipboard}\n                  >\n                    <span className=\"invite-link\">\n                      {modalConfig.inviteLink}\n                    </span>\n                    <span>\n                      <FontAwesomeIcon icon={faCopy} />\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {modalConfig.addPodAddress ? (\n        <div>\n          <div\n            className={`modal-overlay ${!openModal ? \"closed\" : null}`}\n            id=\"modal-overlay\"\n            onClick={(e) => toggleModal({ openModal: false, modalConfig: {} })}\n          ></div>\n\n          <div className={`modal ${!openModal ? \"closed\" : null}`} id=\"modal\">\n            <button\n              className=\"close-button\"\n              id=\"close-button\"\n              onClick={(e) =>\n                toggleModal({ openModal: false, modalConfig: {} })\n              }\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n            <div className=\"modal-guts\">\n              <div className=\"modal-add-pod\">\n                <div className=\"modal-title\">\n                  Enter Your Pod Invite Link or Address\n                </div>\n                <div className=\"input-elements-container\">\n                  <input\n                    onChange={(e) => setExistingPodAddress(e.target.value)}\n                    value={existingPodAddress}\n                    type=\"text\"\n                    placeholder=\"Add Pod Address\"\n                    className=\"input-elements\"\n                  />\n                  <button\n                    onClick={addExistingPod}\n                    type=\"button\"\n                    className=\"input-elements-button\"\n                    disabled={existingPodAddress === \"\"}\n                  >\n                    Join Pod\n                  </button>\n                </div>\n                <h3 className=\"pod-add-divider\">OR</h3>\n                <div className=\"input-elements-container\">\n                  <input\n                    onChange={(e) => setNewPodName(e.target.value)}\n                    value={newPodName}\n                    placeholder=\"Enter Pod Name\"\n                    type=\"text\"\n                    className=\"input-elements\"\n                  />\n                  <button\n                    onClick={(e) => createPod(newPodName)}\n                    type=\"button\"\n                    className=\"input-elements-button\"\n                    disabled={newPodName === \"\"}\n                  >\n                    Create a New Pod\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {modalConfig.loading && (\n        <div>\n          <div\n            className={`modal-overlay ${!openModal ? \"closed\" : null}`}\n            id=\"modal-overlay\"\n            onClick={(e) => toggleModal({ openModal: false, modalConfig: {} })}\n          ></div>\n\n          <div className={`modal ${!openModal ? \"closed\" : null}`} id=\"modal\">\n            <button\n              className=\"close-button\"\n              id=\"close-button\"\n              onClick={(e) =>\n                toggleModal({ openModal: false, modalConfig: {} })\n              }\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n            <div className=\"modal-guts\">\n              <div className=\"modal-loading\">\n                <div className=\"loader-container\">\n                  <div className=\"lds-ring\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                  </div>\n                </div>\n                <div className=\"modal-title\">{modalConfig.loadingMsg}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Modal;\n","import Modal from \"./Modal\";\n\nexport default Modal;\n","import React, { useEffect } from \"react\";\nimport \"./App.scss\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport Home from \"./components/Home\";\nimport Modal from \"./components/Modal\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction App() {\n  let location = useLocation();\n\n  useEffect(() => {\n    console.log(location.pathname);\n  }, []);\n  return (\n    <div className=\"App\">\n      <Modal />\n      <Toolbar></Toolbar>\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { AppProvider } from \"./hooks\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// import { request } from \"graphql-request\";\n// import * as pt from \"pooltogetherjs\";\n\n// const query = `\n//   {\n//     pod(id: \"0x6f5587e191c8b222f634c78111f97c4851663ba4\"){\n//       id\n//       address\n//       podPlayers{\n//         id\n//         address\n//         balance\n//         balanceUnderlying\n//         version\n//       }\n//       podPlayersCount\n//       currentExchangeRateMantissa\n//       balanceUnderlying\n//       totalPendingDeposits\n//       poolContract{\n//         id\n//         playersCount\n//         openBalance\n//         committedBalance\n//         openDrawId\n//       }\n//       version\n//     }\n//   }\n//   `;\n\n// request(\n//   \"https://api.thegraph.com/subgraphs/name/pooltogether/pooltogether\",\n//   query\n// ).then((resp) => {\n//   console.log(\"resp, resp\", resp);\n//   const balance = resp.pod.poolContract.openBalance;\n//   const accountedBalance = resp.pod.poolContract.committedBalance;\n//   const drawId = resp.pod.poolContract.openDrawId;\n\n//   let draw;\n\n//   const drawQuery = `\n// {\n//   draws(where: {drawId: \"${drawId}\"}){\n//     id\n//     drawId\n//     feeBeneficiary\n//     secretHash\n//     feeFraction\n//   }\n// }\n// `;\n//   request(\n//     \"https://api.thegraph.com/subgraphs/name/pooltogether/pooltogether\",\n//     drawQuery\n//   ).then((draws) => {\n//     console.log(draws, \"draw\");\n\n//     const prize = pt.utils.calculatePrize(\n//       balance,\n//       accountedBalance,\n//       draws.draws[0].feeFraction\n//     );\n\n//     console.log('prixe', prize.toString())\n//   });\n// });\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AppProvider>\n        <App />\n      </AppProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}